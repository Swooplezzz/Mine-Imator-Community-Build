/*
	NOTE:
	This file was autogenerated by CppGen, changes may be overwritten and forever lost!
	Modify at your own risk!
	
	[ Generated on 2023.11.15 18:40:12 ]
*/

#include "Asset/Script.hpp"
#include "Asset/Shader.hpp"
#include "Asset/Sprite.hpp"
#include "Scripts.hpp"

#define AddSprite(name, id, numFrames, originX, originY) \
	new Sprite(name, id, numFrames, { originX, originY });

#define AddShader(name, id) \
	new Shader(name, id);

#define AddScript(name, id, ...) \
	new Script(name, id, [&](IntType s, IntType o, VarArgs a) __VA_ARGS__);

#define DefineObjectMember(subAssetId, memberId, member, enumType) \
	memberMap[subAssetId][memberId] = { enumType, (long long)&member - (long long)this };

#define DefineObjectFunction(subAssetId, funcId, ...) \
	instanceFuncMap[funcId] = [&](VarArgs a) __VA_ARGS__;

namespace CppProject
{
	void Asset::Load()
	{
		AddSprite("spr_16", ID_spr_16, 1, 0, 0);
		AddSprite("spr_arrow_ani", ID_spr_arrow_ani, 15, 10, 10);
		AddSprite("spr_arrow_small_ani", ID_spr_arrow_small_ani, 16, 12, 12);
		AddSprite("spr_arrow_up_down_ani", ID_spr_arrow_up_down_ani, 17, 10, 10);
		AddSprite("spr_bench", ID_spr_bench, 1, 43, 43);
		AddSprite("spr_bench_example", ID_spr_bench_example, 6, 0, 0);
		AddSprite("spr_blue_noise", ID_spr_blue_noise, 1, 0, 0);
		AddSprite("spr_checkbox", ID_spr_checkbox, 3, 9, 9);
		AddSprite("spr_checkbox_tick", ID_spr_checkbox_tick, 1, 6, 5);
		AddSprite("spr_chevron_ani", ID_spr_chevron_ani, 15, 12, 12);
		AddSprite("spr_circle_24", ID_spr_circle_24, 1, 15, 15);
		AddSprite("spr_circle_96", ID_spr_circle_96, 1, 49, 49);
		AddSprite("spr_colorpicker", ID_spr_colorpicker, 1, 0, 0);
		AddSprite("spr_colorpicker_cursor", ID_spr_colorpicker_cursor, 2, 8, 8);
		AddSprite("spr_colorpicker_hue", ID_spr_colorpicker_hue, 1, 0, 0);
		AddSprite("spr_connect", ID_spr_connect, 4, 2, 0);
		AddSprite("spr_connect_compact", ID_spr_connect_compact, 3, 2, 0);
		AddSprite("spr_control_dial", ID_spr_control_dial, 1, 34, 34);
		AddSprite("spr_default_material", ID_spr_default_material, 1, 0, 0);
		AddSprite("spr_default_normal", ID_spr_default_normal, 1, 0, 0);
		AddSprite("spr_dial_dash", ID_spr_dial_dash, 1, 68, 68);
		AddSprite("spr_dropshadow", ID_spr_dropshadow, 2, 0, 0);
		AddSprite("spr_fog", ID_spr_fog, 1, 0, 0);
		AddSprite("spr_font", ID_spr_font, 161, 0, 0);
		AddSprite("spr_handle", ID_spr_handle, 1, 2, 1);
		AddSprite("spr_icons", ID_spr_icons, 384, 12, 12);
		AddSprite("spr_jonathan_splash", ID_spr_jonathan_splash, 1, 250, 200);
		AddSprite("spr_load_assets", ID_spr_load_assets, 1, 114, 121);
		AddSprite("spr_logo", ID_spr_logo, 1, 250, 32);
		AddSprite("spr_map_cone", ID_spr_map_cone, 1, 0, 0);
		AddSprite("spr_map_cube", ID_spr_map_cube, 1, 0, 0);
		AddSprite("spr_map_cylinder", ID_spr_map_cylinder, 1, 0, 0);
		AddSprite("spr_marker", ID_spr_marker, 1, 1, 8);
		AddSprite("spr_marker_playback", ID_spr_marker_playback, 1, 4, 8);
		AddSprite("spr_marker_region", ID_spr_marker_region, 2, 10, 0);
		AddSprite("spr_marker_stripe", ID_spr_marker_stripe, 1, 0, 0);
		AddSprite("spr_missing_thumbnail", ID_spr_missing_thumbnail, 1, 0, 0);
		AddSprite("spr_modelbench_ad", ID_spr_modelbench_ad, 1, 180, 0);
		AddSprite("spr_path_example", ID_spr_path_example, 1, 0, 0);
		AddSprite("spr_pattern_left", ID_spr_pattern_left, 2, -1, 0);
		AddSprite("spr_pattern_right", ID_spr_pattern_right, 2, 4, 0);
		AddSprite("spr_radiobutton", ID_spr_radiobutton, 3, 10, 10);
		AddSprite("spr_radiobutton_hover", ID_spr_radiobutton_hover, 1, 12, 12);
		AddSprite("spr_rounded_2", ID_spr_rounded_2, 1, 2, 2);
		AddSprite("spr_selection_outline", ID_spr_selection_outline, 1, 0, 64);
		AddSprite("spr_shape", ID_spr_shape, 1, 0, 0);
		AddSprite("spr_stars", ID_spr_stars, 1, 0, 0);
		AddSprite("spr_startupasset_gradient", ID_spr_startupasset_gradient, 1, 0, 0);
		AddSprite("spr_tooltip_arrow", ID_spr_tooltip_arrow, 4, 7, 7);
		AddSprite("spr_unknown_pack", ID_spr_unknown_pack, 1, 0, 0);
		AddSprite("spr_upgrade_img", ID_spr_upgrade_img, 3, 0, 0);
		AddSprite("spr_watermark", ID_spr_watermark, 1, 0, 0);
		AddSprite("Test_Gobo", ID_Test_Gobo, 1, 0, 0);
		
		AddShader("shader_add", ID_shader_add);
		AddShader("shader_alpha_fix", ID_shader_alpha_fix);
		AddShader("shader_alpha_test", ID_shader_alpha_test);
		AddShader("shader_blend", ID_shader_blend);
		AddShader("shader_blur", ID_shader_blur);
		AddShader("shader_border", ID_shader_border);
		AddShader("shader_ca", ID_shader_ca);
		AddShader("shader_clip", ID_shader_clip);
		AddShader("shader_color_camera", ID_shader_color_camera);
		AddShader("shader_color_correction", ID_shader_color_correction);
		AddShader("shader_color_fog", ID_shader_color_fog);
		AddShader("shader_color_fog_lights", ID_shader_color_fog_lights);
		AddShader("shader_color_glow", ID_shader_color_glow);
		AddShader("shader_depth", ID_shader_depth);
		AddShader("shader_depth_ortho", ID_shader_depth_ortho);
		AddShader("shader_depth_point", ID_shader_depth_point);
		AddShader("shader_distort", ID_shader_distort);
		AddShader("shader_draw_texture", ID_shader_draw_texture);
		AddShader("shader_high_bloom_threshold", ID_shader_high_bloom_threshold);
		AddShader("shader_high_depth_normal", ID_shader_high_depth_normal);
		AddShader("shader_high_dof", ID_shader_high_dof);
		AddShader("shader_high_dof_coc", ID_shader_high_dof_coc);
		AddShader("shader_high_dof_coc_blur", ID_shader_high_dof_coc_blur);
		AddShader("shader_high_fog", ID_shader_high_fog);
		AddShader("shader_high_fog_apply", ID_shader_high_fog_apply);
		AddShader("shader_high_glint", ID_shader_high_glint);
		AddShader("shader_high_indirect_blur", ID_shader_high_indirect_blur);
		AddShader("shader_high_lighting_apply", ID_shader_high_lighting_apply);
		AddShader("shader_high_light_point", ID_shader_high_light_point);
		AddShader("shader_high_light_point_shadowless", ID_shader_high_light_point_shadowless);
		AddShader("shader_high_light_spot", ID_shader_high_light_spot);
		AddShader("shader_high_light_sun", ID_shader_high_light_sun);
		AddShader("shader_high_material", ID_shader_high_material);
		AddShader("shader_high_raytrace", ID_shader_high_raytrace);
		AddShader("shader_high_raytrace_resolve", ID_shader_high_raytrace_resolve);
		AddShader("shader_high_samples_add", ID_shader_high_samples_add);
		AddShader("shader_high_samples_unpack", ID_shader_high_samples_unpack);
		AddShader("shader_high_ssao", ID_shader_high_ssao);
		AddShader("shader_high_subsurface", ID_shader_high_subsurface);
		AddShader("shader_high_subsurface_scatter", ID_shader_high_subsurface_scatter);
		AddShader("shader_noise", ID_shader_noise);
		AddShader("shader_outline", ID_shader_outline);
		AddShader("shader_palette", ID_shader_palette);
		AddShader("shader_replace", ID_shader_replace);
		AddShader("shader_replace_alpha", ID_shader_replace_alpha);
		AddShader("shader_tonemap", ID_shader_tonemap);
		AddShader("shader_vignette", ID_shader_vignette);
		
		AddScript("access_error", ID_access_error, { access_error(); return VarType(); });
		AddScript("action_armor_editor", ID_action_armor_editor, { action_armor_editor(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_background_ambient_color", ID_action_background_ambient_color, { return action_background_ambient_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_biome", ID_action_background_biome, { return action_background_biome(ScopeAny(s, o), a[0]); });
		AddScript("action_background_fog_color", ID_action_background_fog_color, { return action_background_fog_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_fog_color_custom", ID_action_background_fog_color_custom, { return action_background_fog_color_custom(ScopeAny(s, o), a[0]); });
		AddScript("action_background_fog_custom_object_color", ID_action_background_fog_custom_object_color, { return action_background_fog_custom_object_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_fog_distance", ID_action_background_fog_distance, { return action_background_fog_distance(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_fog_height", ID_action_background_fog_height, { return action_background_fog_height(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_fog_object_color", ID_action_background_fog_object_color, { return action_background_fog_object_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_fog_show", ID_action_background_fog_show, { return action_background_fog_show(ScopeAny(s, o), a[0]); });
		AddScript("action_background_fog_size", ID_action_background_fog_size, { return action_background_fog_size(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_fog_sky", ID_action_background_fog_sky, { return action_background_fog_sky(ScopeAny(s, o), a[0]); });
		AddScript("action_background_foliage_color", ID_action_background_foliage_color, { return action_background_foliage_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_grass_color", ID_action_background_grass_color, { return action_background_grass_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_ground_show", ID_action_background_ground_show, { return action_background_ground_show(ScopeAny(s, o), a[0]); });
		AddScript("action_background_ground_slot", ID_action_background_ground_slot, { return action_background_ground_slot(ScopeAny(s, o), a[0]); });
		AddScript("action_background_ground_tex", ID_action_background_ground_tex, { return action_background_ground_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_background_ground_tex_material", ID_action_background_ground_tex_material, { return action_background_ground_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_background_ground_tex_normal", ID_action_background_ground_tex_normal, { return action_background_ground_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_background_image", ID_action_background_image, { return action_background_image(ScopeAny(s, o), a[0]); });
		AddScript("action_background_image_box_mapped", ID_action_background_image_box_mapped, { action_background_image_box_mapped(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_background_image_rotation", ID_action_background_image_rotation, { return action_background_image_rotation(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_image_save_map", ID_action_background_image_save_map, { action_background_image_save_map(); return VarType(); });
		AddScript("action_background_image_show", ID_action_background_image_show, { return action_background_image_show(ScopeAny(s, o), a[0]); });
		AddScript("action_background_image_stretch", ID_action_background_image_stretch, { action_background_image_stretch(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_background_image_type", ID_action_background_image_type, { action_background_image_type(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_background_leaves_acacia_color", ID_action_background_leaves_acacia_color, { return action_background_leaves_acacia_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_leaves_birch_color", ID_action_background_leaves_birch_color, { return action_background_leaves_birch_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_leaves_dark_oak_color", ID_action_background_leaves_dark_oak_color, { return action_background_leaves_dark_oak_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_leaves_jungle_color", ID_action_background_leaves_jungle_color, { return action_background_leaves_jungle_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_leaves_mangrove_color", ID_action_background_leaves_mangrove_color, { return action_background_leaves_mangrove_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_leaves_oak_color", ID_action_background_leaves_oak_color, { return action_background_leaves_oak_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_leaves_spruce_color", ID_action_background_leaves_spruce_color, { return action_background_leaves_spruce_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_night_color", ID_action_background_night_color, { return action_background_night_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sky_clouds_color", ID_action_background_sky_clouds_color, { return action_background_sky_clouds_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sky_clouds_height", ID_action_background_sky_clouds_height, { return action_background_sky_clouds_height(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sky_clouds_mode", ID_action_background_sky_clouds_mode, { action_background_sky_clouds_mode(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_background_sky_clouds_offset", ID_action_background_sky_clouds_offset, { return action_background_sky_clouds_offset(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sky_clouds_show", ID_action_background_sky_clouds_show, { return action_background_sky_clouds_show(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sky_clouds_size", ID_action_background_sky_clouds_size, { action_background_sky_clouds_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_background_sky_clouds_speed", ID_action_background_sky_clouds_speed, { return action_background_sky_clouds_speed(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sky_clouds_tex", ID_action_background_sky_clouds_tex, { return action_background_sky_clouds_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sky_clouds_thickness", ID_action_background_sky_clouds_thickness, { action_background_sky_clouds_thickness(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_background_sky_color", ID_action_background_sky_color, { return action_background_sky_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sky_moon_angle", ID_action_background_sky_moon_angle, { return action_background_sky_moon_angle(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sky_moon_phase", ID_action_background_sky_moon_phase, { return action_background_sky_moon_phase(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sky_moon_scale", ID_action_background_sky_moon_scale, { return action_background_sky_moon_scale(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sky_moon_tex", ID_action_background_sky_moon_tex, { return action_background_sky_moon_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sky_rotation", ID_action_background_sky_rotation, { return action_background_sky_rotation(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sky_sun_angle", ID_action_background_sky_sun_angle, { return action_background_sky_sun_angle(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sky_sun_scale", ID_action_background_sky_sun_scale, { return action_background_sky_sun_scale(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sky_sun_tex", ID_action_background_sky_sun_tex, { return action_background_sky_sun_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sky_time", ID_action_background_sky_time, { return action_background_sky_time(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sunlight_angle", ID_action_background_sunlight_angle, { return action_background_sunlight_angle(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_sunlight_color", ID_action_background_sunlight_color, { return action_background_sunlight_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_sunlight_strength", ID_action_background_sunlight_strength, { return action_background_sunlight_strength(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_texture_animation_speed", ID_action_background_texture_animation_speed, { return action_background_texture_animation_speed(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_twilight", ID_action_background_twilight, { return action_background_twilight(ScopeAny(s, o), a[0]); });
		AddScript("action_background_water_color", ID_action_background_water_color, { return action_background_water_color(ScopeAny(s, o), a[0]); });
		AddScript("action_background_wind", ID_action_background_wind, { return action_background_wind(ScopeAny(s, o), a[0]); });
		AddScript("action_background_wind_direction", ID_action_background_wind_direction, { return action_background_wind_direction(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_wind_directional_speed", ID_action_background_wind_directional_speed, { return action_background_wind_directional_speed(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_wind_directional_strength", ID_action_background_wind_directional_strength, { return action_background_wind_directional_strength(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_wind_speed", ID_action_background_wind_speed, { return action_background_wind_speed(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_background_wind_strength", ID_action_background_wind_strength, { return action_background_wind_strength(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_bench_block_name", ID_action_bench_block_name, { return action_bench_block_name(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_block_state", ID_action_bench_block_state, { return action_bench_block_state(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_block_tex", ID_action_bench_block_tex, { return action_bench_block_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_block_tex_material", ID_action_bench_block_tex_material, { return action_bench_block_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_block_tex_normal", ID_action_bench_block_tex_normal, { return action_bench_block_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_create", ID_action_bench_create, { action_bench_create(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false)); return VarType(); });
		AddScript("action_bench_item_3d", ID_action_bench_item_3d, { action_bench_item_3d(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_item_bounce", ID_action_bench_item_bounce, { action_bench_item_bounce(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_item_face_camera", ID_action_bench_item_face_camera, { action_bench_item_face_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_item_slot", ID_action_bench_item_slot, { action_bench_item_slot(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_item_spin", ID_action_bench_item_spin, { action_bench_item_spin(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_item_tex", ID_action_bench_item_tex, { return action_bench_item_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_item_tex_material", ID_action_bench_item_tex_material, { return action_bench_item_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_item_tex_normal", ID_action_bench_item_tex_normal, { return action_bench_item_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_light_type", ID_action_bench_light_type, { action_bench_light_type(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_model", ID_action_bench_model, { return action_bench_model(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_model_blend_color", ID_action_bench_model_blend_color, { action_bench_model_blend_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_model_name", ID_action_bench_model_name, { return action_bench_model_name(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_model_part_name", ID_action_bench_model_part_name, { return action_bench_model_part_name(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_model_state", ID_action_bench_model_state, { return action_bench_model_state(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_model_tex", ID_action_bench_model_tex, { return action_bench_model_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_model_tex_material", ID_action_bench_model_tex_material, { return action_bench_model_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_model_tex_normal", ID_action_bench_model_tex_normal, { return action_bench_model_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_particles", ID_action_bench_particles, { return action_bench_particles(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_scenery", ID_action_bench_scenery, { return action_bench_scenery(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_shape_face_camera", ID_action_bench_shape_face_camera, { action_bench_shape_face_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_shape_tex", ID_action_bench_shape_tex, { return action_bench_shape_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_shape_tex_map", ID_action_bench_shape_tex_map, { action_bench_shape_tex_map(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_shape_tex_material", ID_action_bench_shape_tex_material, { return action_bench_shape_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_shape_tex_normal", ID_action_bench_shape_tex_normal, { return action_bench_shape_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_bench_shape_type", ID_action_bench_shape_type, { action_bench_shape_type(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_text_3d", ID_action_bench_text_3d, { action_bench_text_3d(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_text_face_camera", ID_action_bench_text_face_camera, { action_bench_text_face_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_bench_text_font", ID_action_bench_text_font, { return action_bench_text_font(ScopeAny(s, o), a[0]); });
		AddScript("action_collapse", ID_action_collapse, { action_collapse(a[0], a[1]); return VarType(); });
		AddScript("action_group_bend_sliders", ID_action_group_bend_sliders, { action_group_bend_sliders(ScopeAny(s, o)); return VarType(); });
		AddScript("action_group_combine_scale", ID_action_group_combine_scale, { action_group_combine_scale(ScopeAny(s, o)); return VarType(); });
		AddScript("action_group_copy", ID_action_group_copy, { action_group_copy(ScopeAny(s, o)); return VarType(); });
		AddScript("action_group_copy_global", ID_action_group_copy_global, { action_group_copy_global(ScopeAny(s, o)); return VarType(); });
		AddScript("action_group_paste", ID_action_group_paste, { return action_group_paste(ScopeAny(s, o)); });
		AddScript("action_group_reset", ID_action_group_reset, { action_group_reset(ScopeAny(s, o)); return VarType(); });
		AddScript("action_lib_animate", ID_action_lib_animate, { action_lib_animate(ScopeAny(s, o)); return VarType(); });
		AddScript("action_lib_block_name", ID_action_lib_block_name, { action_lib_block_name(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_block_randomize", ID_action_lib_block_randomize, { action_lib_block_randomize(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_block_repeat", ID_action_lib_block_repeat, { action_lib_block_repeat(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_block_repeat_enable", ID_action_lib_block_repeat_enable, { action_lib_block_repeat_enable(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_block_state", ID_action_lib_block_state, { action_lib_block_state(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_block_tex", ID_action_lib_block_tex, { return action_lib_block_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_block_tex_material", ID_action_lib_block_tex_material, { return action_lib_block_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_block_tex_normal", ID_action_lib_block_tex_normal, { return action_lib_block_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_bodypart_model_name", ID_action_lib_bodypart_model_name, { action_lib_bodypart_model_name(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_bodypart_model_state", ID_action_lib_bodypart_model_state, { return action_lib_bodypart_model_state(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_duplicate", ID_action_lib_duplicate, { action_lib_duplicate(ScopeAny(s, o)); return VarType(); });
		AddScript("action_lib_item_3d", ID_action_lib_item_3d, { action_lib_item_3d(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_item_bounce", ID_action_lib_item_bounce, { action_lib_item_bounce(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_item_face_camera", ID_action_lib_item_face_camera, { action_lib_item_face_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_item_slot", ID_action_lib_item_slot, { action_lib_item_slot(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_item_spin", ID_action_lib_item_spin, { action_lib_item_spin(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_item_tex", ID_action_lib_item_tex, { return action_lib_item_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_item_tex_material", ID_action_lib_item_tex_material, { return action_lib_item_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_item_tex_normal", ID_action_lib_item_tex_normal, { return action_lib_item_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_list", ID_action_lib_list, { action_lib_list(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_model", ID_action_lib_model, { return action_lib_model(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_model_blend_color", ID_action_lib_model_blend_color, { action_lib_model_blend_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_model_name", ID_action_lib_model_name, { action_lib_model_name(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_model_part_name", ID_action_lib_model_part_name, { action_lib_model_part_name(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_model_pattern", ID_action_lib_model_pattern, { action_lib_model_pattern(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("action_lib_model_state", ID_action_lib_model_state, { action_lib_model_state(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_model_tex", ID_action_lib_model_tex, { return action_lib_model_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_model_tex_material", ID_action_lib_model_tex_material, { return action_lib_model_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_model_tex_normal", ID_action_lib_model_tex_normal, { return action_lib_model_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_name", ID_action_lib_name, { action_lib_name(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_bounding_box_custom_end", ID_action_lib_pc_bounding_box_custom_end, { action_lib_pc_bounding_box_custom_end(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_bounding_box_custom_start", ID_action_lib_pc_bounding_box_custom_start, { action_lib_pc_bounding_box_custom_start(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_bounding_box_ground_z", ID_action_lib_pc_bounding_box_ground_z, { action_lib_pc_bounding_box_ground_z(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_bounding_box_relative", ID_action_lib_pc_bounding_box_relative, { action_lib_pc_bounding_box_relative(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_bounding_box_type", ID_action_lib_pc_bounding_box_type, { action_lib_pc_bounding_box_type(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_clear", ID_action_lib_pc_clear, { action_lib_pc_clear(); return VarType(); });
		AddScript("action_lib_pc_destroy_at_amount", ID_action_lib_pc_destroy_at_amount, { action_lib_pc_destroy_at_amount(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_destroy_at_amount_val", ID_action_lib_pc_destroy_at_amount_val, { action_lib_pc_destroy_at_amount_val(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_destroy_at_animation_finish", ID_action_lib_pc_destroy_at_animation_finish, { action_lib_pc_destroy_at_animation_finish(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_destroy_at_bounding_box", ID_action_lib_pc_destroy_at_bounding_box, { action_lib_pc_destroy_at_bounding_box(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_destroy_at_time", ID_action_lib_pc_destroy_at_time, { action_lib_pc_destroy_at_time(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_destroy_at_time_israndom", ID_action_lib_pc_destroy_at_time_israndom, { action_lib_pc_destroy_at_time_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_destroy_at_time_random_max", ID_action_lib_pc_destroy_at_time_random_max, { action_lib_pc_destroy_at_time_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_destroy_at_time_random_min", ID_action_lib_pc_destroy_at_time_random_min, { action_lib_pc_destroy_at_time_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_destroy_at_time_seconds", ID_action_lib_pc_destroy_at_time_seconds, { action_lib_pc_destroy_at_time_seconds(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_open", ID_action_lib_pc_open, { return action_lib_pc_open(ScopeAny(s, o)); });
		AddScript("action_lib_pc_spawn", ID_action_lib_pc_spawn, { action_lib_pc_spawn(); return VarType(); });
		AddScript("action_lib_pc_spawn_amount", ID_action_lib_pc_spawn_amount, { action_lib_pc_spawn_amount(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_spawn_constant", ID_action_lib_pc_spawn_constant, { action_lib_pc_spawn_constant(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_spawn_region_box_size", ID_action_lib_pc_spawn_region_box_size, { action_lib_pc_spawn_region_box_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_spawn_region_cube_size", ID_action_lib_pc_spawn_region_cube_size, { action_lib_pc_spawn_region_cube_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_spawn_region_path", ID_action_lib_pc_spawn_region_path, { action_lib_pc_spawn_region_path(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_spawn_region_path_radius", ID_action_lib_pc_spawn_region_path_radius, { action_lib_pc_spawn_region_path_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_spawn_region_sphere_radius", ID_action_lib_pc_spawn_region_sphere_radius, { action_lib_pc_spawn_region_sphere_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_spawn_region_type", ID_action_lib_pc_spawn_region_type, { action_lib_pc_spawn_region_type(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_spawn_region_use", ID_action_lib_pc_spawn_region_use, { action_lib_pc_spawn_region_use(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_add", ID_action_lib_pc_type_add, { action_lib_pc_type_add(ScopeAny(s, o)); return VarType(); });
		AddScript("action_lib_pc_type_alpha", ID_action_lib_pc_type_alpha, { action_lib_pc_type_alpha(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_alpha_add", ID_action_lib_pc_type_alpha_add, { action_lib_pc_type_alpha_add(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_alpha_add_israndom", ID_action_lib_pc_type_alpha_add_israndom, { action_lib_pc_type_alpha_add_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_alpha_add_random_max", ID_action_lib_pc_type_alpha_add_random_max, { action_lib_pc_type_alpha_add_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_alpha_add_random_min", ID_action_lib_pc_type_alpha_add_random_min, { action_lib_pc_type_alpha_add_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_alpha_israndom", ID_action_lib_pc_type_alpha_israndom, { action_lib_pc_type_alpha_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_alpha_random_max", ID_action_lib_pc_type_alpha_random_max, { action_lib_pc_type_alpha_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_alpha_random_min", ID_action_lib_pc_type_alpha_random_min, { action_lib_pc_type_alpha_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle", ID_action_lib_pc_type_angle, { action_lib_pc_type_angle(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_extend", ID_action_lib_pc_type_angle_extend, { action_lib_pc_type_angle_extend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_angle_israndom", ID_action_lib_pc_type_angle_israndom, { action_lib_pc_type_angle_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_angle_random_max", ID_action_lib_pc_type_angle_random_max, { action_lib_pc_type_angle_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_random_min", ID_action_lib_pc_type_angle_random_min, { action_lib_pc_type_angle_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed", ID_action_lib_pc_type_angle_speed, { action_lib_pc_type_angle_speed(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_add", ID_action_lib_pc_type_angle_speed_add, { action_lib_pc_type_angle_speed_add(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_add_israndom", ID_action_lib_pc_type_angle_speed_add_israndom, { action_lib_pc_type_angle_speed_add_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_add_random_max", ID_action_lib_pc_type_angle_speed_add_random_max, { action_lib_pc_type_angle_speed_add_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_add_random_min", ID_action_lib_pc_type_angle_speed_add_random_min, { action_lib_pc_type_angle_speed_add_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_israndom", ID_action_lib_pc_type_angle_speed_israndom, { action_lib_pc_type_angle_speed_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_mul", ID_action_lib_pc_type_angle_speed_mul, { action_lib_pc_type_angle_speed_mul(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_mul_israndom", ID_action_lib_pc_type_angle_speed_mul_israndom, { action_lib_pc_type_angle_speed_mul_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_mul_random_max", ID_action_lib_pc_type_angle_speed_mul_random_max, { action_lib_pc_type_angle_speed_mul_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_mul_random_min", ID_action_lib_pc_type_angle_speed_mul_random_min, { action_lib_pc_type_angle_speed_mul_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_random_max", ID_action_lib_pc_type_angle_speed_random_max, { action_lib_pc_type_angle_speed_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_angle_speed_random_min", ID_action_lib_pc_type_angle_speed_random_min, { action_lib_pc_type_angle_speed_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_bounce", ID_action_lib_pc_type_bounce, { action_lib_pc_type_bounce(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_bounce_factor", ID_action_lib_pc_type_bounce_factor, { action_lib_pc_type_bounce_factor(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_bounding_box", ID_action_lib_pc_type_bounding_box, { action_lib_pc_type_bounding_box(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color", ID_action_lib_pc_type_color, { action_lib_pc_type_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_israndom", ID_action_lib_pc_type_color_israndom, { action_lib_pc_type_color_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix", ID_action_lib_pc_type_color_mix, { action_lib_pc_type_color_mix(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix_enabled", ID_action_lib_pc_type_color_mix_enabled, { action_lib_pc_type_color_mix_enabled(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix_israndom", ID_action_lib_pc_type_color_mix_israndom, { action_lib_pc_type_color_mix_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix_random_end", ID_action_lib_pc_type_color_mix_random_end, { action_lib_pc_type_color_mix_random_end(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix_random_start", ID_action_lib_pc_type_color_mix_random_start, { action_lib_pc_type_color_mix_random_start(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix_time", ID_action_lib_pc_type_color_mix_time, { action_lib_pc_type_color_mix_time(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix_time_israndom", ID_action_lib_pc_type_color_mix_time_israndom, { action_lib_pc_type_color_mix_time_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix_time_random_max", ID_action_lib_pc_type_color_mix_time_random_max, { action_lib_pc_type_color_mix_time_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_color_mix_time_random_min", ID_action_lib_pc_type_color_mix_time_random_min, { action_lib_pc_type_color_mix_time_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_color_random_end", ID_action_lib_pc_type_color_random_end, { action_lib_pc_type_color_random_end(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_color_random_start", ID_action_lib_pc_type_color_random_start, { action_lib_pc_type_color_random_start(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_duplicate", ID_action_lib_pc_type_duplicate, { action_lib_pc_type_duplicate(ScopeAny(s, o)); return VarType(); });
		AddScript("action_lib_pc_type_list", ID_action_lib_pc_type_list, { action_lib_pc_type_list(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_name", ID_action_lib_pc_type_name, { action_lib_pc_type_name(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_orbit", ID_action_lib_pc_type_orbit, { action_lib_pc_type_orbit(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_remove", ID_action_lib_pc_type_remove, { action_lib_pc_type_remove(ScopeAny(s, o)); return VarType(); });
		AddScript("action_lib_pc_type_rot", ID_action_lib_pc_type_rot, { action_lib_pc_type_rot(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_extend", ID_action_lib_pc_type_rot_extend, { action_lib_pc_type_rot_extend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_rot_israndom", ID_action_lib_pc_type_rot_israndom, { action_lib_pc_type_rot_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_rot_random_max", ID_action_lib_pc_type_rot_random_max, { action_lib_pc_type_rot_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_random_min", ID_action_lib_pc_type_rot_random_min, { action_lib_pc_type_rot_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd", ID_action_lib_pc_type_rot_spd, { action_lib_pc_type_rot_spd(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_add", ID_action_lib_pc_type_rot_spd_add, { action_lib_pc_type_rot_spd_add(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_add_israndom", ID_action_lib_pc_type_rot_spd_add_israndom, { action_lib_pc_type_rot_spd_add_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_add_random_max", ID_action_lib_pc_type_rot_spd_add_random_max, { action_lib_pc_type_rot_spd_add_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_add_random_min", ID_action_lib_pc_type_rot_spd_add_random_min, { action_lib_pc_type_rot_spd_add_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_extend", ID_action_lib_pc_type_rot_spd_extend, { action_lib_pc_type_rot_spd_extend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_israndom", ID_action_lib_pc_type_rot_spd_israndom, { action_lib_pc_type_rot_spd_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_mul", ID_action_lib_pc_type_rot_spd_mul, { action_lib_pc_type_rot_spd_mul(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_mul_israndom", ID_action_lib_pc_type_rot_spd_mul_israndom, { action_lib_pc_type_rot_spd_mul_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_mul_random_max", ID_action_lib_pc_type_rot_spd_mul_random_max, { action_lib_pc_type_rot_spd_mul_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_mul_random_min", ID_action_lib_pc_type_rot_spd_mul_random_min, { action_lib_pc_type_rot_spd_mul_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_random_max", ID_action_lib_pc_type_rot_spd_random_max, { action_lib_pc_type_rot_spd_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_rot_spd_random_min", ID_action_lib_pc_type_rot_spd_random_min, { action_lib_pc_type_rot_spd_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_scale", ID_action_lib_pc_type_scale, { action_lib_pc_type_scale(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_scale_add", ID_action_lib_pc_type_scale_add, { action_lib_pc_type_scale_add(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_scale_add_israndom", ID_action_lib_pc_type_scale_add_israndom, { action_lib_pc_type_scale_add_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_scale_add_random_max", ID_action_lib_pc_type_scale_add_random_max, { action_lib_pc_type_scale_add_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_scale_add_random_min", ID_action_lib_pc_type_scale_add_random_min, { action_lib_pc_type_scale_add_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_scale_israndom", ID_action_lib_pc_type_scale_israndom, { action_lib_pc_type_scale_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_scale_random_max", ID_action_lib_pc_type_scale_random_max, { action_lib_pc_type_scale_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_scale_random_min", ID_action_lib_pc_type_scale_random_min, { action_lib_pc_type_scale_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spawn_rate", ID_action_lib_pc_type_spawn_rate, { action_lib_pc_type_spawn_rate(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spawn_region", ID_action_lib_pc_type_spawn_region, { action_lib_pc_type_spawn_region(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_spd", ID_action_lib_pc_type_spd, { action_lib_pc_type_spd(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spd_add", ID_action_lib_pc_type_spd_add, { action_lib_pc_type_spd_add(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spd_add_israndom", ID_action_lib_pc_type_spd_add_israndom, { action_lib_pc_type_spd_add_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_spd_add_random_max", ID_action_lib_pc_type_spd_add_random_max, { action_lib_pc_type_spd_add_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spd_add_random_min", ID_action_lib_pc_type_spd_add_random_min, { action_lib_pc_type_spd_add_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spd_extend", ID_action_lib_pc_type_spd_extend, { action_lib_pc_type_spd_extend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_spd_israndom", ID_action_lib_pc_type_spd_israndom, { action_lib_pc_type_spd_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_spd_mul", ID_action_lib_pc_type_spd_mul, { action_lib_pc_type_spd_mul(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spd_mul_israndom", ID_action_lib_pc_type_spd_mul_israndom, { action_lib_pc_type_spd_mul_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_spd_mul_random_max", ID_action_lib_pc_type_spd_mul_random_max, { action_lib_pc_type_spd_mul_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spd_mul_random_min", ID_action_lib_pc_type_spd_mul_random_min, { action_lib_pc_type_spd_mul_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spd_random_max", ID_action_lib_pc_type_spd_random_max, { action_lib_pc_type_spd_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_spd_random_min", ID_action_lib_pc_type_spd_random_min, { action_lib_pc_type_spd_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_angle", ID_action_lib_pc_type_sprite_angle, { action_lib_pc_type_sprite_angle(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_angle_add", ID_action_lib_pc_type_sprite_angle_add, { action_lib_pc_type_sprite_angle_add(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_angle_add_israndom", ID_action_lib_pc_type_sprite_angle_add_israndom, { action_lib_pc_type_sprite_angle_add_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_angle_add_random_max", ID_action_lib_pc_type_sprite_angle_add_random_max, { action_lib_pc_type_sprite_angle_add_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_angle_add_random_min", ID_action_lib_pc_type_sprite_angle_add_random_min, { action_lib_pc_type_sprite_angle_add_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_angle_israndom", ID_action_lib_pc_type_sprite_angle_israndom, { action_lib_pc_type_sprite_angle_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_angle_random_max", ID_action_lib_pc_type_sprite_angle_random_max, { action_lib_pc_type_sprite_angle_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_angle_random_min", ID_action_lib_pc_type_sprite_angle_random_min, { action_lib_pc_type_sprite_angle_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_animation_onend", ID_action_lib_pc_type_sprite_animation_onend, { action_lib_pc_type_sprite_animation_onend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_animation_speed", ID_action_lib_pc_type_sprite_animation_speed, { action_lib_pc_type_sprite_animation_speed(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_animation_speed_israndom", ID_action_lib_pc_type_sprite_animation_speed_israndom, { action_lib_pc_type_sprite_animation_speed_israndom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_animation_speed_random_max", ID_action_lib_pc_type_sprite_animation_speed_random_max, { action_lib_pc_type_sprite_animation_speed_random_max(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_animation_speed_random_min", ID_action_lib_pc_type_sprite_animation_speed_random_min, { action_lib_pc_type_sprite_animation_speed_random_min(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_frame_end", ID_action_lib_pc_type_sprite_frame_end, { action_lib_pc_type_sprite_frame_end(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_frame_height", ID_action_lib_pc_type_sprite_frame_height, { action_lib_pc_type_sprite_frame_height(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_frame_start", ID_action_lib_pc_type_sprite_frame_start, { action_lib_pc_type_sprite_frame_start(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_frame_width", ID_action_lib_pc_type_sprite_frame_width, { action_lib_pc_type_sprite_frame_width(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_template", ID_action_lib_pc_type_sprite_template, { action_lib_pc_type_sprite_template(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_template_random_frame", ID_action_lib_pc_type_sprite_template_random_frame, { action_lib_pc_type_sprite_template_random_frame(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_template_reverse", ID_action_lib_pc_type_sprite_template_reverse, { action_lib_pc_type_sprite_template_reverse(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_template_still_frame", ID_action_lib_pc_type_sprite_template_still_frame, { action_lib_pc_type_sprite_template_still_frame(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_sprite_template_tex", ID_action_lib_pc_type_sprite_template_tex, { return action_lib_pc_type_sprite_template_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_pc_type_sprite_tex", ID_action_lib_pc_type_sprite_tex, { return action_lib_pc_type_sprite_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_pc_type_sprite_tex_image", ID_action_lib_pc_type_sprite_tex_image, { action_lib_pc_type_sprite_tex_image(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_temp", ID_action_lib_pc_type_temp, { action_lib_pc_type_temp(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_pc_type_text", ID_action_lib_pc_type_text, { action_lib_pc_type_text(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_remove", ID_action_lib_remove, { action_lib_remove(ScopeAny(s, o)); return VarType(); });
		AddScript("action_lib_scenery", ID_action_lib_scenery, { return action_lib_scenery(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_scenery_load", ID_action_lib_scenery_load, { action_lib_scenery_load(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_shape_closed", ID_action_lib_shape_closed, { action_lib_shape_closed(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_shape_detail", ID_action_lib_shape_detail, { action_lib_shape_detail(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_shape_face_camera", ID_action_lib_shape_face_camera, { action_lib_shape_face_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_shape_invert", ID_action_lib_shape_invert, { action_lib_shape_invert(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_shape_save_map", ID_action_lib_shape_save_map, { action_lib_shape_save_map(); return VarType(); });
		AddScript("action_lib_shape_tex", ID_action_lib_shape_tex, { return action_lib_shape_tex(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_shape_tex_hmirror", ID_action_lib_shape_tex_hmirror, { action_lib_shape_tex_hmirror(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_shape_tex_hoffset", ID_action_lib_shape_tex_hoffset, { action_lib_shape_tex_hoffset(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_shape_tex_hrepeat", ID_action_lib_shape_tex_hrepeat, { action_lib_shape_tex_hrepeat(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_shape_tex_mapped", ID_action_lib_shape_tex_mapped, { action_lib_shape_tex_mapped(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_shape_tex_material", ID_action_lib_shape_tex_material, { return action_lib_shape_tex_material(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_shape_tex_normal", ID_action_lib_shape_tex_normal, { return action_lib_shape_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("action_lib_shape_tex_vmirror", ID_action_lib_shape_tex_vmirror, { action_lib_shape_tex_vmirror(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_shape_tex_voffset", ID_action_lib_shape_tex_voffset, { action_lib_shape_tex_voffset(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_shape_tex_vrepeat", ID_action_lib_shape_tex_vrepeat, { action_lib_shape_tex_vrepeat(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_lib_text_3d", ID_action_lib_text_3d, { action_lib_text_3d(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_text_face_camera", ID_action_lib_text_face_camera, { action_lib_text_face_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_lib_text_font", ID_action_lib_text_font, { return action_lib_text_font(ScopeAny(s, o), a[0]); });
		AddScript("action_project_grid_columns", ID_action_project_grid_columns, { action_project_grid_columns(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_grid_rows", ID_action_project_grid_rows, { action_project_grid_rows(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_aa", ID_action_project_render_aa, { action_project_render_aa(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_aa_power", ID_action_project_render_aa_power, { action_project_render_aa_power(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_alpha_mode", ID_action_project_render_alpha_mode, { action_project_render_alpha_mode(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_bend_style", ID_action_project_bend_style, { action_project_bend_style(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_block_emissive", ID_action_project_render_block_emissive, { action_project_render_block_emissive(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_block_subsurface", ID_action_project_render_block_subsurface, { action_project_render_block_subsurface(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_distance", ID_action_project_render_distance, { action_project_render_distance(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_export", ID_action_project_render_export, { return action_project_render_export(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(/*""*/ STR(0))); });
		AddScript("action_project_render_exposure", ID_action_project_render_exposure, { action_project_render_exposure(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_gamma", ID_action_project_render_gamma, { action_project_render_gamma(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_glint_speed", ID_action_project_render_glint_speed, { action_project_render_glint_speed(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_glint_strength", ID_action_project_render_glint_strength, { action_project_render_glint_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_glow", ID_action_project_render_glow, { action_project_render_glow(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_glow_falloff", ID_action_project_render_glow_falloff, { action_project_render_glow_falloff(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_glow_falloff_intensity", ID_action_project_render_glow_falloff_intensity, { action_project_render_glow_falloff_intensity(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_glow_falloff_radius", ID_action_project_render_glow_falloff_radius, { action_project_render_glow_falloff_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_glow_intensity", ID_action_project_render_glow_intensity, { action_project_render_glow_intensity(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_glow_radius", ID_action_project_render_glow_radius, { action_project_render_glow_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_import", ID_action_project_render_import, { return action_project_render_import(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(/*""*/ STR(0))); });
		AddScript("action_project_render_indirect", ID_action_project_render_indirect, { action_project_render_indirect(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_indirect_blur_radius", ID_action_project_render_indirect_blur_radius, { action_project_render_indirect_blur_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_indirect_precision", ID_action_project_render_indirect_precision, { action_project_render_indirect_precision(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_indirect_strength", ID_action_project_render_indirect_strength, { action_project_render_indirect_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_liquid_animation", ID_action_project_render_liquid_animation, { action_project_render_liquid_animation(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_material_maps", ID_action_project_render_material_maps, { action_project_render_material_maps(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_opaque_leaves", ID_action_project_render_opaque_leaves, { action_project_render_opaque_leaves(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_pass", ID_action_project_render_pass, { action_project_render_pass(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_reflections", ID_action_project_render_reflections, { action_project_render_reflections(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_reflections_fade_amount", ID_action_project_render_reflections_fade_amount, { action_project_render_reflections_fade_amount(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_reflections_precision", ID_action_project_render_reflections_precision, { action_project_render_reflections_precision(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_reflections_thickness", ID_action_project_render_reflections_thickness, { action_project_render_reflections_thickness(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_reset", ID_action_project_render_reset, { return action_project_render_reset(ScopeAny(s, o)); });
		AddScript("action_project_render_samples", ID_action_project_render_samples, { action_project_render_samples(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_settings", ID_action_project_render_settings, { return action_project_render_settings(ScopeAny(s, o), a[0]); });
		AddScript("action_project_render_shadows", ID_action_project_render_shadows, { action_project_render_shadows(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_shadows_point_buffer_size", ID_action_project_render_shadows_point_buffer_size, { return action_project_render_shadows_point_buffer_size(ScopeAny(s, o), a[0]); });
		AddScript("action_project_render_shadows_spot_buffer_size", ID_action_project_render_shadows_spot_buffer_size, { return action_project_render_shadows_spot_buffer_size(ScopeAny(s, o), a[0]); });
		AddScript("action_project_render_shadows_sun_buffer_size", ID_action_project_render_shadows_sun_buffer_size, { return action_project_render_shadows_sun_buffer_size(ScopeAny(s, o), a[0]); });
		AddScript("action_project_render_shadows_transparent", ID_action_project_render_shadows_transparent, { action_project_render_shadows_transparent(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_ssao", ID_action_project_render_ssao, { action_project_render_ssao(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_ssao_color", ID_action_project_render_ssao_color, { action_project_render_ssao_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_ssao_power", ID_action_project_render_ssao_power, { action_project_render_ssao_power(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_ssao_radius", ID_action_project_render_ssao_radius, { action_project_render_ssao_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_subsurface_highlight", ID_action_project_render_subsurface_highlight, { action_project_render_subsurface_highlight(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_subsurface_highlight_strength", ID_action_project_render_subsurface_highlight_strength, { action_project_render_subsurface_highlight_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_subsurface_samples", ID_action_project_render_subsurface_samples, { action_project_render_subsurface_samples(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_texture_filtering", ID_action_project_render_texture_filtering, { action_project_render_texture_filtering(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_texture_filtering_level", ID_action_project_render_texture_filtering_level, { action_project_render_texture_filtering_level(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_render_tonemapper", ID_action_project_render_tonemapper, { action_project_render_tonemapper(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_transparent_block_texture_filtering", ID_action_project_render_transparent_block_texture_filtering, { action_project_render_transparent_block_texture_filtering(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_render_water_reflections", ID_action_project_render_water_reflections, { action_project_render_water_reflections(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_project_tempo", ID_action_project_tempo, { action_project_tempo(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_project_video_height", ID_action_project_video_height, { return action_project_video_height(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_project_video_keep_aspect_ratio", ID_action_project_video_keep_aspect_ratio, { action_project_video_keep_aspect_ratio(ScopeAny(s, o)); return VarType(); });
		AddScript("action_project_video_template", ID_action_project_video_template, { return action_project_video_template(ScopeAny(s, o), a[0]); });
		AddScript("action_project_video_width", ID_action_project_video_width, { return action_project_video_width(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_recent_pin", ID_action_recent_pin, { action_recent_pin(a[0]); return VarType(); });
		AddScript("action_recent_remove", ID_action_recent_remove, { action_recent_remove(a[0]); return VarType(); });
		AddScript("action_recent_sort", ID_action_recent_sort, { action_recent_sort(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_load_render_settings", ID_action_load_render_settings, { return action_load_render_settings(ScopeAny(s, o), a[0]); });
		AddScript("action_restore_controls", ID_action_restore_controls, { return action_restore_controls(ScopeAny(s, o)); });
		AddScript("action_res_export", ID_action_res_export, { return action_res_export(ScopeAny(s, o)); });
		AddScript("action_res_font_load", ID_action_res_font_load, { action_res_font_load(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_image_load", ID_action_res_image_load, { action_res_image_load(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_res_import_world", ID_action_res_import_world, { return action_res_import_world(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("action_res_item_sheet_size", ID_action_res_item_sheet_size, { action_res_item_sheet_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_res_list", ID_action_res_list, { action_res_list(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_material_format", ID_action_res_material_format, { action_res_material_format(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_model_load", ID_action_res_model_load, { action_res_model_load(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_pack_load", ID_action_res_pack_load, { action_res_pack_load(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_preview_pack_block_sheet_ani", ID_action_res_preview_pack_block_sheet_ani, { action_res_preview_pack_block_sheet_ani(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_preview_pack_colormap", ID_action_res_preview_pack_colormap, { action_res_preview_pack_colormap(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_preview_pack_image", ID_action_res_preview_pack_image, { action_res_preview_pack_image(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_preview_pack_image_material", ID_action_res_preview_pack_image_material, { action_res_preview_pack_image_material(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_preview_pack_model_texture", ID_action_res_preview_pack_model_texture, { action_res_preview_pack_model_texture(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_preview_pack_particles", ID_action_res_preview_pack_particles, { action_res_preview_pack_particles(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_reload", ID_action_res_reload, { action_res_reload(ScopeAny(s, o)); return VarType(); });
		AddScript("action_res_remove", ID_action_res_remove, { action_res_remove(ScopeAny(s, o)); return VarType(); });
		AddScript("action_res_replace", ID_action_res_replace, { return action_res_replace(ScopeAny(s, o), a); });
		AddScript("action_res_scenery_animate", ID_action_res_scenery_animate, { action_res_scenery_animate(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_scenery_integrity", ID_action_res_scenery_integrity, { action_res_scenery_integrity(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_res_scenery_integrity_invert", ID_action_res_scenery_integrity_invert, { action_res_scenery_integrity_invert(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_scenery_palette", ID_action_res_scenery_palette, { action_res_scenery_palette(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_scenery_randomize", ID_action_res_scenery_randomize, { action_res_scenery_randomize(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_res_sound_load", ID_action_res_sound_load, { action_res_sound_load(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_accent_custom", ID_action_setting_accent_custom, { action_setting_accent_custom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_backup", ID_action_setting_backup, { action_setting_backup(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_backup_amount", ID_action_setting_backup_amount, { action_setting_backup_amount(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_backup_time", ID_action_setting_backup_time, { action_setting_backup_time(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_camera_lock_mouse", ID_action_setting_camera_lock_mouse, { return action_setting_camera_lock_mouse(ScopeAny(s, o), a[0]); });
		AddScript("action_setting_fade_gizmos", ID_action_setting_fade_gizmos, { action_setting_fade_gizmos(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_fast_modifier", ID_action_setting_fast_modifier, { action_setting_fast_modifier(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_gizmos_face_camera", ID_action_setting_gizmos_face_camera, { action_setting_gizmos_face_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_home_screen", ID_action_setting_home_screen, { return action_setting_home_screen(ScopeAny(s, o)); });
		AddScript("action_setting_interface_compact", ID_action_setting_interface_compact, { action_setting_interface_compact(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_interface_scale", ID_action_setting_interface_scale, { action_setting_interface_scale(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_interface_scale_auto", ID_action_setting_interface_scale_auto, { action_setting_interface_scale_auto(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_language_load", ID_action_setting_language_load, { return action_setting_language_load(ScopeAny(s, o), a[0]); });
		AddScript("action_setting_look_sensitivity", ID_action_setting_look_sensitivity, { action_setting_look_sensitivity(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_minecraft_assets_version", ID_action_setting_minecraft_assets_version, { action_setting_minecraft_assets_version(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_move_speed", ID_action_setting_move_speed, { action_setting_move_speed(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_program_mode", ID_action_setting_program_mode, { return action_setting_program_mode(ScopeAny(s, o), a[0]); });
		AddScript("action_setting_project_folder", ID_action_setting_project_folder, { action_setting_project_folder(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_reduced_motion", ID_action_setting_reduced_motion, { action_setting_reduced_motion(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_scenery_remove_edges", ID_action_setting_scenery_remove_edges, { action_setting_scenery_remove_edges(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_secondary_view", ID_action_setting_secondary_view, { action_setting_secondary_view(ScopeAny(s, o)); return VarType(); });
		AddScript("action_setting_separate_tool_modes", ID_action_setting_separate_tool_modes, { action_setting_separate_tool_modes(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_shortcuts_bar", ID_action_setting_shortcuts_bar, { action_setting_shortcuts_bar(ScopeAny(s, o)); return VarType(); });
		AddScript("action_setting_slow_modifier", ID_action_setting_slow_modifier, { action_setting_slow_modifier(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_snap_absolute", ID_action_setting_snap_absolute, { action_setting_snap_absolute(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_snap_size_position", ID_action_setting_snap_size_position, { action_setting_snap_size_position(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_snap_size_rotation", ID_action_setting_snap_size_rotation, { action_setting_snap_size_rotation(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_snap_size_scale", ID_action_setting_snap_size_scale, { action_setting_snap_size_scale(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_spawn_cameras", ID_action_setting_spawn_cameras, { action_setting_spawn_cameras(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_theme", ID_action_setting_theme, { action_setting_theme(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_timeline_autoscroll", ID_action_setting_timeline_autoscroll, { action_setting_timeline_autoscroll(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_timeline_compact", ID_action_setting_timeline_compact, { action_setting_timeline_compact(ScopeAny(s, o)); return VarType(); });
		AddScript("action_setting_timeline_display_frames", ID_action_setting_timeline_display_frames, { action_setting_timeline_display_frames(ScopeAny(s, o)); return VarType(); });
		AddScript("action_setting_timeline_display_time", ID_action_setting_timeline_display_time, { action_setting_timeline_display_time(ScopeAny(s, o)); return VarType(); });
		AddScript("action_setting_timeline_frame_snap", ID_action_setting_timeline_frame_snap, { action_setting_timeline_frame_snap(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_timeline_hide_ghosts", ID_action_setting_timeline_hide_ghosts, { action_setting_timeline_hide_ghosts(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_timeline_select_jump", ID_action_setting_timeline_select_jump, { action_setting_timeline_select_jump(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_timeline_show_markers", ID_action_setting_timeline_show_markers, { action_setting_timeline_show_markers(ScopeAny(s, o)); return VarType(); });
		AddScript("action_setting_unlimited_values", ID_action_setting_unlimited_values, { return action_setting_unlimited_values(ScopeAny(s, o), a[0]); });
		AddScript("action_setting_watermark_custom", ID_action_setting_watermark_custom, { return action_setting_watermark_custom(ScopeAny(s, o), a[0]); });
		AddScript("action_setting_watermark_halign", ID_action_setting_watermark_halign, { action_setting_watermark_halign(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_watermark_import", ID_action_setting_watermark_import, { return action_setting_watermark_import(ScopeAny(s, o)); });
		AddScript("action_setting_watermark_opacity", ID_action_setting_watermark_opacity, { action_setting_watermark_opacity(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_watermark_padding", ID_action_setting_watermark_padding, { action_setting_watermark_padding(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_watermark_reset", ID_action_setting_watermark_reset, { action_setting_watermark_reset(ScopeAny(s, o)); return VarType(); });
		AddScript("action_setting_watermark_scale", ID_action_setting_watermark_scale, { action_setting_watermark_scale(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_setting_watermark_valign", ID_action_setting_watermark_valign, { action_setting_watermark_valign(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_z_is_up", ID_action_setting_z_is_up, { action_setting_z_is_up(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_textbox_copy", ID_action_textbox_copy, { action_textbox_copy(ScopeAny(s, o)); return VarType(); });
		AddScript("action_textbox_cut", ID_action_textbox_cut, { action_textbox_cut(ScopeAny(s, o)); return VarType(); });
		AddScript("action_textbox_paste", ID_action_textbox_paste, { action_textbox_paste(ScopeAny(s, o)); return VarType(); });
		AddScript("action_textbox_select_all", ID_action_textbox_select_all, { action_textbox_select_all(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_add_sound", ID_action_tl_add_sound, { return action_tl_add_sound(ScopeAny(s, o)); });
		AddScript("action_tl_alpha_mode", ID_action_tl_alpha_mode, { action_tl_alpha_mode(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_alpha_mode_tree", ID_action_tl_alpha_mode_tree, { action_tl_alpha_mode_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_backfaces", ID_action_tl_backfaces, { action_tl_backfaces(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_backfaces_tree", ID_action_tl_backfaces_tree, { action_tl_backfaces_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_blend_mode", ID_action_tl_blend_mode, { action_tl_blend_mode(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_blend_mode_tree", ID_action_tl_blend_mode_tree, { action_tl_blend_mode_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_collapse_all", ID_action_tl_collapse_all, { action_tl_collapse_all(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_collapse_children", ID_action_tl_collapse_children, { action_tl_collapse_children(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_color_tag", ID_action_tl_color_tag, { action_tl_color_tag(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_color_tag_remove", ID_action_tl_color_tag_remove, { action_tl_color_tag_remove(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_depth", ID_action_tl_depth, { action_tl_depth(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_depth_tree", ID_action_tl_depth_tree, { action_tl_depth_tree(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("action_tl_deselect", ID_action_tl_deselect, { action_tl_deselect(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_deselect_all", ID_action_tl_deselect_all, { action_tl_deselect_all(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_duplicate", ID_action_tl_duplicate, { action_tl_duplicate(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_extend", ID_action_tl_extend, { action_tl_extend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_extend_all", ID_action_tl_extend_all, { action_tl_extend_all(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_extend_children", ID_action_tl_extend_children, { action_tl_extend_children(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_extend_children_tree", ID_action_tl_extend_children_tree, { action_tl_extend_children_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_fog", ID_action_tl_fog, { action_tl_fog(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_fog_tree", ID_action_tl_fog_tree, { action_tl_fog_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_folder", ID_action_tl_folder, { action_tl_folder(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_frame_alpha", ID_action_tl_frame_alpha, { action_tl_frame_alpha(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_attractor", ID_action_tl_frame_attractor, { action_tl_frame_attractor(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_bend_angle", ID_action_tl_frame_bend_angle, { action_tl_frame_bend_angle(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_bend_angle_xyz", ID_action_tl_frame_bend_angle_xyz, { action_tl_frame_bend_angle_xyz(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_blade_amount", ID_action_tl_frame_cam_blade_amount, { action_tl_frame_cam_blade_amount(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_blade_angle", ID_action_tl_frame_cam_blade_angle, { action_tl_frame_cam_blade_angle(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_bloom", ID_action_tl_frame_cam_bloom, { action_tl_frame_cam_bloom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_bloom_blend", ID_action_tl_frame_cam_bloom_blend, { action_tl_frame_cam_bloom_blend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_bloom_intensity", ID_action_tl_frame_cam_bloom_intensity, { action_tl_frame_cam_bloom_intensity(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_bloom_radius", ID_action_tl_frame_cam_bloom_radius, { action_tl_frame_cam_bloom_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_bloom_ratio", ID_action_tl_frame_cam_bloom_ratio, { action_tl_frame_cam_bloom_ratio(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_bloom_threshold", ID_action_tl_frame_cam_bloom_threshold, { action_tl_frame_cam_bloom_threshold(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_ca", ID_action_tl_frame_cam_ca, { action_tl_frame_cam_ca(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_ca_blue_offset", ID_action_tl_frame_cam_ca_blue_offset, { action_tl_frame_cam_ca_blue_offset(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_ca_blur_amount", ID_action_tl_frame_cam_ca_blur_amount, { action_tl_frame_cam_ca_blur_amount(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_ca_distort_channels", ID_action_tl_frame_cam_ca_distort_channels, { action_tl_frame_cam_ca_distort_channels(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_ca_green_offset", ID_action_tl_frame_cam_ca_green_offset, { action_tl_frame_cam_ca_green_offset(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_ca_red_offset", ID_action_tl_frame_cam_ca_red_offset, { action_tl_frame_cam_ca_red_offset(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_clip_far", ID_action_tl_frame_cam_clip_far, { action_tl_frame_cam_clip_far(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_clip_near", ID_action_tl_frame_cam_clip_near, { action_tl_frame_cam_clip_near(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_clrcor", ID_action_tl_frame_cam_clrcor, { action_tl_frame_cam_clrcor(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_clrcor_brightness", ID_action_tl_frame_cam_clrcor_brightness, { action_tl_frame_cam_clrcor_brightness(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_clrcor_color_burn", ID_action_tl_frame_cam_clrcor_color_burn, { action_tl_frame_cam_clrcor_color_burn(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_clrcor_contrast", ID_action_tl_frame_cam_clrcor_contrast, { action_tl_frame_cam_clrcor_contrast(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_clrcor_saturation", ID_action_tl_frame_cam_clrcor_saturation, { action_tl_frame_cam_clrcor_saturation(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_clrcor_vibrance", ID_action_tl_frame_cam_clrcor_vibrance, { action_tl_frame_cam_clrcor_vibrance(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_distort", ID_action_tl_frame_cam_distort, { action_tl_frame_cam_distort(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_distort_amount", ID_action_tl_frame_cam_distort_amount, { action_tl_frame_cam_distort_amount(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_distort_repeat", ID_action_tl_frame_cam_distort_repeat, { action_tl_frame_cam_distort_repeat(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_distort_zoom_amount", ID_action_tl_frame_cam_distort_zoom_amount, { action_tl_frame_cam_distort_zoom_amount(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof", ID_action_tl_frame_cam_dof, { action_tl_frame_cam_dof(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_bias", ID_action_tl_frame_cam_dof_bias, { action_tl_frame_cam_dof_bias(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_blur_ratio", ID_action_tl_frame_cam_dof_blur_ratio, { action_tl_frame_cam_dof_blur_ratio(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_blur_size", ID_action_tl_frame_cam_dof_blur_size, { action_tl_frame_cam_dof_blur_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_depth", ID_action_tl_frame_cam_dof_depth, { action_tl_frame_cam_dof_depth(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_fade_size", ID_action_tl_frame_cam_dof_fade_size, { action_tl_frame_cam_dof_fade_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_fringe", ID_action_tl_frame_cam_dof_fringe, { action_tl_frame_cam_dof_fringe(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_fringe_angle", ID_action_tl_frame_cam_dof_fringe_angle, { action_tl_frame_cam_dof_fringe_angle(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_fringe_blue", ID_action_tl_frame_cam_dof_fringe_blue, { action_tl_frame_cam_dof_fringe_blue(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_fringe_green", ID_action_tl_frame_cam_dof_fringe_green, { action_tl_frame_cam_dof_fringe_green(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_fringe_red", ID_action_tl_frame_cam_dof_fringe_red, { action_tl_frame_cam_dof_fringe_red(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_gain", ID_action_tl_frame_cam_dof_gain, { action_tl_frame_cam_dof_gain(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_range", ID_action_tl_frame_cam_dof_range, { action_tl_frame_cam_dof_range(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_dof_threshold", ID_action_tl_frame_cam_dof_threshold, { action_tl_frame_cam_dof_threshold(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_exposure", ID_action_tl_frame_cam_exposure, { action_tl_frame_cam_exposure(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_fov", ID_action_tl_frame_cam_fov, { action_tl_frame_cam_fov(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_gamma", ID_action_tl_frame_cam_gamma, { action_tl_frame_cam_gamma(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_grain", ID_action_tl_frame_cam_grain, { action_tl_frame_cam_grain(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_grain_saturation", ID_action_tl_frame_cam_grain_saturation, { action_tl_frame_cam_grain_saturation(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_grain_size", ID_action_tl_frame_cam_grain_size, { action_tl_frame_cam_grain_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_grain_strength", ID_action_tl_frame_cam_grain_strength, { action_tl_frame_cam_grain_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_height", ID_action_tl_frame_cam_height, { action_tl_frame_cam_height(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_lens_dirt", ID_action_tl_frame_cam_lens_dirt, { action_tl_frame_cam_lens_dirt(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_lens_dirt_bloom", ID_action_tl_frame_cam_lens_dirt_bloom, { action_tl_frame_cam_lens_dirt_bloom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_lens_dirt_glow", ID_action_tl_frame_cam_lens_dirt_glow, { action_tl_frame_cam_lens_dirt_glow(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_lens_dirt_intensity", ID_action_tl_frame_cam_lens_dirt_intensity, { action_tl_frame_cam_lens_dirt_intensity(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_lens_dirt_power", ID_action_tl_frame_cam_lens_dirt_power, { action_tl_frame_cam_lens_dirt_power(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_lens_dirt_radius", ID_action_tl_frame_cam_lens_dirt_radius, { action_tl_frame_cam_lens_dirt_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_lens_dirt_tex_browse", ID_action_tl_frame_cam_lens_dirt_tex_browse, { return action_tl_frame_cam_lens_dirt_tex_browse(ScopeAny(s, o)); });
		AddScript("action_tl_frame_cam_light_management", ID_action_tl_frame_cam_light_management, { action_tl_frame_cam_light_management(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_rotate", ID_action_tl_frame_cam_rotate, { action_tl_frame_cam_rotate(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_rotate_angle_xy", ID_action_tl_frame_cam_rotate_angle_xy, { action_tl_frame_cam_rotate_angle_xy(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_rotate_angle_z", ID_action_tl_frame_cam_rotate_angle_z, { action_tl_frame_cam_rotate_angle_z(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_rotate_distance", ID_action_tl_frame_cam_rotate_distance, { action_tl_frame_cam_rotate_distance(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_shake", ID_action_tl_frame_cam_shake, { action_tl_frame_cam_shake(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_shake_mode", ID_action_tl_frame_cam_shake_mode, { action_tl_frame_cam_shake_mode(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_shake_speed", ID_action_tl_frame_cam_shake_speed, { action_tl_frame_cam_shake_speed(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_shake_strength", ID_action_tl_frame_cam_shake_strength, { action_tl_frame_cam_shake_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_size_keep_aspect_ratio", ID_action_tl_frame_cam_size_keep_aspect_ratio, { action_tl_frame_cam_size_keep_aspect_ratio(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_tonemapper", ID_action_tl_frame_cam_tonemapper, { action_tl_frame_cam_tonemapper(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_video_template", ID_action_tl_frame_cam_video_template, { action_tl_frame_cam_video_template(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_vignette", ID_action_tl_frame_cam_vignette, { action_tl_frame_cam_vignette(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_vignette_color", ID_action_tl_frame_cam_vignette_color, { action_tl_frame_cam_vignette_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_cam_vignette_radius", ID_action_tl_frame_cam_vignette_radius, { action_tl_frame_cam_vignette_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_vignette_softness", ID_action_tl_frame_cam_vignette_softness, { action_tl_frame_cam_vignette_softness(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_vignette_strength", ID_action_tl_frame_cam_vignette_strength, { action_tl_frame_cam_vignette_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_cam_width", ID_action_tl_frame_cam_width, { action_tl_frame_cam_width(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_clear", ID_action_tl_frame_clear, { action_tl_frame_clear(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_custom_item_slot", ID_action_tl_frame_custom_item_slot, { action_tl_frame_custom_item_slot(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_custom_seed", ID_action_tl_frame_custom_seed, { action_tl_frame_custom_seed(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_ease_all", ID_action_tl_frame_ease_all, { action_tl_frame_ease_all(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ease_in", ID_action_tl_frame_ease_in, { action_tl_frame_ease_in(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ease_in_x", ID_action_tl_frame_ease_in_x, { action_tl_frame_ease_in_x(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ease_in_y", ID_action_tl_frame_ease_in_y, { action_tl_frame_ease_in_y(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ease_out", ID_action_tl_frame_ease_out, { action_tl_frame_ease_out(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ease_out_x", ID_action_tl_frame_ease_out_x, { action_tl_frame_ease_out_x(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ease_out_y", ID_action_tl_frame_ease_out_y, { action_tl_frame_ease_out_y(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ease_set_all", ID_action_tl_frame_ease_set_all, { action_tl_frame_ease_set_all(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_emissive", ID_action_tl_frame_emissive, { action_tl_frame_emissive(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_follow_pos_offset_x", ID_action_tl_frame_follow_pos_offset_x, { action_tl_frame_follow_pos_offset_x(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_pos_offset_y", ID_action_tl_frame_follow_pos_offset_y, { action_tl_frame_follow_pos_offset_y(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_pos_offset_z", ID_action_tl_frame_follow_pos_offset_z, { action_tl_frame_follow_pos_offset_z(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_pos_target", ID_action_tl_frame_follow_pos_target, { action_tl_frame_follow_pos_target(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_pos_x", ID_action_tl_frame_follow_pos_x, { action_tl_frame_follow_pos_x(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_pos_y", ID_action_tl_frame_follow_pos_y, { action_tl_frame_follow_pos_y(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_pos_z", ID_action_tl_frame_follow_pos_z, { action_tl_frame_follow_pos_z(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_rot_target", ID_action_tl_frame_follow_rot_target, { action_tl_frame_follow_rot_target(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_rot_x", ID_action_tl_frame_follow_rot_x, { action_tl_frame_follow_rot_x(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_rot_y", ID_action_tl_frame_follow_rot_y, { action_tl_frame_follow_rot_y(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_rot_z", ID_action_tl_frame_follow_rot_z, { action_tl_frame_follow_rot_z(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_scale_target", ID_action_tl_frame_follow_scale_target, { action_tl_frame_follow_scale_target(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_scale_x", ID_action_tl_frame_follow_scale_x, { action_tl_frame_follow_scale_x(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_scale_y", ID_action_tl_frame_follow_scale_y, { action_tl_frame_follow_scale_y(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_follow_scale_z", ID_action_tl_frame_follow_scale_z, { action_tl_frame_follow_scale_z(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_force", ID_action_tl_frame_force, { action_tl_frame_force(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_force_directional", ID_action_tl_frame_force_directional, { action_tl_frame_force_directional(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_force_vortex", ID_action_tl_frame_force_vortex, { action_tl_frame_force_vortex(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_freeze", ID_action_tl_frame_freeze, { action_tl_frame_freeze(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_glow_color", ID_action_tl_frame_glow_color, { action_tl_frame_glow_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_hsb_add", ID_action_tl_frame_hsb_add, { action_tl_frame_hsb_add(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_hsb_mul", ID_action_tl_frame_hsb_mul, { action_tl_frame_hsb_mul(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_hsb_sub", ID_action_tl_frame_hsb_sub, { action_tl_frame_hsb_sub(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_ik_angle_offset", ID_action_tl_frame_ik_angle_offset, { action_tl_frame_ik_angle_offset(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ik_blend", ID_action_tl_frame_ik_blend, { action_tl_frame_ik_blend(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_ik_target", ID_action_tl_frame_ik_target, { action_tl_frame_ik_target(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_ik_target_angle", ID_action_tl_frame_ik_target_angle, { action_tl_frame_ik_target_angle(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_item_slot", ID_action_tl_frame_item_slot, { action_tl_frame_item_slot(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_light_color", ID_action_tl_frame_light_color, { action_tl_frame_light_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_light_fade_size", ID_action_tl_frame_light_fade_size, { action_tl_frame_light_fade_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_light_gobo_tex_browse", ID_action_tl_frame_light_gobo_tex_browse, { return action_tl_frame_light_gobo_tex_browse(ScopeAny(s, o)); });
		AddScript("action_tl_frame_light_range", ID_action_tl_frame_light_range, { action_tl_frame_light_range(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_light_size", ID_action_tl_frame_light_size, { action_tl_frame_light_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_light_specular_strength", ID_action_tl_frame_light_specular_strength, { action_tl_frame_light_specular_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_light_spot_radius", ID_action_tl_frame_light_spot_radius, { action_tl_frame_light_spot_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_light_spot_sharpness", ID_action_tl_frame_light_spot_sharpness, { action_tl_frame_light_spot_sharpness(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_light_strength", ID_action_tl_frame_light_strength, { action_tl_frame_light_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_light_type", ID_action_tl_frame_light_type, { action_tl_frame_light_type(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_look_at_rotate", ID_action_tl_frame_look_at_rotate, { action_tl_frame_look_at_rotate(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_metallic", ID_action_tl_frame_metallic, { action_tl_frame_metallic(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_mix_color", ID_action_tl_frame_mix_color, { action_tl_frame_mix_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_mix_percent", ID_action_tl_frame_mix_percent, { action_tl_frame_mix_percent(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_path", ID_action_tl_frame_path, { action_tl_frame_path(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_path_offset", ID_action_tl_frame_path_offset, { action_tl_frame_path_offset(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_path_offset_set_length", ID_action_tl_frame_path_offset_set_length, { action_tl_frame_path_offset_set_length(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_frame_path_point_angle", ID_action_tl_frame_path_point_angle, { action_tl_frame_path_point_angle(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_path_point_scale", ID_action_tl_frame_path_point_scale, { action_tl_frame_path_point_scale(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_pos", ID_action_tl_frame_pos, { action_tl_frame_pos(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_pos_xyz", ID_action_tl_frame_pos_xyz, { action_tl_frame_pos_xyz(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_rgb_add", ID_action_tl_frame_rgb_add, { action_tl_frame_rgb_add(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_rgb_mul", ID_action_tl_frame_rgb_mul, { action_tl_frame_rgb_mul(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_rgb_sub", ID_action_tl_frame_rgb_sub, { action_tl_frame_rgb_sub(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_rot", ID_action_tl_frame_rot, { action_tl_frame_rot(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_rot_xyz", ID_action_tl_frame_rot_xyz, { action_tl_frame_rot_xyz(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_roughness", ID_action_tl_frame_roughness, { action_tl_frame_roughness(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_scale", ID_action_tl_frame_scale, { action_tl_frame_scale(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_scale_all_axis", ID_action_tl_frame_scale_all_axis, { action_tl_frame_scale_all_axis(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_scale_xyz", ID_action_tl_frame_scale_xyz, { action_tl_frame_scale_xyz(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_seed", ID_action_tl_frame_seed, { action_tl_frame_seed(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_set_camera", ID_action_tl_frame_set_camera, { action_tl_frame_set_camera(ScopeAny(s, o), a[0], a.Size() > 1 ? a[1] : VarType(false)); return VarType(); });
		AddScript("action_tl_frame_set_colors", ID_action_tl_frame_set_colors, { action_tl_frame_set_colors(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9]); return VarType(); });
		AddScript("action_tl_frame_set_light", ID_action_tl_frame_set_light, { action_tl_frame_set_light(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]); return VarType(); });
		AddScript("action_tl_frame_sound_end", ID_action_tl_frame_sound_end, { action_tl_frame_sound_end(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_sound_obj", ID_action_tl_frame_sound_obj, { action_tl_frame_sound_obj(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_sound_pitch", ID_action_tl_frame_sound_pitch, { action_tl_frame_sound_pitch(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_sound_start", ID_action_tl_frame_sound_start, { action_tl_frame_sound_start(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_sound_volume", ID_action_tl_frame_sound_volume, { action_tl_frame_sound_volume(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_spawn", ID_action_tl_frame_spawn, { action_tl_frame_spawn(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_subsurface", ID_action_tl_frame_subsurface, { action_tl_frame_subsurface(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_subsurface_blue", ID_action_tl_frame_subsurface_blue, { action_tl_frame_subsurface_blue(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_subsurface_color", ID_action_tl_frame_subsurface_color, { action_tl_frame_subsurface_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_subsurface_green", ID_action_tl_frame_subsurface_green, { action_tl_frame_subsurface_green(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_subsurface_red", ID_action_tl_frame_subsurface_red, { action_tl_frame_subsurface_red(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_frame_text", ID_action_tl_frame_text, { action_tl_frame_text(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_texture_light_gobo", ID_action_tl_frame_texture_light_gobo, { action_tl_frame_texture_light_gobo(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_texture_material_obj", ID_action_tl_frame_texture_material_obj, { action_tl_frame_texture_material_obj(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_texture_normal_obj", ID_action_tl_frame_texture_normal_obj, { action_tl_frame_texture_normal_obj(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_texture_obj", ID_action_tl_frame_texture_obj, { action_tl_frame_texture_obj(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_text_aa", ID_action_tl_frame_text_aa, { action_tl_frame_text_aa(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_text_font", ID_action_tl_frame_text_font, { action_tl_frame_text_font(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_text_halign", ID_action_tl_frame_text_halign, { action_tl_frame_text_halign(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_text_outline", ID_action_tl_frame_text_outline, { action_tl_frame_text_outline(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_text_outline_color", ID_action_tl_frame_text_outline_color, { action_tl_frame_text_outline_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_text_valign", ID_action_tl_frame_text_valign, { action_tl_frame_text_valign(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_transition", ID_action_tl_frame_transition, { action_tl_frame_transition(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_visible", ID_action_tl_frame_visible, { action_tl_frame_visible(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_frame_wind_influence", ID_action_tl_frame_wind_influence, { action_tl_frame_wind_influence(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_ghost", ID_action_tl_ghost, { action_tl_ghost(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_ghost_tree", ID_action_tl_ghost_tree, { action_tl_ghost_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_glint_mode", ID_action_tl_glint_mode, { action_tl_glint_mode(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_glint_mode_tree", ID_action_tl_glint_mode_tree, { action_tl_glint_mode_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_glint_scale", ID_action_tl_glint_scale, { action_tl_glint_scale(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_glint_scale_tree", ID_action_tl_glint_scale_tree, { action_tl_glint_scale_tree(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("action_tl_glint_speed", ID_action_tl_glint_speed, { action_tl_glint_speed(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_glint_speed_tree", ID_action_tl_glint_speed_tree, { action_tl_glint_speed_tree(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("action_tl_glint_strength", ID_action_tl_glint_strength, { action_tl_glint_strength(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_glint_strength_tree", ID_action_tl_glint_strength_tree, { action_tl_glint_strength_tree(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("action_tl_glint_tex", ID_action_tl_glint_tex, { action_tl_glint_tex(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_glint_tex_tree", ID_action_tl_glint_tex_tree, { action_tl_glint_tex_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_glow", ID_action_tl_glow, { action_tl_glow(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_glow_texture", ID_action_tl_glow_texture, { action_tl_glow_texture(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_glow_texture_tree", ID_action_tl_glow_texture_tree, { action_tl_glow_texture_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_glow_tree", ID_action_tl_glow_tree, { action_tl_glow_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_hide", ID_action_tl_hide, { action_tl_hide(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_hide_select", ID_action_tl_hide_select, { action_tl_hide_select(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_hide_tree", ID_action_tl_hide_tree, { action_tl_hide_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_hq_hiding", ID_action_tl_hq_hiding, { action_tl_hq_hiding(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_hq_hiding_tree", ID_action_tl_hq_hiding_tree, { action_tl_hq_hiding_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_inherit_alpha", ID_action_tl_inherit_alpha, { action_tl_inherit_alpha(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_bend", ID_action_tl_inherit_bend, { action_tl_inherit_bend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_color", ID_action_tl_inherit_color, { action_tl_inherit_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_glow_color", ID_action_tl_inherit_glow_color, { action_tl_inherit_glow_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_pose", ID_action_tl_inherit_pose, { action_tl_inherit_pose(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_position", ID_action_tl_inherit_position, { action_tl_inherit_position(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_rotation", ID_action_tl_inherit_rotation, { action_tl_inherit_rotation(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_rot_point", ID_action_tl_inherit_rot_point, { action_tl_inherit_rot_point(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_scale", ID_action_tl_inherit_scale, { action_tl_inherit_scale(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_select", ID_action_tl_inherit_select, { action_tl_inherit_select(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_subsurface", ID_action_tl_inherit_subsurface, { action_tl_inherit_subsurface(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_surface", ID_action_tl_inherit_surface, { action_tl_inherit_surface(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_texture", ID_action_tl_inherit_texture, { action_tl_inherit_texture(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_inherit_visibility", ID_action_tl_inherit_visibility, { action_tl_inherit_visibility(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_intervals_show", ID_action_tl_intervals_show, { action_tl_intervals_show(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_interval_offset", ID_action_tl_interval_offset, { action_tl_interval_offset(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_interval_size", ID_action_tl_interval_size, { action_tl_interval_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_keyframes_create", ID_action_tl_keyframes_create, { action_tl_keyframes_create(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframes_cut", ID_action_tl_keyframes_cut, { action_tl_keyframes_cut(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframes_load", ID_action_tl_keyframes_load, { return action_tl_keyframes_load(ScopeAny(s, o), a[0]); });
		AddScript("action_tl_keyframes_load_file", ID_action_tl_keyframes_load_file, { return action_tl_keyframes_load_file(ScopeAny(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("action_tl_keyframes_move", ID_action_tl_keyframes_move, { action_tl_keyframes_move(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframes_move_done", ID_action_tl_keyframes_move_done, { action_tl_keyframes_move_done(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframes_move_start", ID_action_tl_keyframes_move_start, { action_tl_keyframes_move_start(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_keyframes_paste", ID_action_tl_keyframes_paste, { action_tl_keyframes_paste(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_keyframes_remove", ID_action_tl_keyframes_remove, { action_tl_keyframes_remove(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframes_select_area", ID_action_tl_keyframes_select_area, { action_tl_keyframes_select_area(ScopeAny(s, o), a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("action_tl_keyframes_sound_resize", ID_action_tl_keyframes_sound_resize, { action_tl_keyframes_sound_resize(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframes_sound_resize_done", ID_action_tl_keyframes_sound_resize_done, { action_tl_keyframes_sound_resize_done(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframes_sound_resize_start", ID_action_tl_keyframes_sound_resize_start, { action_tl_keyframes_sound_resize_start(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframe_create", ID_action_tl_keyframe_create, { action_tl_keyframe_create(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_keyframe_deselect", ID_action_tl_keyframe_deselect, { return action_tl_keyframe_deselect(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_tl_keyframe_next", ID_action_tl_keyframe_next, { action_tl_keyframe_next(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframe_previous", ID_action_tl_keyframe_previous, { action_tl_keyframe_previous(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_keyframe_select", ID_action_tl_keyframe_select, { return action_tl_keyframe_select(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_tl_keyframe_select_single", ID_action_tl_keyframe_select_single, { action_tl_keyframe_select_single(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_left", ID_action_tl_left, { action_tl_left(); return VarType(); });
		AddScript("action_tl_load_loop", ID_action_tl_load_loop, { return action_tl_load_loop(ScopeAny(s, o), a[0]); });
		AddScript("action_tl_lock", ID_action_tl_lock, { action_tl_lock(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_lock_bend", ID_action_tl_lock_bend, { action_tl_lock_bend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_lock_tree", ID_action_tl_lock_tree, { action_tl_lock_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_lq_hiding", ID_action_tl_lq_hiding, { action_tl_lq_hiding(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_lq_hiding_tree", ID_action_tl_lq_hiding_tree, { action_tl_lq_hiding_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_marker_color", ID_action_tl_marker_color, { action_tl_marker_color(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_marker_delete", ID_action_tl_marker_delete, { action_tl_marker_delete(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_marker_edit", ID_action_tl_marker_edit, { return action_tl_marker_edit(ScopeAny(s, o), a[0], a[1]); });
		AddScript("action_tl_marker_editor", ID_action_tl_marker_editor, { action_tl_marker_editor(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_marker_new", ID_action_tl_marker_new, { action_tl_marker_new(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_marker_pos", ID_action_tl_marker_pos, { action_tl_marker_pos(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_move_done", ID_action_tl_move_done, { action_tl_move_done(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_move_start", ID_action_tl_move_start, { action_tl_move_start(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_move_start_tree", ID_action_tl_move_start_tree, { action_tl_move_start_tree(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_name", ID_action_tl_name, { action_tl_name(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_name_single", ID_action_tl_name_single, { action_tl_name_single(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_only_render_glow", ID_action_tl_only_render_glow, { action_tl_only_render_glow(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_only_render_glow_tree", ID_action_tl_only_render_glow_tree, { action_tl_only_render_glow_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_parent", ID_action_tl_parent, { action_tl_parent(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_parent_tree", ID_action_tl_parent_tree, { action_tl_parent_tree(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_path_closed", ID_action_tl_path_closed, { action_tl_path_closed(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_path_closed_tree", ID_action_tl_path_closed_tree, { action_tl_path_closed_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_path_detail", ID_action_tl_path_detail, { action_tl_path_detail(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_path_point_add", ID_action_tl_path_point_add, { action_tl_path_point_add(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_path_shape_detail", ID_action_tl_path_shape_detail, { action_tl_path_shape_detail(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_path_shape_generate", ID_action_tl_path_shape_generate, { action_tl_path_shape_generate(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_path_shape_invert", ID_action_tl_path_shape_invert, { action_tl_path_shape_invert(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_path_shape_radius", ID_action_tl_path_shape_radius, { action_tl_path_shape_radius(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_path_shape_smooth_ring", ID_action_tl_path_shape_smooth_ring, { action_tl_path_shape_smooth_ring(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_path_shape_smooth_segments", ID_action_tl_path_shape_smooth_segments, { action_tl_path_shape_smooth_segments(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_path_shape_tex_length", ID_action_tl_path_shape_tex_length, { action_tl_path_shape_tex_length(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_path_shape_tube", ID_action_tl_path_shape_tube, { action_tl_path_shape_tube(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_path_smooth", ID_action_tl_path_smooth, { action_tl_path_smooth(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_path_smooth_tree", ID_action_tl_path_smooth_tree, { action_tl_path_smooth_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_play", ID_action_tl_play, { action_tl_play(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_play_beginning", ID_action_tl_play_beginning, { action_tl_play_beginning(); return VarType(); });
		AddScript("action_tl_play_break", ID_action_tl_play_break, { action_tl_play_break(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_play_jump", ID_action_tl_play_jump, { action_tl_play_jump(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_play_repeat", ID_action_tl_play_repeat, { action_tl_play_repeat(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_play_start", ID_action_tl_play_start, { action_tl_play_start(); return VarType(); });
		AddScript("action_tl_play_stop", ID_action_tl_play_stop, { action_tl_play_stop(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_remove", ID_action_tl_remove, { action_tl_remove(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_right", ID_action_tl_right, { action_tl_right(); return VarType(); });
		AddScript("action_tl_rotpoint", ID_action_tl_rotpoint, { action_tl_rotpoint(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_rotpoint_all", ID_action_tl_rotpoint_all, { action_tl_rotpoint_all(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_rotpoint_custom", ID_action_tl_rotpoint_custom, { action_tl_rotpoint_custom(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_scale_resize", ID_action_tl_scale_resize, { action_tl_scale_resize(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_search", ID_action_tl_search, { action_tl_search(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_select", ID_action_tl_select, { action_tl_select(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_select_all", ID_action_tl_select_all, { action_tl_select_all(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_select_area", ID_action_tl_select_area, { action_tl_select_area(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_tl_select_keyframes", ID_action_tl_select_keyframes, { action_tl_select_keyframes(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_select_keyframes_after_marker", ID_action_tl_select_keyframes_after_marker, { action_tl_select_keyframes_after_marker(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_select_keyframes_before_marker", ID_action_tl_select_keyframes_before_marker, { action_tl_select_keyframes_before_marker(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_select_keyframes_first", ID_action_tl_select_keyframes_first, { action_tl_select_keyframes_first(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_select_keyframes_last", ID_action_tl_select_keyframes_last, { action_tl_select_keyframes_last(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_select_keyframes_region", ID_action_tl_select_keyframes_region, { action_tl_select_keyframes_region(ScopeAny(s, o)); return VarType(); });
		AddScript("action_tl_select_single", ID_action_tl_select_single, { return action_tl_select_single(ScopeAny(s, o), a); });
		AddScript("action_tl_shadows", ID_action_tl_shadows, { action_tl_shadows(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_shadows_tree", ID_action_tl_shadows_tree, { action_tl_shadows_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_ssao", ID_action_tl_ssao, { action_tl_ssao(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_ssao_tree", ID_action_tl_ssao_tree, { action_tl_ssao_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_text", ID_action_tl_text, { action_tl_text(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_texture_blur", ID_action_tl_texture_blur, { action_tl_texture_blur(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_texture_blur_tree", ID_action_tl_texture_blur_tree, { action_tl_texture_blur_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_texture_filtering", ID_action_tl_texture_filtering, { action_tl_texture_filtering(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_texture_filtering_tree", ID_action_tl_texture_filtering_tree, { action_tl_texture_filtering_tree(a[0], a[1], a[2]); return VarType(); });
		AddScript("action_tl_wind", ID_action_tl_wind, { action_tl_wind(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_tl_wind_terrain", ID_action_tl_wind_terrain, { action_tl_wind_terrain(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_toolbar_exportimage_high_quality", ID_action_toolbar_exportimage_high_quality, { action_toolbar_exportimage_high_quality(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_exportimage_include_hidden", ID_action_toolbar_exportimage_include_hidden, { action_toolbar_exportimage_include_hidden(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_exportimage_remove_background", ID_action_toolbar_exportimage_remove_background, { action_toolbar_exportimage_remove_background(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_exportimage_save", ID_action_toolbar_exportimage_save, { return action_toolbar_exportimage_save(ScopeAny(s, o)); });
		AddScript("action_toolbar_exportimage_watermark", ID_action_toolbar_exportimage_watermark, { action_toolbar_exportimage_watermark(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_exportmovie_bit_rate", ID_action_toolbar_exportmovie_bit_rate, { action_toolbar_exportmovie_bit_rate(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_toolbar_exportmovie_format", ID_action_toolbar_exportmovie_format, { action_toolbar_exportmovie_format(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_toolbar_exportmovie_framespersecond", ID_action_toolbar_exportmovie_framespersecond, { action_toolbar_exportmovie_framespersecond(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_toolbar_exportmovie_frame_rate", ID_action_toolbar_exportmovie_frame_rate, { action_toolbar_exportmovie_frame_rate(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_toolbar_exportmovie_high_quality", ID_action_toolbar_exportmovie_high_quality, { action_toolbar_exportmovie_high_quality(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_exportmovie_include_audio", ID_action_toolbar_exportmovie_include_audio, { action_toolbar_exportmovie_include_audio(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_exportmovie_include_hidden", ID_action_toolbar_exportmovie_include_hidden, { action_toolbar_exportmovie_include_hidden(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_exportmovie_remove_background", ID_action_toolbar_exportmovie_remove_background, { action_toolbar_exportmovie_remove_background(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_exportmovie_save", ID_action_toolbar_exportmovie_save, { return action_toolbar_exportmovie_save(ScopeAny(s, o)); });
		AddScript("action_toolbar_exportmovie_video_quality", ID_action_toolbar_exportmovie_video_quality, { action_toolbar_exportmovie_video_quality(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_toolbar_exportmovie_watermark", ID_action_toolbar_exportmovie_watermark, { action_toolbar_exportmovie_watermark(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_export_image", ID_action_toolbar_export_image, { action_toolbar_export_image(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_export_movie", ID_action_toolbar_export_movie, { action_toolbar_export_movie(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_importimage_do_all", ID_action_toolbar_importimage_do_all, { action_toolbar_importimage_do_all(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_toolbar_importimage_type", ID_action_toolbar_importimage_type, { action_toolbar_importimage_type(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_toolbar_importitemsheet_is_sheet", ID_action_toolbar_importitemsheet_is_sheet, { action_toolbar_importitemsheet_is_sheet(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_toolbar_importitemsheet_sheet_size", ID_action_toolbar_importitemsheet_sheet_size, { action_toolbar_importitemsheet_sheet_size(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("action_toolbar_import_asset", ID_action_toolbar_import_asset, { action_toolbar_import_asset(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_new", ID_action_toolbar_new, { action_toolbar_new(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_open", ID_action_toolbar_open, { return action_toolbar_open(ScopeAny(s, o), a); });
		AddScript("action_toolbar_open_folder", ID_action_toolbar_open_folder, { action_toolbar_open_folder(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_open_last_backup", ID_action_toolbar_open_last_backup, { return action_toolbar_open_last_backup(ScopeAny(s, o)); });
		AddScript("action_toolbar_redo", ID_action_toolbar_redo, { return action_toolbar_redo(ScopeAny(s, o)); });
		AddScript("action_toolbar_save", ID_action_toolbar_save, { action_toolbar_save(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_save_as", ID_action_toolbar_save_as, { action_toolbar_save_as(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_settings", ID_action_toolbar_settings, { action_toolbar_settings(ScopeAny(s, o)); return VarType(); });
		AddScript("action_toolbar_undo", ID_action_toolbar_undo, { return action_toolbar_undo(ScopeAny(s, o)); });
		AddScript("action_tools_disable_all", ID_action_tools_disable_all, { action_tools_disable_all(ScopeAny(s, o)); return VarType(); });
		AddScript("action_value_copy", ID_action_value_copy, { action_value_copy(ScopeAny(s, o)); return VarType(); });
		AddScript("action_value_cut", ID_action_value_cut, { action_value_cut(ScopeAny(s, o)); return VarType(); });
		AddScript("action_value_mix_color", ID_action_value_mix_color, { action_value_mix_color(ScopeAny(s, o)); return VarType(); });
		AddScript("action_value_paste", ID_action_value_paste, { action_value_paste(ScopeAny(s, o)); return VarType(); });
		AddScript("action_value_reset", ID_action_value_reset, { action_value_reset(ScopeAny(s, o)); return VarType(); });
		AddScript("action_value_set_color", ID_action_value_set_color, { action_value_set_color(ScopeAny(s, o)); return VarType(); });
		AddScript("action_view_camera", ID_action_view_camera, { action_view_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("angle_difference_fix", ID_angle_difference_fix, { return angle_difference_fix(a[0], a[1]); });
		AddScript("app_event_create", ID_app_event_create, { app_event_create(ScopeAny(s, o)); return VarType(); });
		AddScript("app_event_draw", ID_app_event_draw, { app_event_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("app_event_game_end", ID_app_event_game_end, { return app_event_game_end(ScopeAny(s, o)); });
		AddScript("app_event_http", ID_app_event_http, { return app_event_http(ScopeAny(s, o)); });
		AddScript("app_event_step", ID_app_event_step, { return app_event_step(ScopeAny(s, o)); });
		AddScript("app_mouse_box", ID_app_mouse_box, { return app_mouse_box(ScopeAny(s, o), a[0], a[1], a[2], a[3], a.Size() > 4 ? a[4] : VarType(/*""*/ STR(0))); });
		AddScript("app_mouse_clear", ID_app_mouse_clear, { app_mouse_clear(ScopeAny(s, o)); return VarType(); });
		AddScript("app_mouse_wrap", ID_app_mouse_wrap, { return app_mouse_wrap(a[0], a[1], a[2], a[3]); });
		AddScript("app_start_place", ID_app_start_place, { app_start_place(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("app_stop_place", ID_app_stop_place, { app_stop_place(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_place", ID_app_update_place, { return app_update_place(ScopeAny(s, o)); });
		AddScript("tl_mark_placed", ID_tl_mark_placed, { tl_mark_placed(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_setting_place_new", ID_action_setting_place_new, { action_setting_place_new(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("app_startup", ID_app_startup, { return app_startup(ScopeAny(s, o)); });
		AddScript("app_startup_collapse", ID_app_startup_collapse, { app_startup_collapse(); return VarType(); });
		AddScript("app_startup_fonts", ID_app_startup_fonts, { app_startup_fonts(ScopeAny(s, o)); return VarType(); });
		AddScript("app_startup_interface", ID_app_startup_interface, { app_startup_interface(ScopeAny(s, o)); return VarType(); });
		AddScript("app_startup_interface_bench", ID_app_startup_interface_bench, { app_startup_interface_bench(); return VarType(); });
		AddScript("app_startup_interface_context_menu", ID_app_startup_interface_context_menu, { app_startup_interface_context_menu(); return VarType(); });
		AddScript("app_startup_interface_export", ID_app_startup_interface_export, { app_startup_interface_export(); return VarType(); });
		AddScript("app_startup_interface_lists", ID_app_startup_interface_lists, { app_startup_interface_lists(); return VarType(); });
		AddScript("app_startup_interface_menus", ID_app_startup_interface_menus, { app_startup_interface_menus(); return VarType(); });
		AddScript("app_startup_interface_panels", ID_app_startup_interface_panels, { app_startup_interface_panels(); return VarType(); });
		AddScript("app_startup_interface_popups", ID_app_startup_interface_popups, { app_startup_interface_popups(); return VarType(); });
		AddScript("app_startup_interface_settings_menus", ID_app_startup_interface_settings_menus, { app_startup_interface_settings_menus(); return VarType(); });
		AddScript("app_startup_interface_tabs", ID_app_startup_interface_tabs, { app_startup_interface_tabs(); return VarType(); });
		AddScript("app_startup_interface_timeline", ID_app_startup_interface_timeline, { app_startup_interface_timeline(); return VarType(); });
		AddScript("app_startup_interface_toolbar", ID_app_startup_interface_toolbar, { app_startup_interface_toolbar(); return VarType(); });
		AddScript("app_startup_interface_views", ID_app_startup_interface_views, { app_startup_interface_views(); return VarType(); });
		AddScript("app_startup_keybinds", ID_app_startup_keybinds, { app_startup_keybinds(); return VarType(); });
		AddScript("app_startup_lists", ID_app_startup_lists, { app_startup_lists(ScopeAny(s, o)); return VarType(); });
		AddScript("app_startup_micro_animations", ID_app_startup_micro_animations, { app_startup_micro_animations(); return VarType(); });
		AddScript("app_startup_recent", ID_app_startup_recent, { app_startup_recent(ScopeAny(s, o)); return VarType(); });
		AddScript("app_startup_shortcut_bar", ID_app_startup_shortcut_bar, { app_startup_shortcut_bar(); return VarType(); });
		AddScript("app_startup_themes", ID_app_startup_themes, { app_startup_themes(ScopeAny(s, o)); return VarType(); });
		AddScript("app_startup_window", ID_app_startup_window, { app_startup_window(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_animate", ID_app_update_animate, { app_update_animate(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_backup", ID_app_update_backup, { app_update_backup(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_cameras", ID_app_update_cameras, { return app_update_cameras(a[0], a[1]); });
		AddScript("app_update_caption", ID_app_update_caption, { app_update_caption(); return VarType(); });
		AddScript("app_update_interface", ID_app_update_interface, { app_update_interface(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_keybinds", ID_app_update_keybinds, { app_update_keybinds(); return VarType(); });
		AddScript("app_update_keyboard", ID_app_update_keyboard, { app_update_keyboard(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_lists", ID_app_update_lists, { return app_update_lists(ScopeAny(s, o)); });
		AddScript("app_update_micro_animations", ID_app_update_micro_animations, { app_update_micro_animations(); return VarType(); });
		AddScript("app_update_minecraft_resources", ID_app_update_minecraft_resources, { app_update_minecraft_resources(); return VarType(); });
		AddScript("app_update_mouse", ID_app_update_mouse, { app_update_mouse(); return VarType(); });
		AddScript("app_update_play", ID_app_update_play, { app_update_play(); return VarType(); });
		AddScript("app_update_previews", ID_app_update_previews, { app_update_previews(); return VarType(); });
		AddScript("app_update_recent", ID_app_update_recent, { app_update_recent(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_tl_edit", ID_app_update_tl_edit, { return app_update_tl_edit(ScopeAny(s, o)); });
		AddScript("app_update_tl_edit_select", ID_app_update_tl_edit_select, { app_update_tl_edit_select(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_tl_edit_tabs", ID_app_update_tl_edit_tabs, { app_update_tl_edit_tabs(ScopeAny(s, o)); return VarType(); });
		AddScript("app_update_toasts", ID_app_update_toasts, { app_update_toasts(); return VarType(); });
		AddScript("app_update_window", ID_app_update_window, { return app_update_window(); });
		AddScript("app_update_work_camera", ID_app_update_work_camera, { return app_update_work_camera(ScopeAny(s, o)); });
		AddScript("array", ID_array, { return array(a); });
		AddScript("array_add", ID_array_add, { return array_add(a[0], a[1], a.Size() > 2 ? a[2] : VarType(true)); });
		AddScript("array_contains", ID_array_contains, { return array_contains(a[0], a[1]); });
		AddScript("array_copy_1d", ID_array_copy_1d, { return array_copy_1d(a[0]); });
		AddScript("array_copy_2d", ID_array_copy_2d, { return array_copy_2d(a[0]); });
		AddScript("asset_load", ID_asset_load, { return asset_load(ScopeAny(s, o), a); });
		AddScript("background_ground_startup", ID_background_ground_startup, { background_ground_startup(); return VarType(); });
		AddScript("background_ground_update_texture", ID_background_ground_update_texture, { return background_ground_update_texture(ScopeAny(s, o)); });
		AddScript("background_ground_update_texture_material", ID_background_ground_update_texture_material, { return background_ground_update_texture_material(ScopeAny(s, o)); });
		AddScript("background_ground_update_texture_normal", ID_background_ground_update_texture_normal, { return background_ground_update_texture_normal(ScopeAny(s, o)); });
		AddScript("background_sky_night_alpha", ID_background_sky_night_alpha, { return background_sky_night_alpha(); });
		AddScript("background_sky_rise_set_alpha", ID_background_sky_rise_set_alpha, { return background_sky_rise_set_alpha(a[0]); });
		AddScript("background_sky_startup", ID_background_sky_startup, { background_sky_startup(); return VarType(); });
		AddScript("background_sky_update", ID_background_sky_update, { background_sky_update(); return VarType(); });
		AddScript("background_sky_update_clouds", ID_background_sky_update_clouds, { return background_sky_update_clouds(ScopeAny(s, o)); });
		AddScript("background_sky_update_sun", ID_background_sky_update_sun, { background_sky_update_sun(); return VarType(); });
		AddScript("bench_clear", ID_bench_clear, { bench_clear(); return VarType(); });
		AddScript("bench_click", ID_bench_click, { return bench_click(ScopeAny(s, o), a[0]); });
		AddScript("bench_draw", ID_bench_draw, { return bench_draw(ScopeAny(s, o)); });
		AddScript("bench_draw_settings", ID_bench_draw_settings, { bench_draw_settings(ScopeAny(s, o), a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("bench_update_particles_list", ID_bench_update_particles_list, { bench_update_particles_list(ScopeAny(s, o)); return VarType(); });
		AddScript("bezier_curve_cubic", ID_bezier_curve_cubic, { return bezier_curve_cubic(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("bezier_curve_quad", ID_bezier_curve_quad, { return bezier_curve_quad(a[0], a[1], a[2], a[3]); });
		AddScript("block_animate", ID_block_animate, { block_animate(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("block_generate_liquid", ID_block_generate_liquid, { return block_generate_liquid(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false)); });
		AddScript("block_get_render_model", ID_block_get_render_model, { return block_get_render_model(a[0], a[1], a[2], a[3]); });
		AddScript("block_get_state_id", ID_block_get_state_id, { return block_get_state_id(a[0], a[1]); });
		AddScript("block_get_state_id_state_vars", ID_block_get_state_id_state_vars, { return block_get_state_id_state_vars(a[0], a[1]); });
		AddScript("block_get_state_id_value", ID_block_get_state_id_value, { return block_get_state_id_value(a[0], a[1], a[2]); });
		AddScript("block_get_timeline", ID_block_get_timeline, { return block_get_timeline(Scope<obj_builder_thread>(s, o), a[0], a[1]); });
		AddScript("block_load", ID_block_load, { return block_load(a[0], a[1]); });
		AddScript("block_load_model_file", ID_block_load_model_file, { return block_load_model_file(a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("block_load_model_file_event_destroy", ID_block_load_model_file_event_destroy, { block_load_model_file_event_destroy(Scope<obj_block_load_model_file>(s, o)); return VarType(); });
		AddScript("block_load_model_file_texture", ID_block_load_model_file_texture, { return block_load_model_file_texture(Scope<obj_block_load_model_file>(s, o), a[0], a[1]); });
		AddScript("block_load_render_model", ID_block_load_render_model, { return block_load_render_model(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a.Size() > 5 ? a[5] : VarType(null_)); });
		AddScript("block_load_state_file", ID_block_load_state_file, { return block_load_state_file(a[0], a[1], a[2]); });
		AddScript("block_load_timeline", ID_block_load_timeline, { block_load_timeline(Scope<obj_block>(s, o), a[0], a[1]); return VarType(); });
		AddScript("block_load_variant_model", ID_block_load_variant_model, { return block_load_variant_model(ScopeAny(s, o), a[0], a[1]); });
		AddScript("block_render_model_generate", ID_block_render_model_generate, { block_render_model_generate(Scope<obj_builder_thread>(s, o), a[0]); return VarType(); });
		AddScript("block_render_model_generate_face_cull", ID_block_render_model_generate_face_cull, { return block_render_model_generate_face_cull(Scope<obj_builder_thread>(s, o), a[0], a[1], a[2]); });
		AddScript("block_set_bars", ID_block_set_bars, { return block_set_bars(ScopeAny(s, o)); });
		AddScript("block_set_bed", ID_block_set_bed, { return block_set_bed(Scope<obj_builder_thread>(s, o)); });
		AddScript("block_set_big_dripleaf", ID_block_set_big_dripleaf, { return block_set_big_dripleaf(Scope<obj_builder_thread>(s, o)); });
		AddScript("block_set_cave_vines", ID_block_set_cave_vines, { return block_set_cave_vines(ScopeAny(s, o)); });
		AddScript("block_set_chest", ID_block_set_chest, { return block_set_chest(ScopeAny(s, o)); });
		AddScript("block_set_chorus_plant", ID_block_set_chorus_plant, { return block_set_chorus_plant(ScopeAny(s, o)); });
		AddScript("block_set_colored_bars", ID_block_set_colored_bars, { return block_set_colored_bars(ScopeAny(s, o)); });
		AddScript("block_set_door", ID_block_set_door, { return block_set_door(ScopeAny(s, o)); });
		AddScript("block_set_double_plant", ID_block_set_double_plant, { return block_set_double_plant(Scope<obj_builder_thread>(s, o)); });
		AddScript("block_set_dripstone", ID_block_set_dripstone, { return block_set_dripstone(Scope<obj_builder_thread>(s, o)); });
		AddScript("block_set_fence", ID_block_set_fence, { return block_set_fence(ScopeAny(s, o)); });
		AddScript("block_set_fence_gate", ID_block_set_fence_gate, { return block_set_fence_gate(ScopeAny(s, o)); });
		AddScript("block_set_fence_nether", ID_block_set_fence_nether, { return block_set_fence_nether(ScopeAny(s, o)); });
		AddScript("block_set_fire", ID_block_set_fire, { return block_set_fire(ScopeAny(s, o)); });
		AddScript("block_set_kelp", ID_block_set_kelp, { return block_set_kelp(ScopeAny(s, o)); });
		AddScript("block_set_leaves", ID_block_set_leaves, { return block_set_leaves(Scope<obj_builder_thread>(s, o)); });
		AddScript("block_set_redstone_repeater", ID_block_set_redstone_repeater, { return block_set_redstone_repeater(ScopeAny(s, o)); });
		AddScript("block_set_redstone_wire", ID_block_set_redstone_wire, { return block_set_redstone_wire(ScopeAny(s, o)); });
		AddScript("block_set_snowy", ID_block_set_snowy, { return block_set_snowy(ScopeAny(s, o)); });
		AddScript("block_set_stairs", ID_block_set_stairs, { return block_set_stairs(ScopeAny(s, o)); });
		AddScript("block_set_state_id_value", ID_block_set_state_id_value, { return block_set_state_id_value(a[0], a[1], a[2], a[3]); });
		AddScript("block_set_tripwire", ID_block_set_tripwire, { return block_set_tripwire(ScopeAny(s, o)); });
		AddScript("block_set_twisting_vines", ID_block_set_twisting_vines, { return block_set_twisting_vines(ScopeAny(s, o)); });
		AddScript("block_set_vine", ID_block_set_vine, { return block_set_vine(ScopeAny(s, o)); });
		AddScript("block_set_wall", ID_block_set_wall, { return block_set_wall(ScopeAny(s, o)); });
		AddScript("block_set_weeping_vines", ID_block_set_weeping_vines, { return block_set_weeping_vines(ScopeAny(s, o)); });
		AddScript("block_texture_get_blend", ID_block_texture_get_blend, { return block_texture_get_blend(a[0], a[1]); });
		AddScript("block_texture_get_frame", ID_block_texture_get_frame, { return block_texture_get_frame(a.Size() > 0 ? a[0] : VarType(false)); });
		AddScript("block_tile_entity_banner", ID_block_tile_entity_banner, { block_tile_entity_banner(Scope<obj_builder_thread>(s, o), a[0]); return VarType(); });
		AddScript("block_tile_entity_bed", ID_block_tile_entity_bed, { return block_tile_entity_bed(Scope<obj_builder_thread>(s, o), a[0]); });
		AddScript("block_tile_entity_decorated_pot", ID_block_tile_entity_decorated_pot, { block_tile_entity_decorated_pot(Scope<obj_builder_thread>(s, o), a[0]); return VarType(); });
		AddScript("block_tile_entity_hanging_sign", ID_block_tile_entity_hanging_sign, { block_tile_entity_hanging_sign(Scope<obj_builder_thread>(s, o), a[0]); return VarType(); });
		AddScript("block_tile_entity_sign_text", ID_block_tile_entity_sign_text, { return block_tile_entity_sign_text(a[0]); });
		AddScript("block_tile_entity_sign", ID_block_tile_entity_sign, { return block_tile_entity_sign(Scope<obj_builder_thread>(s, o), a[0]); });
		AddScript("block_tile_entity_skull", ID_block_tile_entity_skull, { return block_tile_entity_skull(Scope<obj_builder_thread>(s, o), a[0]); });
		AddScript("block_vbuffer_destroy", ID_block_vbuffer_destroy, { block_vbuffer_destroy(ScopeAny(s, o)); return VarType(); });
		AddScript("block_vbuffer_done", ID_block_vbuffer_done, { block_vbuffer_done(ScopeAny(s, o)); return VarType(); });
		AddScript("block_vbuffer_start", ID_block_vbuffer_start, { block_vbuffer_start(ScopeAny(s, o)); return VarType(); });
		AddScript("bool_to_float", ID_bool_to_float, { return bool_to_float(a[0]); });
		AddScript("buffer_is_eof", ID_buffer_is_eof, { return buffer_is_eof(); });
		AddScript("buffer_load_lib", ID_buffer_load_lib, { return buffer_load_lib(a[0]); });
		AddScript("buffer_read_alpha", ID_buffer_read_alpha, { return buffer_read_alpha(a[0], a[1], a[2]); });
		AddScript("buffer_read_byte", ID_buffer_read_byte, { return buffer_read_byte(); });
		AddScript("buffer_read_color", ID_buffer_read_color, { return buffer_read_color(a[0], a[1], a[2]); });
		AddScript("buffer_read_double", ID_buffer_read_double, { return buffer_read_double(); });
		AddScript("buffer_read_double_be", ID_buffer_read_double_be, { return buffer_read_double_be(); });
		AddScript("buffer_read_float", ID_buffer_read_float, { return buffer_read_float(); });
		AddScript("buffer_read_float_be", ID_buffer_read_float_be, { return buffer_read_float_be(); });
		AddScript("buffer_read_int", ID_buffer_read_int, { return buffer_read_int(); });
		AddScript("buffer_read_int_be", ID_buffer_read_int_be, { return buffer_read_int_be(); });
		AddScript("buffer_read_int_uns", ID_buffer_read_int_uns, { return buffer_read_int_uns(); });
		AddScript("buffer_read_long_be", ID_buffer_read_long_be, { return buffer_read_long_be(); });
		AddScript("buffer_read_short", ID_buffer_read_short, { return buffer_read_short(); });
		AddScript("buffer_read_short_be", ID_buffer_read_short_be, { return buffer_read_short_be(); });
		AddScript("buffer_read_string_int", ID_buffer_read_string_int, { return buffer_read_string_int(); });
		AddScript("buffer_read_string_short_be", ID_buffer_read_string_short_be, { return buffer_read_string_short_be(); });
		AddScript("buffer_save_lib", ID_buffer_save_lib, { buffer_save_lib(a[0], a[1]); return VarType(); });
		AddScript("buffer_skip", ID_buffer_skip, { buffer_skip(a[0]); return VarType(); });
		AddScript("buffer_write_byte", ID_buffer_write_byte, { buffer_write_byte(a[0]); return VarType(); });
		AddScript("buffer_write_double", ID_buffer_write_double, { buffer_write_double(a[0]); return VarType(); });
		AddScript("buffer_write_double_be", ID_buffer_write_double_be, { buffer_write_double_be(a[0]); return VarType(); });
		AddScript("buffer_write_float_be", ID_buffer_write_float_be, { buffer_write_float_be(a[0]); return VarType(); });
		AddScript("buffer_write_int", ID_buffer_write_int, { buffer_write_int(a[0]); return VarType(); });
		AddScript("buffer_write_short", ID_buffer_write_short, { buffer_write_short(a[0]); return VarType(); });
		AddScript("buffer_write_string", ID_buffer_write_string, { buffer_write_string(a[0]); return VarType(); });
		AddScript("buffer_write_string_int", ID_buffer_write_string_int, { buffer_write_string_int(a[0]); return VarType(); });
		AddScript("builder_combine_threads", ID_builder_combine_threads, { builder_combine_threads(Scope<obj_builder>(s, o)); return VarType(); });
		AddScript("builder_create_buffers", ID_builder_create_buffers, { builder_create_buffers(Scope<obj_builder>(s, o)); return VarType(); });
		AddScript("builder_done", ID_builder_done, { builder_done(Scope<obj_builder>(s, o)); return VarType(); });
		AddScript("builder_event_create", ID_builder_event_create, { builder_event_create(Scope<obj_builder>(s, o)); return VarType(); });
		AddScript("builder_generate", ID_builder_generate, { return builder_generate(ScopeAny(s, o)); });
		AddScript("builder_get_block", ID_builder_get_block, { return builder_get_block(ScopeAny(s, o), a[0], a[1], a[2]); });
		AddScript("builder_get_state_id", ID_builder_get_state_id, { return builder_get_state_id(ScopeAny(s, o), a[0], a[1], a[2]); });
		AddScript("builder_get_waterlogged", ID_builder_get_waterlogged, { return builder_get_waterlogged(Scope<obj_builder_thread>(s, o), a[0], a[1], a[2]); });
		AddScript("builder_get_render_model_index", ID_builder_get_render_model_index, { return builder_get_render_model_index(Scope<obj_builder_thread>(s, o), a[0], a[1], a[2]); });
		AddScript("builder_get_render_model", ID_builder_get_render_model, { return builder_get_render_model(Scope<obj_builder_thread>(s, o), a[0], a[1], a[2]); });
		AddScript("builder_get_render_model_multipart", ID_builder_get_render_model_multipart, { return builder_get_render_model_multipart(a[0], a[1], a[2], a[3]); });
		AddScript("builder_read_schematic", ID_builder_read_schematic, { return builder_read_schematic(Scope<obj_builder>(s, o), a[0]); });
		AddScript("builder_read_schematic_nbt", ID_builder_read_schematic_nbt, { return builder_read_schematic_nbt(ScopeAny(s, o), a[0]); });
		AddScript("builder_read_schematic_blocks", ID_builder_read_schematic_blocks, { builder_read_schematic_blocks(Scope<obj_builder>(s, o)); return VarType(); });
		AddScript("builder_read_schematic_tile_entities", ID_builder_read_schematic_tile_entities, { builder_read_schematic_tile_entities(Scope<obj_builder>(s, o)); return VarType(); });
		AddScript("builder_read_blocks_file", ID_builder_read_blocks_file, { builder_read_blocks_file(Scope<obj_builder>(s, o)); return VarType(); });
		AddScript("builder_set_state_id", ID_builder_set_state_id, { builder_set_state_id(Scope<obj_builder_thread>(s, o), a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("builder_set_render_model", ID_builder_set_render_model, { builder_set_render_model(Scope<obj_builder_thread>(s, o), a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("builder_set_model", ID_builder_set_model, { return builder_set_model(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false)); });
		AddScript("builder_spawn_threads", ID_builder_spawn_threads, { builder_spawn_threads(Scope<obj_builder>(s, o), a[0]); return VarType(); });
		AddScript("builder_start", ID_builder_start, { builder_start(Scope<obj_builder>(s, o)); return VarType(); });
		AddScript("builder_thread_event_create", ID_builder_thread_event_create, { builder_thread_event_create(Scope<obj_builder_thread>(s, o)); return VarType(); });
		AddScript("builder_thread_set_pos", ID_builder_thread_set_pos, { builder_thread_set_pos(Scope<obj_builder_thread>(s, o), a[0]); return VarType(); });
		AddScript("camera_control_move", ID_camera_control_move, { camera_control_move(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("camera_control_pan", ID_camera_control_pan, { camera_control_pan(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("camera_control_rotate", ID_camera_control_rotate, { camera_control_rotate(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("camera_startup", ID_camera_startup, { camera_startup(ScopeAny(s, o)); return VarType(); });
		AddScript("camera_work_reset", ID_camera_work_reset, { camera_work_reset(ScopeAny(s, o)); return VarType(); });
		AddScript("camera_work_set_angle", ID_camera_work_set_angle, { camera_work_set_angle(); return VarType(); });
		AddScript("camera_work_set_focus", ID_camera_work_set_focus, { camera_work_set_focus(); return VarType(); });
		AddScript("camera_work_set_from", ID_camera_work_set_from, { camera_work_set_from(ScopeAny(s, o)); return VarType(); });
		AddScript("clip_begin", ID_clip_begin, { clip_begin(a.Size() > 0 ? a[0] : VarType(IntType(0)), a.Size() > 1 ? a[1] : VarType(IntType(0)), a.Size() > 2 ? a[2] : VarType(IntType(0)), a.Size() > 3 ? a[3] : VarType(IntType(0))); return VarType(); });
		AddScript("clip_end", ID_clip_end, { clip_end(); return VarType(); });
		AddScript("collapse_event_create", ID_collapse_event_create, { collapse_event_create(ScopeAny(s, o)); return VarType(); });
		AddScript("collapse_register", ID_collapse_register, { collapse_register(a[0]); return VarType(); });
		AddScript("colorpicker_blue", ID_colorpicker_blue, { colorpicker_blue(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("colorpicker_brightness", ID_colorpicker_brightness, { colorpicker_brightness(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("colorpicker_draw", ID_colorpicker_draw, { colorpicker_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("colorpicker_green", ID_colorpicker_green, { colorpicker_green(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("colorpicker_hue", ID_colorpicker_hue, { colorpicker_hue(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("colorpicker_red", ID_colorpicker_red, { colorpicker_red(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("colorpicker_saturation", ID_colorpicker_saturation, { colorpicker_saturation(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("colorpicker_set_mode", ID_colorpicker_set_mode, { colorpicker_set_mode(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("colorpicker_show", ID_colorpicker_show, { colorpicker_show(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]); return VarType(); });
		AddScript("colorpicker_startup", ID_colorpicker_startup, { colorpicker_startup(); return VarType(); });
		AddScript("colorpicker_update", ID_colorpicker_update, { colorpicker_update(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("color_add", ID_color_add, { return color_add(a[0], a[1]); });
		AddScript("color_multiply", ID_color_multiply, { return color_multiply(a[0], a[1]); });
		AddScript("color_to_hex", ID_color_to_hex, { return color_to_hex(a[0]); });
		AddScript("context_menu_add_level", ID_context_menu_add_level, { return context_menu_add_level(ScopeAny(s, o), a[0], a[1], a[2], a.Size() > 3 ? a[3] : VarType(null_)); });
		AddScript("context_menu_area", ID_context_menu_area, { return context_menu_area(ScopeAny(s, o), a); });
		AddScript("context_menu_close", ID_context_menu_close, { return context_menu_close(ScopeAny(s, o)); });
		AddScript("context_menu_draw", ID_context_menu_draw, { return context_menu_draw(ScopeAny(s, o)); });
		AddScript("context_menu_draw_level", ID_context_menu_draw_level, { return context_menu_draw_level(ScopeAny(s, o), a[0]); });
		AddScript("debug", ID_debug, { return debug(a); });
		AddScript("debug_ds_list", ID_debug_ds_list, { debug_ds_list(a[0]); return VarType(); });
		AddScript("debug_ds_map", ID_debug_ds_map, { debug_ds_map(a[0]); return VarType(); });
		AddScript("debug_info_draw", ID_debug_info_draw, { return debug_info_draw(ScopeAny(s, o)); });
		AddScript("debug_timer_start", ID_debug_timer_start, { debug_timer_start(); return VarType(); });
		AddScript("debug_timer_stop", ID_debug_timer_stop, { debug_timer_stop(a[0]); return VarType(); });
		AddScript("dec_to_hex", ID_dec_to_hex, { return dec_to_hex(a[0], a.Size() > 1 ? a[1] : VarType(IntType(0))); });
		AddScript("directory_create_lib", ID_directory_create_lib, { return directory_create_lib(a[0]); });
		AddScript("directory_delete_lib", ID_directory_delete_lib, { return directory_delete_lib(a[0]); });
		AddScript("directory_exists_lib", ID_directory_exists_lib, { return directory_exists_lib(a[0]); });
		AddScript("directory_name", ID_directory_name, { return directory_name(a[0]); });
		AddScript("dir_get_string", ID_dir_get_string, { return dir_get_string(a[0]); });
		AddScript("dir_get_vec3", ID_dir_get_vec3, { return dir_get_vec3(a[0]); });
		AddScript("draw_bezier_curve", ID_draw_bezier_curve, { draw_bezier_curve(a[0], a[1], a[2], a[3], a[4], a[5], a[6]); return VarType(); });
		AddScript("draw_bezier_graph", ID_draw_bezier_graph, { draw_bezier_graph(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); return VarType(); });
		AddScript("draw_blank", ID_draw_blank, { draw_blank(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("draw_box", ID_draw_box, { return draw_box(a[0], a[1], a[2], a[3], a[4], a[5], a[6]); });
		AddScript("draw_box_bevel", ID_draw_box_bevel, { draw_box_bevel(a); return VarType(); });
		AddScript("draw_box_hover", ID_draw_box_hover, { return draw_box_hover(a); });
		AddScript("draw_box_rounded", ID_draw_box_rounded, { draw_box_rounded(a[0], a[1], a[2], a[3], a[4], a[5], a.Size() > 6 ? a[6] : VarType(true), a.Size() > 7 ? a[7] : VarType(true), a.Size() > 8 ? a[8] : VarType(true), a.Size() > 9 ? a[9] : VarType(true), a.Size() > 10 ? a[10] : VarType(IntType(2)), a.Size() > 11 ? a[11] : VarType(VarType())); return VarType(); });
		AddScript("draw_box_selection", ID_draw_box_selection, { draw_box_selection(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("draw_button_accent", ID_draw_button_accent, { return draw_button_accent(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4]); });
		AddScript("draw_button_collapse", ID_draw_button_collapse, { return draw_button_collapse(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a.Size() > 5 ? a[5] : VarType(/*""*/ STR(0))); });
		AddScript("draw_button_color", ID_draw_button_color, { return draw_button_color(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]); });
		AddScript("draw_button_icon", ID_draw_button_icon, { return draw_button_icon(ScopeAny(s, o), a); });
		AddScript("draw_button_label", ID_draw_button_label, { return draw_button_label(ScopeAny(s, o), a[0], a[1], a[2], a.Size() > 3 ? a[3] : VarType(null_), a.Size() > 4 ? a[4] : VarType(null_), a.Size() > 5 ? a[5] : VarType(e_button_PRIMARY), a.Size() > 6 ? a[6] : VarType(null_), a.Size() > 7 ? a[7] : VarType(e_anchor_LEFT), a.Size() > 8 ? a[8] : VarType(false)); });
		AddScript("draw_button_menu", ID_draw_button_menu, { return draw_button_menu(ScopeAny(s, o), a); });
		AddScript("draw_button_swatch", ID_draw_button_swatch, { return draw_button_swatch(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("draw_button_text", ID_draw_button_text, { draw_button_text(ScopeAny(s, o), a); return VarType(); });
		AddScript("draw_button_transition", ID_draw_button_transition, { return draw_button_transition(ScopeAny(s, o), a[0], a[1], a[2]); });
		AddScript("draw_checkbox", ID_draw_checkbox, { return draw_checkbox(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a.Size() > 5 ? a[5] : VarType(/*""*/ STR(0))); });
		AddScript("draw_circle_ext", ID_draw_circle_ext, { draw_circle_ext(a[0], a[1], a[2], a[3], a[4], a[5], a[6]); return VarType(); });
		AddScript("draw_divide", ID_draw_divide, { draw_divide(a[0], a[1], a[2]); return VarType(); });
		AddScript("draw_divide_vertical", ID_draw_divide_vertical, { draw_divide_vertical(a[0], a[1], a[2]); return VarType(); });
		AddScript("draw_dragger", ID_draw_dragger, { return draw_dragger(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a.Size() > 12 ? a[12] : VarType(null_), a.Size() > 13 ? a[13] : VarType(true), a.Size() > 14 ? a[14] : VarType(false), a.Size() > 15 ? a[15] : VarType(/*""*/ STR(0))); });
		AddScript("draw_dragger_sky", ID_draw_dragger_sky, { return draw_dragger_sky(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]); });
		AddScript("draw_dropshadow", ID_draw_dropshadow, { return draw_dropshadow(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("draw_gradient", ID_draw_gradient, { draw_gradient(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]); return VarType(); });
		AddScript("draw_help_circle", ID_draw_help_circle, { return draw_help_circle(ScopeAny(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("draw_image", ID_draw_image, { draw_image(a); return VarType(); });
		AddScript("draw_image_box_cover", ID_draw_image_box_cover, { return draw_image_box_cover(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("draw_inputbox", ID_draw_inputbox, { return draw_inputbox(ScopeAny(s, o), a); });
		AddScript("draw_keybind", ID_draw_keybind, { return draw_keybind(ScopeAny(s, o), a[0], a[1], a[2]); });
		AddScript("draw_label", ID_draw_label, { return draw_label(ScopeAny(s, o), a); });
		AddScript("draw_label_value", ID_draw_label_value, { draw_label_value(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a.Size() > 6 ? a[6] : VarType(false)); return VarType(); });
		AddScript("draw_line_ext", ID_draw_line_ext, { draw_line_ext(a[0], a[1], a[2], a[3], a[4], a[5]); return VarType(); });
		AddScript("draw_loading_bar", ID_draw_loading_bar, { draw_loading_bar(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a.Size() > 6 ? a[6] : VarType(/*""*/ STR(0))); return VarType(); });
		AddScript("draw_meter", ID_draw_meter, { return draw_meter(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a.Size() > 11 ? a[11] : VarType(/*""*/ STR(0))); });
		AddScript("draw_meter_range", ID_draw_meter_range, { return draw_meter_range(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14]); });
		AddScript("draw_missing", ID_draw_missing, { draw_missing(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("draw_outline", ID_draw_outline, { return draw_outline(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a.Size() > 7 ? a[7] : VarType(false)); });
		AddScript("draw_pattern", ID_draw_pattern, { draw_pattern(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("draw_radiobutton", ID_draw_radiobutton, { return draw_radiobutton(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("draw_recent", ID_draw_recent, { return draw_recent(ScopeAny(s, o), a); });
		AddScript("draw_separator_vertical", ID_draw_separator_vertical, { draw_separator_vertical(a[0], a[1], a[2]); return VarType(); });
		AddScript("draw_subheader", ID_draw_subheader, { draw_subheader(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4]); return VarType(); });
		AddScript("draw_surface_box_center", ID_draw_surface_box_center, { return draw_surface_box_center(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("draw_surface_exists", ID_draw_surface_exists, { draw_surface_exists(a[0], a[1], a[2]); return VarType(); });
		AddScript("draw_surface_size", ID_draw_surface_size, { draw_surface_size(a[0], a[1], a[2], a[3], a[4]); return VarType(); });
		AddScript("draw_switch", ID_draw_switch, { return draw_switch(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a.Size() > 5 ? a[5] : VarType(/*""*/ STR(0)), a.Size() > 6 ? a[6] : VarType(false)); });
		AddScript("draw_textfield", ID_draw_textfield, { return draw_textfield(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a.Size() > 7 ? a[7] : VarType(/*""*/ STR(0)), a.Size() > 8 ? a[8] : VarType(/*"top"*/ STR(201)), a.Size() > 9 ? a[9] : VarType(false)); });
		AddScript("draw_textfield_group", ID_draw_textfield_group, { return draw_textfield_group(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a.Size() > 8 ? a[8] : VarType(false), a.Size() > 9 ? a[9] : VarType(true), a.Size() > 10 ? a[10] : VarType(IntType(0)), a.Size() > 11 ? a[11] : VarType(true), a.Size() > 12 ? a[12] : VarType(true)); });
		AddScript("draw_texture", ID_draw_texture, { draw_texture(a); return VarType(); });
		AddScript("draw_texture_done", ID_draw_texture_done, { draw_texture_done(); return VarType(); });
		AddScript("draw_texture_part", ID_draw_texture_part, { draw_texture_part(a); return VarType(); });
		AddScript("draw_texture_picker", ID_draw_texture_picker, { draw_texture_picker(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a.Size() > 11 ? a[11] : VarType(null_), a.Size() > 12 ? a[12] : VarType(null_), a.Size() > 13 ? a[13] : VarType(null_), a.Size() > 14 ? a[14] : VarType(null_), a.Size() > 15 ? a[15] : VarType(null_)); return VarType(); });
		AddScript("draw_texture_slot", ID_draw_texture_slot, { draw_texture_slot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a.Size() > 8 ? a[8] : VarType(c_white)); return VarType(); });
		AddScript("draw_texture_start", ID_draw_texture_start, { draw_texture_start(); return VarType(); });
		AddScript("draw_togglebutton", ID_draw_togglebutton, { return draw_togglebutton(ScopeAny(s, o), a[0], a[1], a[2], a.Size() > 3 ? a[3] : VarType(true), a.Size() > 4 ? a[4] : VarType(true)); });
		AddScript("draw_tooltip_label", ID_draw_tooltip_label, { draw_tooltip_label(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("draw_wheel", ID_draw_wheel, { return draw_wheel(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a.Size() > 11 ? a[11] : VarType(IntType(24)), a.Size() > 12 ? a[12] : VarType(VarType())); });
		AddScript("draw_wheel_sky", ID_draw_wheel_sky, { return draw_wheel_sky(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]); });
		AddScript("ds_list_create_array", ID_ds_list_create_array, { return ds_list_create_array(a[0]); });
		AddScript("ds_list_delete_value", ID_ds_list_delete_value, { ds_list_delete_value(a[0], a[1]); return VarType(); });
		AddScript("ds_list_merge", ID_ds_list_merge, { ds_list_merge(a[0], a[1]); return VarType(); });
		AddScript("ds_list_valid", ID_ds_list_valid, { return ds_list_valid(a[0]); });
		AddScript("ds_map_find_key", ID_ds_map_find_key, { return ds_map_find_key(a[0], a[1]); });
		AddScript("ds_map_merge", ID_ds_map_merge, { ds_map_merge(a[0], a[1], a.Size() > 2 ? a[2] : VarType(true)); return VarType(); });
		AddScript("ds_map_valid", ID_ds_map_valid, { return ds_map_valid(a[0]); });
		AddScript("ease", ID_ease, { return ease(a[0], a[1]); });
		AddScript("ease_bezier_curve", ID_ease_bezier_curve, { return ease_bezier_curve(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("error", ID_error, { return error(a[0]); });
		AddScript("eval", ID_eval, { return eval(a[0], a[1]); });
		AddScript("eval_solve", ID_eval_solve, { return eval_solve(a[0], a[1], a[2]); });
		AddScript("eval_is_digit", ID_eval_is_digit, { return eval_is_digit(a[0]); });
		AddScript("eval_precedence", ID_eval_precedence, { return eval_precedence(a[0]); });
		AddScript("execute", ID_execute, { execute(a[0], a[1], a[2]); return VarType(); });
		AddScript("export_done_image", ID_export_done_image, { export_done_image(ScopeAny(s, o)); return VarType(); });
		AddScript("export_done_movie", ID_export_done_movie, { export_done_movie(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false)); return VarType(); });
		AddScript("export_update", ID_export_update, { return export_update(ScopeAny(s, o)); });
		AddScript("filename_get_unique", ID_filename_get_unique, { return filename_get_unique(a[0]); });
		AddScript("filename_get_valid", ID_filename_get_valid, { return filename_get_valid(a[0]); });
		AddScript("filename_new_ext", ID_filename_new_ext, { return filename_new_ext(a[0], a[1]); });
		AddScript("file_copy_lib", ID_file_copy_lib, { return file_copy_lib(a[0], a[1]); });
		AddScript("file_delete_lib", ID_file_delete_lib, { return file_delete_lib(a[0]); });
		AddScript("file_dialog_open", ID_file_dialog_open, { return file_dialog_open(a[0], a[1], a[2], a[3]); });
		AddScript("file_dialog_open_asset", ID_file_dialog_open_asset, { return file_dialog_open_asset(); });
		AddScript("file_dialog_open_font", ID_file_dialog_open_font, { return file_dialog_open_font(); });
		AddScript("file_dialog_open_image", ID_file_dialog_open_image, { return file_dialog_open_image(); });
		AddScript("file_dialog_open_image_pack", ID_file_dialog_open_image_pack, { return file_dialog_open_image_pack(); });
		AddScript("file_dialog_open_language", ID_file_dialog_open_language, { return file_dialog_open_language(); });
		AddScript("file_dialog_open_model", ID_file_dialog_open_model, { return file_dialog_open_model(); });
		AddScript("file_dialog_open_multiple", ID_file_dialog_open_multiple, { return file_dialog_open_multiple(a[0], a[1], a[2], a[3]); });
		AddScript("file_dialog_open_pack", ID_file_dialog_open_pack, { return file_dialog_open_pack(); });
		AddScript("file_dialog_open_particles", ID_file_dialog_open_particles, { return file_dialog_open_particles(); });
		AddScript("file_dialog_open_project", ID_file_dialog_open_project, { return file_dialog_open_project(ScopeAny(s, o)); });
		AddScript("file_dialog_open_render", ID_file_dialog_open_render, { return file_dialog_open_render(); });
		AddScript("file_dialog_open_scenery", ID_file_dialog_open_scenery, { return file_dialog_open_scenery(); });
		AddScript("file_dialog_open_sound", ID_file_dialog_open_sound, { return file_dialog_open_sound(); });
		AddScript("file_dialog_save", ID_file_dialog_save, { return file_dialog_save(a[0], a[1], a[2], a[3]); });
		AddScript("file_dialog_save_image", ID_file_dialog_save_image, { return file_dialog_save_image(a[0]); });
		AddScript("file_dialog_save_keyframes", ID_file_dialog_save_keyframes, { return file_dialog_save_keyframes(a[0]); });
		AddScript("file_dialog_save_movie_mov", ID_file_dialog_save_movie_mov, { return file_dialog_save_movie_mov(ScopeAny(s, o), a[0]); });
		AddScript("file_dialog_save_movie_mp4", ID_file_dialog_save_movie_mp4, { return file_dialog_save_movie_mp4(ScopeAny(s, o), a[0]); });
		AddScript("file_dialog_save_movie_png", ID_file_dialog_save_movie_png, { return file_dialog_save_movie_png(ScopeAny(s, o), a[0]); });
		AddScript("file_dialog_save_movie_wmv", ID_file_dialog_save_movie_wmv, { return file_dialog_save_movie_wmv(ScopeAny(s, o), a[0]); });
		AddScript("file_dialog_save_object", ID_file_dialog_save_object, { return file_dialog_save_object(a[0]); });
		AddScript("file_dialog_save_particles", ID_file_dialog_save_particles, { return file_dialog_save_particles(a[0]); });
		AddScript("file_dialog_save_project", ID_file_dialog_save_project, { return file_dialog_save_project(ScopeAny(s, o), a[0]); });
		AddScript("file_dialog_save_render", ID_file_dialog_save_render, { return file_dialog_save_render(a[0]); });
		AddScript("file_dialog_save_resource", ID_file_dialog_save_resource, { return file_dialog_save_resource(a[0], a[1]); });
		AddScript("file_exists_lib", ID_file_exists_lib, { return file_exists_lib(a[0]); });
		AddScript("file_find", ID_file_find, { return file_find(a[0], a[1]); });
		AddScript("file_find_single", ID_file_find_single, { return file_find_single(a[0], a[1]); });
		AddScript("file_lib_startup", ID_file_lib_startup, { return file_lib_startup(); });
		AddScript("file_rename_lib", ID_file_rename_lib, { return file_rename_lib(a[0], a[1]); });
		AddScript("file_text_contents", ID_file_text_contents, { return file_text_contents(a[0]); });
		AddScript("find_biome", ID_find_biome, { return find_biome(a[0]); });
		AddScript("find_videoquality", ID_find_videoquality, { return find_videoquality(a[0]); });
		AddScript("find_videotemplate", ID_find_videotemplate, { return find_videotemplate(a[0], a[1]); });
		AddScript("font_add_lib", ID_font_add_lib, { return font_add_lib(a[0], a[1], a[2], a[3], a.Size() > 4 ? a[4] : VarType(true)); });
		AddScript("gzunzip", ID_gzunzip, { return gzunzip(a[0], a[1]); });
		AddScript("halton", ID_halton, { return halton(a[0], a[1]); });
		AddScript("hex_to_color", ID_hex_to_color, { return hex_to_color(a[0]); });
		AddScript("hex_to_dec", ID_hex_to_dec, { return hex_to_dec(a[0]); });
		AddScript("history_clear", ID_history_clear, { history_clear(ScopeAny(s, o)); return VarType(); });
		AddScript("history_copy_render_settings", ID_history_copy_render_settings, { history_copy_render_settings(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("history_destroy_loaded", ID_history_destroy_loaded, { history_destroy_loaded(Scope<obj_history>(s, o)); return VarType(); });
		AddScript("history_pop", ID_history_pop, { history_pop(ScopeAny(s, o)); return VarType(); });
		AddScript("history_push", ID_history_push, { history_push(ScopeAny(s, o)); return VarType(); });
		AddScript("history_redo_res", ID_history_redo_res, { return history_redo_res(ScopeAny(s, o)); });
		AddScript("history_restore_bench", ID_history_restore_bench, { history_restore_bench(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("history_restore_keyframes", ID_history_restore_keyframes, { history_restore_keyframes(Scope<obj_history>(s, o)); return VarType(); });
		AddScript("history_restore_parts", ID_history_restore_parts, { history_restore_parts(Scope<obj_history>(s, o)); return VarType(); });
		AddScript("history_restore_part_usage_tl", ID_history_restore_part_usage_tl, { history_restore_part_usage_tl(a[0]); return VarType(); });
		AddScript("history_restore_ptype", ID_history_restore_ptype, { return history_restore_ptype(a[0], a[1]); });
		AddScript("history_restore_res", ID_history_restore_res, { return history_restore_res(a[0]); });
		AddScript("history_restore_temp", ID_history_restore_temp, { return history_restore_temp(a[0]); });
		AddScript("history_restore_tl", ID_history_restore_tl, { return history_restore_tl(a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("history_restore_tl_select", ID_history_restore_tl_select, { history_restore_tl_select(Scope<obj_history>(s, o)); return VarType(); });
		AddScript("history_restore_tl_select_new", ID_history_restore_tl_select_new, { history_restore_tl_select_new(Scope<obj_history>(s, o)); return VarType(); });
		AddScript("history_save_bench", ID_history_save_bench, { return history_save_bench(ScopeAny(s, o)); });
		AddScript("history_save_keyframes", ID_history_save_keyframes, { history_save_keyframes(Scope<obj_history>(s, o)); return VarType(); });
		AddScript("history_save_loaded", ID_history_save_loaded, { history_save_loaded(Scope<obj_history>(s, o)); return VarType(); });
		AddScript("history_save_part_usage_tl", ID_history_save_part_usage_tl, { return history_save_part_usage_tl(a[0], a[1]); });
		AddScript("history_save_ptype", ID_history_save_ptype, { return history_save_ptype(ScopeAny(s, o), a[0]); });
		AddScript("history_save_res", ID_history_save_res, { return history_save_res(Scope<obj_history>(s, o), a[0]); });
		AddScript("history_save_temp", ID_history_save_temp, { return history_save_temp(ScopeAny(s, o), a[0]); });
		AddScript("history_save_temp_usage_tl", ID_history_save_temp_usage_tl, { history_save_temp_usage_tl(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("history_save_tl", ID_history_save_tl, { return history_save_tl(ScopeAny(s, o), a[0]); });
		AddScript("history_save_tl_select", ID_history_save_tl_select, { history_save_tl_select(ScopeAny(s, o)); return VarType(); });
		AddScript("history_save_tl_select_new", ID_history_save_tl_select_new, { history_save_tl_select_new(ScopeAny(s, o)); return VarType(); });
		AddScript("history_save_tl_tree", ID_history_save_tl_tree, { history_save_tl_tree(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("history_save_var", ID_history_save_var, { history_save_var(Scope<obj_history>(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("history_save_var_start", ID_history_save_var_start, { return history_save_var_start(ScopeAny(s, o), a[0], a[1]); });
		AddScript("history_set", ID_history_set, { return history_set(ScopeAny(s, o), a[0]); });
		AddScript("history_set_res", ID_history_set_res, { return history_set_res(ScopeAny(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("history_set_var", ID_history_set_var, { return history_set_var(ScopeAny(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("history_startup", ID_history_startup, { history_startup(); return VarType(); });
		AddScript("history_undo_res", ID_history_undo_res, { return history_undo_res(); });
		AddScript("interface_update_accent", ID_interface_update_accent, { interface_update_accent(); return VarType(); });
		AddScript("interface_update_instant", ID_interface_update_instant, { interface_update_instant(ScopeAny(s, o)); return VarType(); });
		AddScript("json_file_convert_unicode", ID_json_file_convert_unicode, { return json_file_convert_unicode(a[0], a[1]); });
		AddScript("json_load", ID_json_load, { return json_load(a); });
		AddScript("json_load_array", ID_json_load_array, { return json_load_array(); });
		AddScript("json_load_char", ID_json_load_char, { return json_load_char(); });
		AddScript("json_load_number", ID_json_load_number, { return json_load_number(); });
		AddScript("json_load_object", ID_json_load_object, { return json_load_object(a[0]); });
		AddScript("json_load_string", ID_json_load_string, { return json_load_string(); });
		AddScript("json_load_value", ID_json_load_value, { return json_load_value(); });
		AddScript("json_load_word", ID_json_load_word, { return json_load_word(); });
		AddScript("json_save_array", ID_json_save_array, { json_save_array(a[0], a[1]); return VarType(); });
		AddScript("json_save_array_done", ID_json_save_array_done, { json_save_array_done(); return VarType(); });
		AddScript("json_save_array_start", ID_json_save_array_start, { json_save_array_start(a); return VarType(); });
		AddScript("json_save_array_value", ID_json_save_array_value, { json_save_array_value(a[0]); return VarType(); });
		AddScript("json_save_done", ID_json_save_done, { json_save_done(); return VarType(); });
		AddScript("json_save_indent", ID_json_save_indent, { json_save_indent(); return VarType(); });
		AddScript("json_save_object_done", ID_json_save_object_done, { json_save_object_done(); return VarType(); });
		AddScript("json_save_object_start", ID_json_save_object_start, { json_save_object_start(a); return VarType(); });
		AddScript("json_save_start", ID_json_save_start, { json_save_start(a[0]); return VarType(); });
		AddScript("json_save_value", ID_json_save_value, { json_save_value(a[0]); return VarType(); });
		AddScript("json_save_var", ID_json_save_var, { json_save_var(a[0], a[1]); return VarType(); });
		AddScript("json_save_var_bool", ID_json_save_var_bool, { json_save_var_bool(a[0], a[1]); return VarType(); });
		AddScript("json_save_var_color", ID_json_save_var_color, { json_save_var_color(a[0], a[1]); return VarType(); });
		AddScript("json_save_var_nullable", ID_json_save_var_nullable, { json_save_var_nullable(a[0], a[1]); return VarType(); });
		AddScript("json_save_var_point2D", ID_json_save_var_point2D, { json_save_var_point2D(a[0], a[1]); return VarType(); });
		AddScript("json_save_var_point3D", ID_json_save_var_point3D, { json_save_var_point3D(a[0], a[1]); return VarType(); });
		AddScript("json_save_var_save_id", ID_json_save_var_save_id, { json_save_var_save_id(a[0], a[1]); return VarType(); });
		AddScript("json_save_var_state_vars", ID_json_save_var_state_vars, { json_save_var_state_vars(a[0], a[1]); return VarType(); });
		AddScript("json_startup", ID_json_startup, { json_startup(); return VarType(); });
		AddScript("json_string_encode", ID_json_string_encode, { return json_string_encode(a[0]); });
		AddScript("keybinds_reset_default", ID_keybinds_reset_default, { keybinds_reset_default(ScopeAny(s, o)); return VarType(); });
		AddScript("keybinds_update_match", ID_keybinds_update_match, { keybinds_update_match(); return VarType(); });
		AddScript("keybind_check", ID_keybind_check, { return keybind_check(a[0], a[1]); });
		AddScript("keybind_event_create", ID_keybind_event_create, { keybind_event_create(Scope<obj_keybind>(s, o)); return VarType(); });
		AddScript("keybind_new", ID_keybind_new, { return keybind_new(a[0], a.Size() > 1 ? a[1] : VarType(false), a.Size() > 2 ? a[2] : VarType(false), a.Size() > 3 ? a[3] : VarType(false)); });
		AddScript("keybind_register", ID_keybind_register, { keybind_register(a[0], a[1], a[2], a.Size() > 3 ? a[3] : VarType(false)); return VarType(); });
		AddScript("keybind_restore", ID_keybind_restore, { keybind_restore(ScopeAny(s, o), a[0], a.Size() > 1 ? a[1] : VarType(false)); return VarType(); });
		AddScript("keybind_set", ID_keybind_set, { keybind_set(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("keyframes_save", ID_keyframes_save, { return keyframes_save(ScopeAny(s, o)); });
		AddScript("keyframe_event_destroy", ID_keyframe_event_destroy, { keyframe_event_destroy(Scope<obj_keyframe>(s, o)); return VarType(); });
		AddScript("keyframe_update_item_name", ID_keyframe_update_item_name, { return keyframe_update_item_name(Scope<obj_keyframe>(s, o)); });
		AddScript("key_valid", ID_key_valid, { return key_valid(a[0]); });
		AddScript("langauge_new", ID_langauge_new, { langauge_new(a[0]); return VarType(); });
		AddScript("languages_load", ID_languages_load, { return languages_load(); });
		AddScript("languages_save", ID_languages_save, { languages_save(); return VarType(); });
		AddScript("language_add", ID_language_add, { return language_add(ScopeAny(s, o)); });
		AddScript("language_load", ID_language_load, { return language_load(a[0], a[1], a.Size() > 2 ? a[2] : VarType(false)); });
		AddScript("language_load_legacy", ID_language_load_legacy, { return language_load_legacy(a[0], a[1]); });
		AddScript("language_load_map", ID_language_load_map, { return language_load_map(a[0], a[1], a[2]); });
		AddScript("language_remove", ID_language_remove, { language_remove(a[0]); return VarType(); });
		AddScript("legacy_startup", ID_legacy_startup, { return legacy_startup(); });
		AddScript("lengthdir_z", ID_lengthdir_z, { return lengthdir_z(a[0], a[1]); });
		AddScript("lib_startup", ID_lib_startup, { return lib_startup(); });
		AddScript("list_destroy", ID_list_destroy, { list_destroy(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("list_event_destroy", ID_list_event_destroy, { list_event_destroy(Scope<obj_list>(s, o)); return VarType(); });
		AddScript("list_init", ID_list_init, { return list_init(ScopeAny(s, o), a[0]); });
		AddScript("list_init_context_menu", ID_list_init_context_menu, { return list_init_context_menu(ScopeAny(s, o), a[0]); });
		AddScript("list_init_end", ID_list_init_end, { return list_init_end(ScopeAny(s, o)); });
		AddScript("list_init_start", ID_list_init_start, { list_init_start(); return VarType(); });
		AddScript("list_item_add", ID_list_item_add, { return list_item_add(a[0], a[1], a.Size() > 2 ? a[2] : VarType(/*""*/ STR(0)), a.Size() > 3 ? a[3] : VarType(null_), a.Size() > 4 ? a[4] : VarType(null_), a.Size() > 5 ? a[5] : VarType(null_), a.Size() > 6 ? a[6] : VarType(null_), a.Size() > 7 ? a[7] : VarType(false), a.Size() > 8 ? a[8] : VarType(true)); });
		AddScript("list_item_add_action", ID_list_item_add_action, { list_item_add_action(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a.Size() > 7 ? a[7] : VarType(VarType()), a.Size() > 8 ? a[8] : VarType(null_)); return VarType(); });
		AddScript("list_item_draw", ID_list_item_draw, { return list_item_draw(ScopeAny(s, o), a); });
		AddScript("list_item_event_destroy", ID_list_item_event_destroy, { list_item_event_destroy(Scope<obj_list_item>(s, o)); return VarType(); });
		AddScript("list_new", ID_list_new, { return list_new(); });
		AddScript("list_update_width", ID_list_update_width, { list_update_width(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("list_value_filter", ID_list_value_filter, { list_value_filter(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("load_next", ID_load_next, { load_next(ScopeAny(s, o)); return VarType(); });
		AddScript("load_start", ID_load_start, { load_start(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("log", ID_log, { return log(a); });
		AddScript("marker_editor_draw", ID_marker_editor_draw, { marker_editor_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("marker_event_create", ID_marker_event_create, { marker_event_create(Scope<obj_marker>(s, o)); return VarType(); });
		AddScript("marker_event_destroy", ID_marker_event_destroy, { marker_event_destroy(Scope<obj_marker>(s, o)); return VarType(); });
		AddScript("marker_list_sort", ID_marker_list_sort, { marker_list_sort(ScopeAny(s, o)); return VarType(); });
		AddScript("math_lib_startup", ID_math_lib_startup, { math_lib_startup(a[0]); return VarType(); });
		AddScript("matrix_create", ID_matrix_create, { return matrix_create(a[0], a[1], a[2]); });
		AddScript("matrix_create_axis_angle", ID_matrix_create_axis_angle, { return matrix_create_axis_angle(a[0], a[1]); });
		AddScript("matrix_create_lookat", ID_matrix_create_lookat, { return matrix_create_lookat(a[0], a[1], a[2]); });
		AddScript("matrix_create_ortho", ID_matrix_create_ortho, { return matrix_create_ortho(a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("matrix_create_rotate_to", ID_matrix_create_rotate_to, { return matrix_create_rotate_to(a[0], a[1]); });
		AddScript("matrix_equals", ID_matrix_equals, { return matrix_equals(a[0], a[1]); });
		AddScript("matrix_inverse", ID_matrix_inverse, { return matrix_inverse(a[0]); });
		AddScript("matrix_position", ID_matrix_position, { return matrix_position(a[0]); });
		AddScript("matrix_remove_rotation", ID_matrix_remove_rotation, { matrix_remove_rotation(a[0]); return VarType(); });
		AddScript("matrix_remove_scale", ID_matrix_remove_scale, { matrix_remove_scale(a[0]); return VarType(); });
		AddScript("matrix_transpose", ID_matrix_transpose, { return matrix_transpose(a[0]); });
		AddScript("matrix_world_multiply_post", ID_matrix_world_multiply_post, { matrix_world_multiply_post(a[0]); return VarType(); });
		AddScript("matrix_world_multiply_pre", ID_matrix_world_multiply_pre, { matrix_world_multiply_pre(a[0]); return VarType(); });
		AddScript("matrix_world_reset", ID_matrix_world_reset, { matrix_world_reset(); return VarType(); });
		AddScript("menu_add_item", ID_menu_add_item, { menu_add_item(a); return VarType(); });
		AddScript("menu_add_timeline", ID_menu_add_timeline, { return menu_add_timeline(ScopeAny(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("menu_biome_init", ID_menu_biome_init, { return menu_biome_init(ScopeAny(s, o), a[0]); });
		AddScript("menu_draw", ID_menu_draw, { menu_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("menu_event_create", ID_menu_event_create, { menu_event_create(Scope<obj_menu>(s, o)); return VarType(); });
		AddScript("menu_event_destroy", ID_menu_event_destroy, { menu_event_destroy(ScopeAny(s, o)); return VarType(); });
		AddScript("menu_focus_selected", ID_menu_focus_selected, { menu_focus_selected(Scope<obj_menu>(s, o)); return VarType(); });
		AddScript("menu_grid_settings", ID_menu_grid_settings, { menu_grid_settings(ScopeAny(s, o)); return VarType(); });
		AddScript("menu_item_set_extend", ID_menu_item_set_extend, { menu_item_set_extend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("menu_quality_settings", ID_menu_quality_settings, { menu_quality_settings(ScopeAny(s, o)); return VarType(); });
		AddScript("menu_settings_draw", ID_menu_settings_draw, { return menu_settings_draw(ScopeAny(s, o)); });
		AddScript("menu_settings_set", ID_menu_settings_set, { menu_settings_set(ScopeAny(s, o), a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("menu_settings_transitions", ID_menu_settings_transitions, { menu_settings_transitions(ScopeAny(s, o)); return VarType(); });
		AddScript("menu_snap_settings", ID_menu_snap_settings, { menu_snap_settings(ScopeAny(s, o)); return VarType(); });
		AddScript("menu_swatches_draw", ID_menu_swatches_draw, { return menu_swatches_draw(ScopeAny(s, o)); });
		AddScript("menu_timeline_init", ID_menu_timeline_init, { return menu_timeline_init(ScopeAny(s, o), a[0]); });
		AddScript("menu_transitions", ID_menu_transitions, { return menu_transitions(ScopeAny(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("microani_set", ID_microani_set, { microani_set(a[0], a[1], a[2], a[3], a[4], a.Size() > 5 ? a[5] : VarType(false), a.Size() > 6 ? a[6] : VarType(1.5), a.Size() > 7 ? a[7] : VarType(false), a.Size() > 8 ? a[8] : VarType(IntType(0))); return VarType(); });
		AddScript("microani_update", ID_microani_update, { microani_update(a); return VarType(); });
		AddScript("minecraft_assets_event_create", ID_minecraft_assets_event_create, { minecraft_assets_event_create(Scope<obj_minecraft_assets>(s, o)); return VarType(); });
		AddScript("minecraft_assets_load", ID_minecraft_assets_load, { return minecraft_assets_load(); });
		AddScript("minecraft_assets_load_biomes", ID_minecraft_assets_load_biomes, { minecraft_assets_load_biomes(a[0], a[1]); return VarType(); });
		AddScript("minecraft_assets_load_legacy_block_data", ID_minecraft_assets_load_legacy_block_data, { minecraft_assets_load_legacy_block_data(Scope<obj_minecraft_assets>(s, o), a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("minecraft_assets_load_particles", ID_minecraft_assets_load_particles, { minecraft_assets_load_particles(a[0]); return VarType(); });
		AddScript("minecraft_assets_load_startup", ID_minecraft_assets_load_startup, { return minecraft_assets_load_startup(ScopeAny(s, o)); });
		AddScript("minecraft_assets_load_startup_version", ID_minecraft_assets_load_startup_version, { return minecraft_assets_load_startup_version(); });
		AddScript("minecraft_assets_reload", ID_minecraft_assets_reload, { return minecraft_assets_reload(); });
		AddScript("minecraft_assets_startup", ID_minecraft_assets_startup, { return minecraft_assets_startup(ScopeAny(s, o)); });
		AddScript("minecraft_asset_get_name", ID_minecraft_asset_get_name, { return minecraft_asset_get_name(a[0], a[1]); });
		AddScript("minecraft_get_color", ID_minecraft_get_color, { return minecraft_get_color(a[0]); });
		AddScript("minecraft_get_swatch", ID_minecraft_get_swatch, { return minecraft_get_swatch(a[0]); });
		AddScript("minecraft_mix_colors", ID_minecraft_mix_colors, { return minecraft_mix_colors(a[0]); });
		AddScript("minecraft_update_armor", ID_minecraft_update_armor, { minecraft_update_armor(); return VarType(); });
		AddScript("minecraft_update_armor_generate", ID_minecraft_update_armor_generate, { return minecraft_update_armor_generate(a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("minecraft_update_patterns", ID_minecraft_update_patterns, { minecraft_update_patterns(); return VarType(); });
		AddScript("minecraft_update_pattern_generate", ID_minecraft_update_pattern_generate, { return minecraft_update_pattern_generate(a[0], a[1], a[2], a[3], a.Size() > 4 ? a[4] : VarType(null_)); });
		AddScript("missing_file", ID_missing_file, { return missing_file(a[0]); });
		AddScript("model_file_event_destroy", ID_model_file_event_destroy, { model_file_event_destroy(Scope<obj_model_file>(s, o)); return VarType(); });
		AddScript("model_file_load", ID_model_file_load, { return model_file_load(a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("model_file_load_part", ID_model_file_load_part, { return model_file_load_part(ScopeAny(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("model_file_load_shape", ID_model_file_load_shape, { return model_file_load_shape(Scope<obj_model_part>(s, o), a[0], a[1]); });
		AddScript("model_file_load_texture", ID_model_file_load_texture, { return model_file_load_texture(a[0], a[1]); });
		AddScript("model_file_load_texture_material", ID_model_file_load_texture_material, { return model_file_load_texture_material(a[0], a[1]); });
		AddScript("model_file_load_tex_normal", ID_model_file_load_tex_normal, { return model_file_load_tex_normal(a[0], a[1]); });
		AddScript("model_file_matrix_map_add_part", ID_model_file_matrix_map_add_part, { return model_file_matrix_map_add_part(a[0], a[1], a[2], a[3]); });
		AddScript("model_file_matrix_map_create", ID_model_file_matrix_map_create, { return model_file_matrix_map_create(a[0], a[1], a[2]); });
		AddScript("model_load", ID_model_load, { return model_load(a[0], a[1]); });
		AddScript("model_part_event_destroy", ID_model_part_event_destroy, { model_part_event_destroy(Scope<obj_model_part>(s, o)); return VarType(); });
		AddScript("model_part_fill_shape_alpha_map", ID_model_part_fill_shape_alpha_map, { return model_part_fill_shape_alpha_map(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("model_part_fill_shape_vbuffer_map", ID_model_part_fill_shape_vbuffer_map, { return model_part_fill_shape_vbuffer_map(a[0], a[1], a[2], a[3]); });
		AddScript("model_part_get_bend_matrix", ID_model_part_get_bend_matrix, { return model_part_get_bend_matrix(ScopeAny(s, o), a); });
		AddScript("model_part_get_texture_material_name", ID_model_part_get_texture_material_name, { return model_part_get_texture_material_name(a[0], a[1]); });
		AddScript("model_part_get_texture_name", ID_model_part_get_texture_name, { return model_part_get_texture_name(a[0], a[1]); });
		AddScript("model_part_get_tex_normal_name", ID_model_part_get_tex_normal_name, { return model_part_get_tex_normal_name(a[0], a[1]); });
		AddScript("model_shape_event_destroy", ID_model_shape_event_destroy, { model_shape_event_destroy(Scope<obj_model_shape>(s, o)); return VarType(); });
		AddScript("model_shape_generate_block", ID_model_shape_generate_block, { return model_shape_generate_block(ScopeAny(s, o), a[0]); });
		AddScript("model_shape_generate_plane", ID_model_shape_generate_plane, { return model_shape_generate_plane(ScopeAny(s, o), a[0]); });
		AddScript("model_shape_generate_plane_3d", ID_model_shape_generate_plane_3d, { return model_shape_generate_plane_3d(ScopeAny(s, o), a[0], a[1]); });
		AddScript("model_shape_get_bend", ID_model_shape_get_bend, { return model_shape_get_bend(a[0], a[1]); });
		AddScript("model_shape_get_bend_scale", ID_model_shape_get_bend_scale, { return model_shape_get_bend_scale(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("model_shape_update_color", ID_model_shape_update_color, { return model_shape_update_color(ScopeAny(s, o)); });
		AddScript("mod_fix", ID_mod_fix, { return mod_fix(a[0], a[1]); });
		AddScript("movie_audio_file_add", ID_movie_audio_file_add, { return movie_audio_file_add(a[0]); });
		AddScript("movie_audio_file_decode", ID_movie_audio_file_decode, { return movie_audio_file_decode(a[0], a[1]); });
		AddScript("movie_audio_sound_add", ID_movie_audio_sound_add, { return movie_audio_sound_add(a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("movie_done", ID_movie_done, { return movie_done(); });
		AddScript("movie_frame", ID_movie_frame, { return movie_frame(a[0]); });
		AddScript("movie_set", ID_movie_set, { return movie_set(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("movie_start", ID_movie_start, { return movie_start(a[0], a[1]); });
		AddScript("nbt_debug_tag_compound", ID_nbt_debug_tag_compound, { nbt_debug_tag_compound(a[0], a[1]); return VarType(); });
		AddScript("nbt_debug_tag_list", ID_nbt_debug_tag_list, { nbt_debug_tag_list(a[0], a[1], a[2]); return VarType(); });
		AddScript("nbt_read_tag_compound", ID_nbt_read_tag_compound, { return nbt_read_tag_compound(); });
		AddScript("nbt_read_tag_list", ID_nbt_read_tag_list, { return nbt_read_tag_list(a[0], a[1]); });
		AddScript("negate", ID_negate, { return negate(a[0]); });
		AddScript("new_biome", ID_new_biome, { return new_biome(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]); });
		AddScript("new_history", ID_new_history, { return new_history(a[0]); });
		AddScript("new_minecraft_font", ID_new_minecraft_font, { return new_minecraft_font(Scope<obj_resource>(s, o)); });
		AddScript("new_minecraft_map", ID_new_minecraft_map, { return new_minecraft_map(a[0]); });
		AddScript("new_obj", ID_new_obj, { return new_obj(a[0]); });
		AddScript("new_popup", ID_new_popup, { return new_popup(a); });
		AddScript("new_res", ID_new_res, { return new_res(ScopeAny(s, o), a[0], a[1]); });
		AddScript("new_shader", ID_new_shader, { return new_shader(a[0]); });
		AddScript("new_shader_sampler", ID_new_shader_sampler, { new_shader_sampler(Scope<obj_shader>(s, o), a[0]); return VarType(); });
		AddScript("new_shader_uniform", ID_new_shader_uniform, { new_shader_uniform(Scope<obj_shader>(s, o), a[0]); return VarType(); });
		AddScript("new_tab", ID_new_tab, { return new_tab(a[0], a[1], a.Size() > 2 ? a[2] : VarType(null_), a.Size() > 3 ? a[3] : VarType(e_window_MAIN)); });
		AddScript("new_textbox", ID_new_textbox, { return new_textbox(a[0], a[1], a[2]); });
		AddScript("new_textbox_decimals", ID_new_textbox_decimals, { return new_textbox_decimals(); });
		AddScript("new_textbox_hex", ID_new_textbox_hex, { return new_textbox_hex(); });
		AddScript("new_textbox_integer", ID_new_textbox_integer, { return new_textbox_integer(); });
		AddScript("new_textbox_ndecimals", ID_new_textbox_ndecimals, { return new_textbox_ndecimals(); });
		AddScript("new_textbox_ninteger", ID_new_textbox_ninteger, { return new_textbox_ninteger(); });
		AddScript("new_tl", ID_new_tl, { return new_tl(a[0]); });
		AddScript("new_transition_texture_map", ID_new_transition_texture_map, { return new_transition_texture_map(a[0], a[1], a[2], a[3]); });
		AddScript("new_videoquality", ID_new_videoquality, { return new_videoquality(a[0], a[1]); });
		AddScript("new_videotemplate", ID_new_videotemplate, { return new_videotemplate(a[0], a[1], a[2]); });
		AddScript("object_save", ID_object_save, { return object_save(ScopeAny(s, o)); });
		AddScript("open_url", ID_open_url, { open_url(a[0]); return VarType(); });
		AddScript("popup_open_url", ID_popup_open_url, { popup_open_url(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("panel_area_draw", ID_panel_area_draw, { panel_area_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("test_reduced_motion", ID_test_reduced_motion, { return test_reduced_motion(a[0], a[1]); });
		AddScript("panel_draw", ID_panel_draw, { return panel_draw(ScopeAny(s, o), a[0]); });
		AddScript("panel_draw_content", ID_panel_draw_content, { panel_draw_content(ScopeAny(s, o)); return VarType(); });
		AddScript("panel_event_create", ID_panel_event_create, { panel_event_create(Scope<obj_panel>(s, o)); return VarType(); });
		AddScript("panel_move_draw", ID_panel_move_draw, { panel_move_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("panel_tab_list_add", ID_panel_tab_list_add, { panel_tab_list_add(a[0], a[1], a[2]); return VarType(); });
		AddScript("panel_tab_list_remove", ID_panel_tab_list_remove, { panel_tab_list_remove(a[0], a[1]); return VarType(); });
		AddScript("particles_load", ID_particles_load, { return particles_load(ScopeAny(s, o), a[0], a[1]); });
		AddScript("particles_save", ID_particles_save, { return particles_save(ScopeAny(s, o)); });
		AddScript("particle_event_destroy", ID_particle_event_destroy, { particle_event_destroy(Scope<obj_particle>(s, o)); return VarType(); });
		AddScript("particle_get_animation_percent", ID_particle_get_animation_percent, { return particle_get_animation_percent(a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("particle_spawner_clear", ID_particle_spawner_clear, { particle_spawner_clear(ScopeAny(s, o)); return VarType(); });
		AddScript("particle_spawner_init", ID_particle_spawner_init, { particle_spawner_init(ScopeAny(s, o)); return VarType(); });
		AddScript("particle_spawner_spawn", ID_particle_spawner_spawn, { particle_spawner_spawn(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("particle_spawner_update", ID_particle_spawner_update, { particle_spawner_update(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("percent", ID_percent, { return percent(a[0], a[1], a[2], a.Size() > 3 ? a[3] : VarType(true)); });
		AddScript("point2D", ID_point2D, { return point2D(a[0], a[1]); });
		AddScript("point2D_add", ID_point2D_add, { return point2D_add(a[0], a[1]); });
		AddScript("point2D_copy", ID_point2D_copy, { return point2D_copy(a[0]); });
		AddScript("point2D_mul", ID_point2D_mul, { return point2D_mul(a[0], a[1]); });
		AddScript("point2D_sub", ID_point2D_sub, { return point2D_sub(a[0], a[1]); });
		AddScript("point3D", ID_point3D, { return point3D(a[0], a[1], a[2]); });
		AddScript("point3D_add", ID_point3D_add, { return point3D_add(a[0], a[1]); });
		AddScript("point3D_angle", ID_point3D_angle, { return point3D_angle(a[0], a[1]); });
		AddScript("point3D_angle_deg", ID_point3D_angle_deg, { return point3D_angle_deg(a[0], a[1]); });
		AddScript("point3D_angle_signed", ID_point3D_angle_signed, { return point3D_angle_signed(a[0], a[1], a[2]); });
		AddScript("point3D_copy", ID_point3D_copy, { return point3D_copy(a[0]); });
		AddScript("point3D_distance", ID_point3D_distance, { return point3D_distance(a[0], a[1]); });
		AddScript("point3D_mul", ID_point3D_mul, { return point3D_mul(a[0], a[1]); });
		AddScript("point3D_mul_matrix", ID_point3D_mul_matrix, { return point3D_mul_matrix(a[0], a[1]); });
		AddScript("point3D_plane_intersect", ID_point3D_plane_intersect, { return point3D_plane_intersect(a[0], a[1], a[2], a[3]); });
		AddScript("point3D_project", ID_point3D_project, { return point3D_project(a[0], a[1], a[2], a[3]); });
		AddScript("point3D_project_plane", ID_point3D_project_plane, { return point3D_project_plane(a[0], a[1], a[2]); });
		AddScript("point3D_sub", ID_point3D_sub, { return point3D_sub(a[0], a[1]); });
		AddScript("point3D_triangle_normal", ID_point3D_triangle_normal, { return point3D_triangle_normal(a[0], a[1], a[2]); });
		AddScript("point4D", ID_point4D, { return point4D(a[0], a[1], a[2], a[3]); });
		AddScript("point4D_homogenize", ID_point4D_homogenize, { return point4D_homogenize(a[0]); });
		AddScript("point4D_mul_matrix", ID_point4D_mul_matrix, { return point4D_mul_matrix(a[0], a[1]); });
		AddScript("point_lerp", ID_point_lerp, { return point_lerp(a[0], a[1], a[2]); });
		AddScript("point_line_distance", ID_point_line_distance, { return point_line_distance(a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("point_zdirection", ID_point_zdirection, { return point_zdirection(a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("popup_about_draw", ID_popup_about_draw, { popup_about_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_advanced_draw", ID_popup_advanced_draw, { popup_advanced_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_armor_editor_draw_piece_type", ID_popup_armor_editor_draw_piece_type, { return popup_armor_editor_draw_piece_type(ScopeAny(s, o), a[0], a[1], a[2]); });
		AddScript("popup_armor_editor_draw_piece", ID_popup_armor_editor_draw_piece, { popup_armor_editor_draw_piece(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("popup_armor_editor_draw", ID_popup_armor_editor_draw, { popup_armor_editor_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_armor_editor_show", ID_popup_armor_editor_show, { popup_armor_editor_show(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("popup_close", ID_popup_close, { popup_close(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_downloadskin_draw", ID_popup_downloadskin_draw, { popup_downloadskin_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_downloadskin_show", ID_popup_downloadskin_show, { popup_downloadskin_show(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("popup_draw", ID_popup_draw, { return popup_draw(ScopeAny(s, o)); });
		AddScript("popup_exportimage_draw", ID_popup_exportimage_draw, { popup_exportimage_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_exportmovie_draw", ID_popup_exportmovie_draw, { popup_exportmovie_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_importimage_draw", ID_popup_importimage_draw, { popup_importimage_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_importitemsheet_draw", ID_popup_importitemsheet_draw, { popup_importitemsheet_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_importitemsheet_show", ID_popup_importitemsheet_show, { popup_importitemsheet_show(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("popup_loading_draw", ID_popup_loading_draw, { popup_loading_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_modelbench_draw", ID_popup_modelbench_draw, { popup_modelbench_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_newproject_clear", ID_popup_newproject_clear, { popup_newproject_clear(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_newproject_draw", ID_popup_newproject_draw, { popup_newproject_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_pattern_editor_draw", ID_popup_pattern_editor_draw, { popup_pattern_editor_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_pattern_editor_draw_layer", ID_popup_pattern_editor_draw_layer, { return popup_pattern_editor_draw_layer(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("popup_pattern_editor_edit_layer", ID_popup_pattern_editor_edit_layer, { popup_pattern_editor_edit_layer(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_pattern_editor_show", ID_popup_pattern_editor_show, { popup_pattern_editor_show(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("popup_saveas_clear", ID_popup_saveas_clear, { popup_saveas_clear(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_saveas_draw", ID_popup_saveas_draw, { popup_saveas_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_show", ID_popup_show, { popup_show(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("popup_switch", ID_popup_switch, { return popup_switch(ScopeAny(s, o), a[0]); });
		AddScript("popup_upgrade_draw", ID_popup_upgrade_draw, { popup_upgrade_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("popup_welcome_draw", ID_popup_welcome_draw, { popup_welcome_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("preview_draw", ID_preview_draw, { return preview_draw(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4]); });
		AddScript("preview_event_create", ID_preview_event_create, { preview_event_create(ScopeAny(s, o)); return VarType(); });
		AddScript("preview_reset_view", ID_preview_reset_view, { preview_reset_view(ScopeAny(s, o)); return VarType(); });
		AddScript("project_backup", ID_project_backup, { project_backup(ScopeAny(s, o)); return VarType(); });
		AddScript("project_create", ID_project_create, { return project_create(ScopeAny(s, o)); });
		AddScript("project_load", ID_project_load, { return project_load(ScopeAny(s, o), a); });
		AddScript("project_load_background", ID_project_load_background, { return project_load_background(ScopeAny(s, o), a[0]); });
		AddScript("project_load_find_save_ids", ID_project_load_find_save_ids, { project_load_find_save_ids(ScopeAny(s, o)); return VarType(); });
		AddScript("project_load_legacy_background", ID_project_load_legacy_background, { project_load_legacy_background(ScopeAny(s, o)); return VarType(); });
		AddScript("project_load_legacy_beta", ID_project_load_legacy_beta, { project_load_legacy_beta(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("project_load_legacy_beta_value", ID_project_load_legacy_beta_value, { return project_load_legacy_beta_value(a[0], a[1]); });
		AddScript("project_load_legacy_beta_value_id", ID_project_load_legacy_beta_value_id, { return project_load_legacy_beta_value_id(a[0], a[1]); });
		AddScript("project_load_legacy_model_name", ID_project_load_legacy_model_name, { return project_load_legacy_model_name(a[0]); });
		AddScript("project_load_legacy_objects", ID_project_load_legacy_objects, { project_load_legacy_objects(); return VarType(); });
		AddScript("project_load_legacy_particles", ID_project_load_legacy_particles, { project_load_legacy_particles(ScopeAny(s, o)); return VarType(); });
		AddScript("project_load_legacy_project", ID_project_load_legacy_project, { project_load_legacy_project(ScopeAny(s, o)); return VarType(); });
		AddScript("project_load_legacy_resource", ID_project_load_legacy_resource, { project_load_legacy_resource(); return VarType(); });
		AddScript("project_load_legacy_save_id", ID_project_load_legacy_save_id, { return project_load_legacy_save_id(); });
		AddScript("project_load_legacy_start", ID_project_load_legacy_start, { return project_load_legacy_start(a[0]); });
		AddScript("project_load_legacy_template", ID_project_load_legacy_template, { project_load_legacy_template(); return VarType(); });
		AddScript("project_load_legacy_timeline", ID_project_load_legacy_timeline, { project_load_legacy_timeline(); return VarType(); });
		AddScript("project_load_legacy_values", ID_project_load_legacy_values, { project_load_legacy_values(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("project_load_legacy_value_types", ID_project_load_legacy_value_types, { project_load_legacy_value_types(ScopeAny(s, o)); return VarType(); });
		AddScript("project_load_legacy_work_camera", ID_project_load_legacy_work_camera, { project_load_legacy_work_camera(ScopeAny(s, o)); return VarType(); });
		AddScript("project_load_markers", ID_project_load_markers, { return project_load_markers(a[0]); });
		AddScript("project_load_objects", ID_project_load_objects, { project_load_objects(a[0]); return VarType(); });
		AddScript("project_load_particles", ID_project_load_particles, { return project_load_particles(ScopeAny(s, o), a[0]); });
		AddScript("project_load_project", ID_project_load_project, { return project_load_project(ScopeAny(s, o), a[0]); });
		AddScript("project_load_render", ID_project_load_render, { return project_load_render(ScopeAny(s, o), a[0]); });
		AddScript("project_load_resource", ID_project_load_resource, { return project_load_resource(a[0]); });
		AddScript("project_load_set_part_root", ID_project_load_set_part_root, { project_load_set_part_root(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("project_load_start", ID_project_load_start, { return project_load_start(a[0]); });
		AddScript("project_load_startup", ID_project_load_startup, { return project_load_startup(); });
		AddScript("project_load_template", ID_project_load_template, { return project_load_template(a[0]); });
		AddScript("project_load_template_update_model", ID_project_load_template_update_model, { project_load_template_update_model(Scope<obj_template>(s, o)); return VarType(); });
		AddScript("project_load_timeline", ID_project_load_timeline, { return project_load_timeline(a[0]); });
		AddScript("project_load_update", ID_project_load_update, { project_load_update(ScopeAny(s, o)); return VarType(); });
		AddScript("project_load_values", ID_project_load_values, { project_load_values(a[0], a[1]); return VarType(); });
		AddScript("project_load_values_update", ID_project_load_values_update, { project_load_values_update(Scope<obj_keyframe>(s, o)); return VarType(); });
		AddScript("project_load_values_update_name", ID_project_load_values_update_name, { return project_load_values_update_name(a[0]); });
		AddScript("project_reset", ID_project_reset, { project_reset(ScopeAny(s, o)); return VarType(); });
		AddScript("project_reset_background", ID_project_reset_background, { project_reset_background(ScopeAny(s, o)); return VarType(); });
		AddScript("project_reset_backup", ID_project_reset_backup, { project_reset_backup(ScopeAny(s, o)); return VarType(); });
		AddScript("project_reset_loaded", ID_project_reset_loaded, { project_reset_loaded(ScopeAny(s, o)); return VarType(); });
		AddScript("project_reset_render", ID_project_reset_render, { project_reset_render(ScopeAny(s, o)); return VarType(); });
		AddScript("project_save", ID_project_save, { project_save(ScopeAny(s, o), a); return VarType(); });
		AddScript("project_save_as", ID_project_save_as, { return project_save_as(ScopeAny(s, o)); });
		AddScript("project_save_background", ID_project_save_background, { project_save_background(ScopeAny(s, o)); return VarType(); });
		AddScript("project_save_done", ID_project_save_done, { project_save_done(); return VarType(); });
		AddScript("project_save_markers", ID_project_save_markers, { return project_save_markers(ScopeAny(s, o)); });
		AddScript("project_save_objects", ID_project_save_objects, { project_save_objects(ScopeAny(s, o)); return VarType(); });
		AddScript("project_save_particles", ID_project_save_particles, { project_save_particles(ScopeAny(s, o)); return VarType(); });
		AddScript("project_save_project", ID_project_save_project, { project_save_project(ScopeAny(s, o)); return VarType(); });
		AddScript("project_save_render", ID_project_save_render, { project_save_render(ScopeAny(s, o)); return VarType(); });
		AddScript("project_save_resource", ID_project_save_resource, { project_save_resource(ScopeAny(s, o)); return VarType(); });
		AddScript("project_save_start", ID_project_save_start, { project_save_start(a[0], a[1]); return VarType(); });
		AddScript("project_save_template", ID_project_save_template, { project_save_template(ScopeAny(s, o)); return VarType(); });
		AddScript("project_save_timeline", ID_project_save_timeline, { project_save_timeline(Scope<obj_timeline>(s, o)); return VarType(); });
		AddScript("project_save_values", ID_project_save_values, { project_save_values(a[0], a[1], a[2]); return VarType(); });
		AddScript("project_startup", ID_project_startup, { project_startup(ScopeAny(s, o)); return VarType(); });
		AddScript("ptype_copy", ID_ptype_copy, { ptype_copy(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("ptype_event_create", ID_ptype_event_create, { ptype_event_create(Scope<obj_particle_type>(s, o)); return VarType(); });
		AddScript("ptype_event_destroy", ID_ptype_event_destroy, { ptype_event_destroy(Scope<obj_particle_type>(s, o)); return VarType(); });
		AddScript("ptype_find_save_ids", ID_ptype_find_save_ids, { ptype_find_save_ids(Scope<obj_particle_type>(s, o)); return VarType(); });
		AddScript("ptype_get_save_ids", ID_ptype_get_save_ids, { ptype_get_save_ids(Scope<obj_history_save>(s, o)); return VarType(); });
		AddScript("ptype_update_sprite_vbuffers", ID_ptype_update_sprite_vbuffers, { ptype_update_sprite_vbuffers(ScopeAny(s, o)); return VarType(); });
		AddScript("question", ID_question, { return question(a[0]); });
		AddScript("recent_add", ID_recent_add, { recent_add(ScopeAny(s, o)); return VarType(); });
		AddScript("recent_event_create", ID_recent_event_create, { recent_event_create(Scope<obj_recent>(s, o)); return VarType(); });
		AddScript("recent_event_destroy", ID_recent_event_destroy, { recent_event_destroy(Scope<obj_recent>(s, o)); return VarType(); });
		AddScript("recent_load", ID_recent_load, { return recent_load(ScopeAny(s, o)); });
		AddScript("recent_save", ID_recent_save, { recent_save(); return VarType(); });
		AddScript("recent_time_string", ID_recent_time_string, { return recent_time_string(a[0]); });
		AddScript("recent_update", ID_recent_update, { recent_update(ScopeAny(s, o)); return VarType(); });
		AddScript("recent_update_sort", ID_recent_update_sort, { recent_update_sort(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("render_done", ID_render_done, { return render_done(); });
		AddScript("render_free", ID_render_free, { render_free(); return VarType(); });
		AddScript("render_generate_dof_samples", ID_render_generate_dof_samples, { render_generate_dof_samples(a[0], a[1], a[2]); return VarType(); });
		AddScript("render_generate_gaussian_kernel", ID_render_generate_gaussian_kernel, { return render_generate_gaussian_kernel(a[0]); });
		AddScript("render_generate_item", ID_render_generate_item, { return render_generate_item(ScopeAny(s, o), a); });
		AddScript("render_generate_noise", ID_render_generate_noise, { return render_generate_noise(a[0], a[1], a.Size() > 2 ? a[2] : VarType(null_), a.Size() > 3 ? a[3] : VarType(false)); });
		AddScript("render_generate_sample_kernel", ID_render_generate_sample_kernel, { return render_generate_sample_kernel(a[0]); });
		AddScript("render_generate_text_buffer", ID_render_generate_text_buffer, { return render_generate_text_buffer(a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("render_generate_text", ID_render_generate_text, { return render_generate_text(ScopeAny(s, o), a); });
		AddScript("render_get_noise_texture", ID_render_get_noise_texture, { return render_get_noise_texture(a[0]); });
		AddScript("render_high", ID_render_high, { render_high(ScopeAny(s, o)); return VarType(); });
		AddScript("render_high_bloom", ID_render_high_bloom, { return render_high_bloom(a[0]); });
		AddScript("render_high_ca", ID_render_high_ca, { return render_high_ca(a[0]); });
		AddScript("render_high_cc", ID_render_high_cc, { return render_high_cc(a[0]); });
		AddScript("render_high_distort", ID_render_high_distort, { return render_high_distort(a[0]); });
		AddScript("render_high_dof", ID_render_high_dof, { return render_high_dof(ScopeAny(s, o), a[0]); });
		AddScript("render_high_fog", ID_render_high_fog, { render_high_fog(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("render_high_get_apply_surf", ID_render_high_get_apply_surf, { return render_high_get_apply_surf(); });
		AddScript("render_high_glow", ID_render_high_glow, { return render_high_glow(ScopeAny(s, o), a[0], a.Size() > 1 ? a[1] : VarType(false)); });
		AddScript("render_high_grain", ID_render_high_grain, { return render_high_grain(a[0]); });
		AddScript("render_high_indirect", ID_render_high_indirect, { render_high_indirect(); return VarType(); });
		AddScript("render_high_lens_dirt", ID_render_high_lens_dirt, { return render_high_lens_dirt(a[0]); });
		AddScript("render_high_overlay", ID_render_high_overlay, { return render_high_overlay(a[0]); });
		AddScript("render_high_passes", ID_render_high_passes, { render_high_passes(ScopeAny(s, o)); return VarType(); });
		AddScript("render_high_post_start", ID_render_high_post_start, { return render_high_post_start(a[0]); });
		AddScript("render_high_reflections", ID_render_high_reflections, { render_high_reflections(a[0]); return VarType(); });
		AddScript("render_high_samples_add", ID_render_high_samples_add, { render_high_samples_add(); return VarType(); });
		AddScript("render_high_samples_unpack", ID_render_high_samples_unpack, { render_high_samples_unpack(); return VarType(); });
		AddScript("render_high_scene", ID_render_high_scene, { return render_high_scene(ScopeAny(s, o)); });
		AddScript("render_high_shadows", ID_render_high_shadows, { render_high_shadows(ScopeAny(s, o)); return VarType(); });
		AddScript("render_high_shadows_shadowless", ID_render_high_shadows_shadowless, { render_high_shadows_shadowless(ScopeAny(s, o)); return VarType(); });
		AddScript("render_high_ssao", ID_render_high_ssao, { render_high_ssao(ScopeAny(s, o)); return VarType(); });
		AddScript("render_high_subsurface_scatter", ID_render_high_subsurface_scatter, { render_high_subsurface_scatter(ScopeAny(s, o)); return VarType(); });
		AddScript("render_high_tonemap", ID_render_high_tonemap, { return render_high_tonemap(a[0]); });
		AddScript("render_high_update_taa", ID_render_high_update_taa, { render_high_update_taa(); return VarType(); });
		AddScript("render_high_vignette", ID_render_high_vignette, { return render_high_vignette(a[0]); });
		AddScript("render_high_volumetric_scatter", ID_render_high_volumetric_scatter, { render_high_volumetric_scatter(ScopeAny(s, o)); return VarType(); });
		AddScript("render_low", ID_render_low, { return render_low(ScopeAny(s, o)); });
		AddScript("render_post", ID_render_post, { return render_post(ScopeAny(s, o), a[0], a.Size() > 1 ? a[1] : VarType(true), a.Size() > 2 ? a[2] : VarType(true)); });
		AddScript("render_refresh_effects", ID_render_refresh_effects, { render_refresh_effects(a.Size() > 0 ? a[0] : VarType(true), a.Size() > 1 ? a[1] : VarType(true)); return VarType(); });
		AddScript("render_select", ID_render_select, { return render_select(ScopeAny(s, o), a[0], a[1]); });
		AddScript("render_set_culling", ID_render_set_culling, { return render_set_culling(a[0]); });
		AddScript("render_set_projection", ID_render_set_projection, { render_set_projection(a[0], a[1], a[2], a[3], a[4], a[5], a[6]); return VarType(); });
		AddScript("render_set_projection_ortho", ID_render_set_projection_ortho, { render_set_projection_ortho(a[0], a[1], a[2], a[3], a[4]); return VarType(); });
		AddScript("render_set_texture", ID_render_set_texture, { return render_set_texture(a[0], a.Size() > 1 ? a[1] : VarType(/*""*/ STR(0))); });
		AddScript("render_set_uniform", ID_render_set_uniform, { render_set_uniform(a[0], a[1]); return VarType(); });
		AddScript("render_set_uniform_color", ID_render_set_uniform_color, { render_set_uniform_color(a[0], a[1], a[2]); return VarType(); });
		AddScript("render_set_uniform_int", ID_render_set_uniform_int, { render_set_uniform_int(a[0], a[1]); return VarType(); });
		AddScript("render_set_uniform_mat4_array", ID_render_set_uniform_mat4_array, { render_set_uniform_mat4_array(a[0], a[1]); return VarType(); });
		AddScript("render_set_uniform_vec2", ID_render_set_uniform_vec2, { render_set_uniform_vec2(a[0], a[1], a[2]); return VarType(); });
		AddScript("render_set_uniform_vec3", ID_render_set_uniform_vec3, { render_set_uniform_vec3(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("render_start", ID_render_start, { render_start(a); return VarType(); });
		AddScript("render_startup", ID_render_startup, { render_startup(ScopeAny(s, o)); return VarType(); });
		AddScript("render_update_camera", ID_render_update_camera, { render_update_camera(); return VarType(); });
		AddScript("render_update_cascades", ID_render_update_cascades, { render_update_cascades(a[0]); return VarType(); });
		AddScript("render_update_effects", ID_render_update_effects, { render_update_effects(); return VarType(); });
		AddScript("render_update_item", ID_render_update_item, { render_update_item(); return VarType(); });
		AddScript("render_update_samples", ID_render_update_samples, { render_update_samples(); return VarType(); });
		AddScript("render_update_text", ID_render_update_text, { render_update_text(); return VarType(); });
		AddScript("render_update_tl_resource", ID_render_update_tl_resource, { return render_update_tl_resource(ScopeAny(s, o)); });
		AddScript("render_watermark_image", ID_render_watermark_image, { render_watermark_image(a.Size() > 0 ? a[0] : VarType(VarType()), a.Size() > 1 ? a[1] : VarType(VarType())); return VarType(); });
		AddScript("render_world", ID_render_world, { render_world(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("render_world_background", ID_render_world_background, { return render_world_background(); });
		AddScript("render_world_block", ID_render_world_block, { return render_world_block(a[0], a[1], a.Size() > 2 ? a[2] : VarType(false), a.Size() > 3 ? a[3] : VarType(VarType()), a.Size() > 4 ? a[4] : VarType(null_)); });
		AddScript("render_world_block_map", ID_render_world_block_map, { return render_world_block_map(a[0], a[1]); });
		AddScript("render_world_done", ID_render_world_done, { render_world_done(); return VarType(); });
		AddScript("render_world_ground", ID_render_world_ground, { return render_world_ground(ScopeAny(s, o)); });
		AddScript("render_world_item", ID_render_world_item, { render_world_item(a[0], a[1], a[2], a[3], a[4], a[5]); return VarType(); });
		AddScript("render_world_model_file_parts", ID_render_world_model_file_parts, { render_world_model_file_parts(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a.Size() > 8 ? a[8] : VarType(null_)); return VarType(); });
		AddScript("render_world_model_part", ID_render_world_model_part, { return render_world_model_part(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]); });
		AddScript("render_world_particle", ID_render_world_particle, { return render_world_particle(ScopeAny(s, o)); });
		AddScript("render_world_scenery", ID_render_world_scenery, { return render_world_scenery(ScopeAny(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("render_world_shape", ID_render_world_shape, { render_world_shape(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("render_world_sky", ID_render_world_sky, { return render_world_sky(); });
		AddScript("render_world_sky_clouds", ID_render_world_sky_clouds, { return render_world_sky_clouds(ScopeAny(s, o)); });
		AddScript("render_world_start", ID_render_world_start, { render_world_start(a.Size() > 0 ? a[0] : VarType(VarType())); return VarType(); });
		AddScript("render_world_start_light", ID_render_world_start_light, { render_world_start_light(a[0], a[1], a[2], a[3], a[4]); return VarType(); });
		AddScript("render_world_start_sun", ID_render_world_start_sun, { render_world_start_sun(a[0]); return VarType(); });
		AddScript("render_world_text", ID_render_world_text, { render_world_text(a[0], a[1], a[2], a[3], a[4]); return VarType(); });
		AddScript("render_world_tl", ID_render_world_tl, { return render_world_tl(ScopeAny(s, o)); });
		AddScript("render_world_tl_reset", ID_render_world_tl_reset, { render_world_tl_reset(); return VarType(); });
		AddScript("res_copy", ID_res_copy, { res_copy(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("res_event_create", ID_res_event_create, { res_event_create(Scope<obj_resource>(s, o)); return VarType(); });
		AddScript("res_event_destroy", ID_res_event_destroy, { res_event_destroy(ScopeAny(s, o)); return VarType(); });
		AddScript("res_get_model_texture", ID_res_get_model_texture, { return res_get_model_texture(ScopeAny(s, o), a[0]); });
		AddScript("res_get_model_texture_material", ID_res_get_model_texture_material, { return res_get_model_texture_material(ScopeAny(s, o), a[0]); });
		AddScript("res_get_model_tex_normal", ID_res_get_model_tex_normal, { return res_get_model_tex_normal(ScopeAny(s, o), a[0]); });
		AddScript("res_is_ready", ID_res_is_ready, { return res_is_ready(a[0]); });
		AddScript("res_load", ID_res_load, { res_load(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false)); return VarType(); });
		AddScript("res_load_audio", ID_res_load_audio, { res_load_audio(ScopeAny(s, o)); return VarType(); });
		AddScript("res_load_browse", ID_res_load_browse, { return res_load_browse(ScopeAny(s, o)); });
		AddScript("res_load_legacy_block_sheet", ID_res_load_legacy_block_sheet, { return res_load_legacy_block_sheet(a[0], a[1]); });
		AddScript("res_load_pack", ID_res_load_pack, { return res_load_pack(ScopeAny(s, o)); });
		AddScript("res_load_pack_block_sheet", ID_res_load_pack_block_sheet, { res_load_pack_block_sheet(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("res_load_pack_block_textures", ID_res_load_pack_block_textures, { res_load_pack_block_textures(ScopeAny(s, o)); return VarType(); });
		AddScript("res_load_pack_item_textures", ID_res_load_pack_item_textures, { res_load_pack_item_textures(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("res_load_pack_misc", ID_res_load_pack_misc, { res_load_pack_misc(ScopeAny(s, o)); return VarType(); });
		AddScript("res_load_pack_model_textures", ID_res_load_pack_model_textures, { res_load_pack_model_textures(ScopeAny(s, o)); return VarType(); });
		AddScript("res_load_pack_particle_textures", ID_res_load_pack_particle_textures, { res_load_pack_particle_textures(ScopeAny(s, o)); return VarType(); });
		AddScript("res_load_pack_version", ID_res_load_pack_version, { return res_load_pack_version(ScopeAny(s, o)); });
		AddScript("res_load_player_skin", ID_res_load_player_skin, { return res_load_player_skin(a[0]); });
		AddScript("res_load_scenery", ID_res_load_scenery, { return res_load_scenery(ScopeAny(s, o)); });
		AddScript("res_load_skulls", ID_res_load_skulls, { return res_load_skulls(ScopeAny(s, o)); });
		AddScript("res_load_start", ID_res_load_start, { res_load_start(ScopeAny(s, o)); return VarType(); });
		AddScript("res_save", ID_res_save, { res_save(ScopeAny(s, o)); return VarType(); });
		AddScript("res_update_block_preview", ID_res_update_block_preview, { res_update_block_preview(Scope<obj_resource>(s, o)); return VarType(); });
		AddScript("res_update_colors", ID_res_update_colors, { return res_update_colors(ScopeAny(s, o), a); });
		AddScript("res_update_display_name", ID_res_update_display_name, { res_update_display_name(Scope<obj_resource>(s, o)); return VarType(); });
		AddScript("res_update_model_shape", ID_res_update_model_shape, { return res_update_model_shape(Scope<obj_resource>(s, o)); });
		AddScript("rotation_get_time", ID_rotation_get_time, { return rotation_get_time(a[0]); });
		AddScript("save_id_create", ID_save_id_create, { return save_id_create(); });
		AddScript("save_id_find", ID_save_id_find, { return save_id_find(a[0]); });
		AddScript("save_id_get", ID_save_id_get, { return save_id_get(a[0]); });
		AddScript("scrollbar_draw", ID_scrollbar_draw, { return scrollbar_draw(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("scrollbar_event_create", ID_scrollbar_event_create, { scrollbar_event_create(Scope<obj_scrollbar>(s, o)); return VarType(); });
		AddScript("settings_load", ID_settings_load, { return settings_load(ScopeAny(s, o)); });
		AddScript("settings_load_legacy", ID_settings_load_legacy, { return settings_load_legacy(ScopeAny(s, o), a[0]); });
		AddScript("settings_load_legacy_colors", ID_settings_load_legacy_colors, { settings_load_legacy_colors(); return VarType(); });
		AddScript("settings_load_legacy_recent", ID_settings_load_legacy_recent, { return settings_load_legacy_recent(ScopeAny(s, o), a[0]); });
		AddScript("settings_save", ID_settings_save, { settings_save(ScopeAny(s, o)); return VarType(); });
		AddScript("settings_startup", ID_settings_startup, { settings_startup(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_add_set", ID_shader_add_set, { shader_add_set(ScopeAny(s, o), a); return VarType(); });
		AddScript("shader_blur_set", ID_shader_blur_set, { shader_blur_set(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("shader_border_set", ID_shader_border_set, { shader_border_set(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_ca_set", ID_shader_ca_set, { shader_ca_set(); return VarType(); });
		AddScript("shader_clear", ID_shader_clear, { shader_clear(); return VarType(); });
		AddScript("shader_clip_set", ID_shader_clip_set, { shader_clip_set(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("shader_color_camera_set", ID_shader_color_camera_set, { shader_color_camera_set(); return VarType(); });
		AddScript("shader_color_correction_set", ID_shader_color_correction_set, { shader_color_correction_set(); return VarType(); });
		AddScript("shader_color_fog_lights_set", ID_shader_color_fog_lights_set, { shader_color_fog_lights_set(); return VarType(); });
		AddScript("shader_depth_point_set", ID_shader_depth_point_set, { shader_depth_point_set(); return VarType(); });
		AddScript("shader_depth_set", ID_shader_depth_set, { shader_depth_set(); return VarType(); });
		AddScript("shader_distort_set", ID_shader_distort_set, { shader_distort_set(); return VarType(); });
		AddScript("shader_high_bloom_threshold_set", ID_shader_high_bloom_threshold_set, { shader_high_bloom_threshold_set(); return VarType(); });
		AddScript("shader_high_depth_normal_set", ID_shader_high_depth_normal_set, { shader_high_depth_normal_set(); return VarType(); });
		AddScript("shader_high_dof_coc_blur_set", ID_shader_high_dof_coc_blur_set, { shader_high_dof_coc_blur_set(a[0], a[1]); return VarType(); });
		AddScript("shader_high_dof_coc_set", ID_shader_high_dof_coc_set, { shader_high_dof_coc_set(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("shader_high_dof_set", ID_shader_high_dof_set, { shader_high_dof_set(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("shader_high_fog_apply_set", ID_shader_high_fog_apply_set, { shader_high_fog_apply_set(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("shader_high_indirect_blur_set", ID_shader_high_indirect_blur_set, { shader_high_indirect_blur_set(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_high_lighting_apply_set", ID_shader_high_lighting_apply_set, { shader_high_lighting_apply_set(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("shader_high_light_point_set", ID_shader_high_light_point_set, { shader_high_light_point_set(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_high_light_point_shadowless_set", ID_shader_high_light_point_shadowless_set, { shader_high_light_point_shadowless_set(); return VarType(); });
		AddScript("shader_high_light_spot_set", ID_shader_high_light_spot_set, { shader_high_light_spot_set(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_high_light_sun_set", ID_shader_high_light_sun_set, { shader_high_light_sun_set(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_high_raytrace_resolve_set", ID_shader_high_raytrace_resolve_set, { shader_high_raytrace_resolve_set(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false)); return VarType(); });
		AddScript("shader_high_raytrace_set", ID_shader_high_raytrace_set, { shader_high_raytrace_set(ScopeAny(s, o), a[0], a.Size() > 1 ? a[1] : VarType(null_)); return VarType(); });
		AddScript("shader_high_samples_add_set", ID_shader_high_samples_add_set, { shader_high_samples_add_set(ScopeAny(s, o), a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("shader_high_samples_unpack_set", ID_shader_high_samples_unpack_set, { shader_high_samples_unpack_set(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_high_ssao_set", ID_shader_high_ssao_set, { shader_high_ssao_set(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("shader_high_subsurface_scatter_set", ID_shader_high_subsurface_scatter_set, { shader_high_subsurface_scatter_set(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("shader_material_uniforms", ID_shader_material_uniforms, { shader_material_uniforms(Scope<obj_shader>(s, o)); return VarType(); });
		AddScript("shader_noise_set", ID_shader_noise_set, { shader_noise_set(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_outline_set", ID_shader_outline_set, { shader_outline_set(a[0], a[1]); return VarType(); });
		AddScript("shader_palette_set", ID_shader_palette_set, { shader_palette_set(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("shader_reset_uniforms", ID_shader_reset_uniforms, { shader_reset_uniforms(); return VarType(); });
		AddScript("shader_set_uniform_color", ID_shader_set_uniform_color, { shader_set_uniform_color(a[0], a[1], a[2]); return VarType(); });
		AddScript("shader_startup", ID_shader_startup, { return shader_startup(); });
		AddScript("shader_tonemap_set", ID_shader_tonemap_set, { shader_tonemap_set(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("shader_use", ID_shader_use, { shader_use(ScopeAny(s, o)); return VarType(); });
		AddScript("shader_vignette_set", ID_shader_vignette_set, { shader_vignette_set(); return VarType(); });
		AddScript("shortcut_bar_add", ID_shortcut_bar_add, { shortcut_bar_add(a[0], a[1], a[2]); return VarType(); });
		AddScript("shortcut_bar_draw", ID_shortcut_bar_draw, { return shortcut_bar_draw(ScopeAny(s, o)); });
		AddScript("shortcut_bar_update", ID_shortcut_bar_update, { shortcut_bar_update(); return VarType(); });
		AddScript("shortcut_draw", ID_shortcut_draw, { shortcut_draw(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("simplex_lib", ID_simplex_lib, { return simplex_lib(a); });
		AddScript("smoothstep", ID_smoothstep, { return smoothstep(a[0]); });
		AddScript("snap", ID_snap, { return snap(a[0], a[1]); });
		AddScript("sortlist_add", ID_sortlist_add, { sortlist_add(a[0], a[1], a.Size() > 2 ? a[2] : VarType(-IntType(1))); return VarType(); });
		AddScript("sortlist_clear", ID_sortlist_clear, { sortlist_clear(a[0]); return VarType(); });
		AddScript("sortlist_column_add", ID_sortlist_column_add, { sortlist_column_add(a[0], a[1], a[2]); return VarType(); });
		AddScript("sortlist_column_get", ID_sortlist_column_get, { return sortlist_column_get(a[0], a[1], a[2]); });
		AddScript("sortlist_draw", ID_sortlist_draw, { return sortlist_draw(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a.Size() > 6 ? a[6] : VarType(true), a.Size() > 7 ? a[7] : VarType(/*""*/ STR(0))); });
		AddScript("sortlist_draw_button", ID_sortlist_draw_button, { return sortlist_draw_button(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9]); });
		AddScript("sortlist_event_create", ID_sortlist_event_create, { sortlist_event_create(Scope<obj_sortlist>(s, o)); return VarType(); });
		AddScript("sortlist_filters_draw", ID_sortlist_filters_draw, { return sortlist_filters_draw(ScopeAny(s, o)); });
		AddScript("sortlist_remove", ID_sortlist_remove, { return sortlist_remove(a[0], a[1]); });
		AddScript("sortlist_update", ID_sortlist_update, { sortlist_update(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("spline_get_point", ID_spline_get_point, { return spline_get_point(a[0], a[1], a[2], a[3], a.Size() > 4 ? a[4] : VarType(IntType(0))); });
		AddScript("spline_make_frames", ID_spline_make_frames, { spline_make_frames(a[0], a[1], a[2]); return VarType(); });
		AddScript("spline_subdivide", ID_spline_subdivide, { return spline_subdivide(a[0], a[1]); });
		AddScript("sprite_add_lib", ID_sprite_add_lib, { return sprite_add_lib(a); });
		AddScript("sprite_save_lib", ID_sprite_save_lib, { sprite_save_lib(a[0], a[1], a[2]); return VarType(); });
		AddScript("state_vars_add", ID_state_vars_add, { state_vars_add(a[0], a[1]); return VarType(); });
		AddScript("state_vars_get_value", ID_state_vars_get_value, { return state_vars_get_value(a[0], a[1]); });
		AddScript("state_vars_match_state_id", ID_state_vars_match_state_id, { return state_vars_match_state_id(a[0], a[1], a[2]); });
		AddScript("state_vars_set_value", ID_state_vars_set_value, { return state_vars_set_value(a[0], a[1], a[2]); });
		AddScript("string_contains", ID_string_contains, { return string_contains(a[0], a[1]); });
		AddScript("string_decimals", ID_string_decimals, { return string_decimals(a[0]); });
		AddScript("string_format_snakecase", ID_string_format_snakecase, { return string_format_snakecase(a[0]); });
		AddScript("string_get_real", ID_string_get_real, { return string_get_real(a[0], a.Size() > 1 ? a[1] : VarType(VarType())); });
		AddScript("string_get_state_vars", ID_string_get_state_vars, { return string_get_state_vars(a[0]); });
		AddScript("string_limit", ID_string_limit, { return string_limit(a[0], a[1], a.Size() > 2 ? a[2] : VarType(/*"..."*/ STR(3016))); });
		AddScript("string_limit_ext", ID_string_limit_ext, { return string_limit_ext(a[0], a[1], a[2]); });
		AddScript("string_line_array", ID_string_line_array, { return string_line_array(a[0]); });
		AddScript("string_remove_newline", ID_string_remove_newline, { return string_remove_newline(a[0]); });
		AddScript("string_split", ID_string_split, { return string_split(a[0], a[1]); });
		AddScript("string_time", ID_string_time, { return string_time(a[0], a[1], a[2]); });
		AddScript("string_time_seconds", ID_string_time_seconds, { return string_time_seconds(a[0]); });
		AddScript("string_wrap", ID_string_wrap, { return string_wrap(a[0], a[1]); });
		AddScript("surface_duplicate", ID_surface_duplicate, { return surface_duplicate(a[0], a.Size() > 1 ? a[1] : VarType(IntType(1))); });
		AddScript("surface_get_alpha_array", ID_surface_get_alpha_array, { return surface_get_alpha_array(a[0]); });
		AddScript("surface_require", ID_surface_require, { return surface_require(a[0], a[1], a[2], a.Size() > 3 ? a[3] : VarType(true), a.Size() > 4 ? a[4] : VarType(false)); });
		AddScript("surface_save_lib", ID_surface_save_lib, { surface_save_lib(a[0], a[1]); return VarType(); });
		AddScript("tab_add_category", ID_tab_add_category, { return tab_add_category(Scope<obj_tab>(s, o), a[0], a[1], a[2], a[3]); });
		AddScript("tab_close", ID_tab_close, { return tab_close(ScopeAny(s, o), a[0]); });
		AddScript("tab_collapse_end", ID_tab_collapse_end, { tab_collapse_end(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(true)); return VarType(); });
		AddScript("tab_collapse_start", ID_tab_collapse_start, { tab_collapse_start(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_control", ID_tab_control, { tab_control(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("tab_control_button_label", ID_tab_control_button_label, { tab_control_button_label(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_control_checkbox", ID_tab_control_checkbox, { tab_control_checkbox(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_control_color", ID_tab_control_color, { tab_control_color(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_control_dragger", ID_tab_control_dragger, { tab_control_dragger(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_control_loading", ID_tab_control_loading, { tab_control_loading(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(IntType(8))); return VarType(); });
		AddScript("tab_control_menu", ID_tab_control_menu, { tab_control_menu(ScopeAny(s, o), a); return VarType(); });
		AddScript("tab_control_meter", ID_tab_control_meter, { tab_control_meter(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_control_sortlist", ID_tab_control_sortlist, { tab_control_sortlist(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("tab_control_switch", ID_tab_control_switch, { tab_control_switch(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_control_textfield", ID_tab_control_textfield, { tab_control_textfield(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(true), a.Size() > 1 ? a[1] : VarType(IntType(24))); return VarType(); });
		AddScript("tab_control_textfield_group", ID_tab_control_textfield_group, { tab_control_textfield_group(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(true)); return VarType(); });
		AddScript("tab_control_togglebutton", ID_tab_control_togglebutton, { tab_control_togglebutton(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_control_wheel", ID_tab_control_wheel, { tab_control_wheel(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_event_create", ID_tab_event_create, { tab_event_create(Scope<obj_tab>(s, o)); return VarType(); });
		AddScript("tab_frame_editor_bend", ID_tab_frame_editor_bend, { return tab_frame_editor_bend(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_buttons", ID_tab_frame_editor_buttons, { tab_frame_editor_buttons(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_camera", ID_tab_frame_editor_camera, { tab_frame_editor_camera(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_color", ID_tab_frame_editor_color, { return tab_frame_editor_color(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_constraints", ID_tab_frame_editor_constraints, { tab_frame_editor_constraints(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_constraints_path_point", ID_tab_frame_editor_constraints_path_point, { tab_frame_editor_constraints_path_point(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_follow_pos", ID_tab_frame_editor_follow_pos, { tab_frame_editor_follow_pos(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_follow_rot", ID_tab_frame_editor_follow_rot, { tab_frame_editor_follow_rot(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_follow_scale", ID_tab_frame_editor_follow_scale, { tab_frame_editor_follow_scale(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_ik", ID_tab_frame_editor_ik, { return tab_frame_editor_ik(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_item", ID_tab_frame_editor_item, { return tab_frame_editor_item(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_keyframe", ID_tab_frame_editor_keyframe, { tab_frame_editor_keyframe(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_light", ID_tab_frame_editor_light, { tab_frame_editor_light(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_material", ID_tab_frame_editor_material, { return tab_frame_editor_material(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_particles", ID_tab_frame_editor_particles, { tab_frame_editor_particles(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_path", ID_tab_frame_editor_path, { return tab_frame_editor_path(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_path_point", ID_tab_frame_editor_path_point, { return tab_frame_editor_path_point(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_position", ID_tab_frame_editor_position, { return tab_frame_editor_position(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_rotation", ID_tab_frame_editor_rotation, { return tab_frame_editor_rotation(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_scale", ID_tab_frame_editor_scale, { return tab_frame_editor_scale(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_sound", ID_tab_frame_editor_sound, { tab_frame_editor_sound(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_text", ID_tab_frame_editor_text, { return tab_frame_editor_text(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_texture", ID_tab_frame_editor_texture, { return tab_frame_editor_texture(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_texture_material", ID_tab_frame_editor_texture_material, { tab_frame_editor_texture_material(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_frame_editor_tex_normal", ID_tab_frame_editor_tex_normal, { return tab_frame_editor_tex_normal(ScopeAny(s, o)); });
		AddScript("tab_frame_editor_transform", ID_tab_frame_editor_transform, { tab_frame_editor_transform(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_get_title", ID_tab_get_title, { return tab_get_title(a[0]); });
		AddScript("tab_ground_editor", ID_tab_ground_editor, { tab_ground_editor(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_next", ID_tab_next, { return tab_next(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(true)); });
		AddScript("tab_properties_background", ID_tab_properties_background, { tab_properties_background(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_properties_library", ID_tab_properties_library, { return tab_properties_library(ScopeAny(s, o)); });
		AddScript("tab_properties_project", ID_tab_properties_project, { tab_properties_project(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_properties_render", ID_tab_properties_render, { return tab_properties_render(ScopeAny(s, o)); });
		AddScript("tab_properties_resources", ID_tab_properties_resources, { return tab_properties_resources(ScopeAny(s, o)); });
		AddScript("tab_settings_controls", ID_tab_settings_controls, { tab_settings_controls(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_settings_interface", ID_tab_settings_interface, { tab_settings_interface(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_settings_program", ID_tab_settings_program, { tab_settings_program(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_set_collumns", ID_tab_set_collumns, { return tab_set_collumns(ScopeAny(s, o), a); });
		AddScript("tab_show", ID_tab_show, { return tab_show(ScopeAny(s, o), a[0]); });
		AddScript("tab_template_editor", ID_tab_template_editor, { return tab_template_editor(ScopeAny(s, o)); });
		AddScript("tab_template_editor_particles", ID_tab_template_editor_particles, { return tab_template_editor_particles(ScopeAny(s, o)); });
		AddScript("tab_template_editor_particles_framebox", ID_tab_template_editor_particles_framebox, { return tab_template_editor_particles_framebox(ScopeAny(s, o)); });
		AddScript("tab_template_editor_particles_preview", ID_tab_template_editor_particles_preview, { return tab_template_editor_particles_preview(ScopeAny(s, o)); });
		AddScript("tab_template_editor_particles_preview_restart", ID_tab_template_editor_particles_preview_restart, { tab_template_editor_particles_preview_restart(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_template_editor_particles_value", ID_tab_template_editor_particles_value, { tab_template_editor_particles_value(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a.Size() > 12 ? a[12] : VarType(null_), a.Size() > 13 ? a[13] : VarType(true), a.Size() > 14 ? a[14] : VarType(/*""*/ STR(0))); return VarType(); });
		AddScript("tab_template_editor_update_ptype_list", ID_tab_template_editor_update_ptype_list, { return tab_template_editor_update_ptype_list(ScopeAny(s, o)); });
		AddScript("tab_timeline", ID_tab_timeline, { tab_timeline(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_timeline_editor_appearance", ID_tab_timeline_editor_appearance, { tab_timeline_editor_appearance(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_timeline_editor_audio", ID_tab_timeline_editor_audio, { tab_timeline_editor_audio(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_timeline_editor_hierarchy", ID_tab_timeline_editor_hierarchy, { return tab_timeline_editor_hierarchy(ScopeAny(s, o)); });
		AddScript("tab_timeline_editor_info", ID_tab_timeline_editor_info, { tab_timeline_editor_info(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_timeline_editor_path", ID_tab_timeline_editor_path, { tab_timeline_editor_path(ScopeAny(s, o)); return VarType(); });
		AddScript("tab_toggle", ID_tab_toggle, { tab_toggle(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("temp_animate", ID_temp_animate, { return temp_animate(ScopeAny(s, o)); });
		AddScript("temp_copy", ID_temp_copy, { temp_copy(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("temp_duplicate", ID_temp_duplicate, { return temp_duplicate(ScopeAny(s, o)); });
		AddScript("temp_event_create", ID_temp_event_create, { temp_event_create(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_event_destroy", ID_temp_event_destroy, { temp_event_destroy(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_find_save_ids", ID_temp_find_save_ids, { temp_find_save_ids(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_get_block_texobj", ID_temp_get_block_texobj, { return temp_get_block_texobj(ScopeAny(s, o), a[0]); });
		AddScript("temp_get_block_tex_material_obj", ID_temp_get_block_tex_material_obj, { return temp_get_block_tex_material_obj(ScopeAny(s, o), a[0]); });
		AddScript("temp_get_block_tex_normal_obj", ID_temp_get_block_tex_normal_obj, { return temp_get_block_tex_normal_obj(ScopeAny(s, o), a[0]); });
		AddScript("temp_get_model_texobj", ID_temp_get_model_texobj, { return temp_get_model_texobj(ScopeAny(s, o), a[0]); });
		AddScript("temp_get_model_tex_material_obj", ID_temp_get_model_tex_material_obj, { return temp_get_model_tex_material_obj(ScopeAny(s, o), a[0]); });
		AddScript("temp_get_model_tex_material_preview", ID_temp_get_model_tex_material_preview, { return temp_get_model_tex_material_preview(ScopeAny(s, o), a[0], a[1]); });
		AddScript("temp_get_model_tex_normal_obj", ID_temp_get_model_tex_normal_obj, { return temp_get_model_tex_normal_obj(ScopeAny(s, o), a[0]); });
		AddScript("temp_get_model_tex_normal_preview", ID_temp_get_model_tex_normal_preview, { return temp_get_model_tex_normal_preview(ScopeAny(s, o), a[0], a[1]); });
		AddScript("temp_get_model_tex_preview", ID_temp_get_model_tex_preview, { return temp_get_model_tex_preview(ScopeAny(s, o), a[0], a[1]); });
		AddScript("temp_get_save_ids", ID_temp_get_save_ids, { temp_get_save_ids(Scope<obj_history_save>(s, o)); return VarType(); });
		AddScript("temp_get_shape_tex", ID_temp_get_shape_tex, { return temp_get_shape_tex(a[0], a.Size() > 1 ? a[1] : VarType(VarType())); });
		AddScript("temp_get_shape_texobj", ID_temp_get_shape_texobj, { return temp_get_shape_texobj(ScopeAny(s, o), a[0]); });
		AddScript("temp_get_shape_tex_material_obj", ID_temp_get_shape_tex_material_obj, { return temp_get_shape_tex_material_obj(ScopeAny(s, o), a[0]); });
		AddScript("temp_get_shape_tex_normal_obj", ID_temp_get_shape_tex_normal_obj, { return temp_get_shape_tex_normal_obj(ScopeAny(s, o), a[0]); });
		AddScript("temp_particles_copy", ID_temp_particles_copy, { temp_particles_copy(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("temp_particles_init", ID_temp_particles_init, { temp_particles_init(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_particles_restart", ID_temp_particles_restart, { temp_particles_restart(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_particles_type_add", ID_temp_particles_type_add, { return temp_particles_type_add(ScopeAny(s, o)); });
		AddScript("temp_particles_type_clear", ID_temp_particles_type_clear, { temp_particles_type_clear(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_particles_type_duplicate", ID_temp_particles_type_duplicate, { return temp_particles_type_duplicate(ScopeAny(s, o), a[0]); });
		AddScript("temp_particles_type_remove", ID_temp_particles_type_remove, { temp_particles_type_remove(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("temp_particles_update_spawn_rate", ID_temp_particles_update_spawn_rate, { temp_particles_update_spawn_rate(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("temp_set_scenery", ID_temp_set_scenery, { temp_set_scenery(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("temp_update", ID_temp_update, { temp_update(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false)); return VarType(); });
		AddScript("temp_update_armor", ID_temp_update_armor, { return temp_update_armor(a[0]); });
		AddScript("temp_update_block", ID_temp_update_block, { temp_update_block(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_update_display_name", ID_temp_update_display_name, { temp_update_display_name(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_update_model", ID_temp_update_model, { return temp_update_model(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false)); });
		AddScript("temp_update_model_color", ID_temp_update_model_color, { return temp_update_model_color(ScopeAny(s, o)); });
		AddScript("temp_update_model_part", ID_temp_update_model_part, { return temp_update_model_part(ScopeAny(s, o)); });
		AddScript("temp_update_model_shape", ID_temp_update_model_shape, { return temp_update_model_shape(ScopeAny(s, o)); });
		AddScript("temp_update_model_timeline_parts", ID_temp_update_model_timeline_parts, { return temp_update_model_timeline_parts(ScopeAny(s, o)); });
		AddScript("temp_update_model_timeline_tree", ID_temp_update_model_timeline_tree, { temp_update_model_timeline_tree(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(null_)); return VarType(); });
		AddScript("temp_update_rot_point", ID_temp_update_rot_point, { temp_update_rot_point(ScopeAny(s, o)); return VarType(); });
		AddScript("temp_update_shape", ID_temp_update_shape, { temp_update_shape(ScopeAny(s, o)); return VarType(); });
		AddScript("textbox_draw", ID_textbox_draw, { return textbox_draw(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a.Size() > 5 ? a[5] : VarType(true), a.Size() > 6 ? a[6] : VarType(false)); });
		AddScript("textbox_startup", ID_textbox_startup, { textbox_startup(); return VarType(); });
		AddScript("textfield_group_add", ID_textfield_group_add, { textfield_group_add(ScopeAny(s, o), a); return VarType(); });
		AddScript("textfield_group_reset", ID_textfield_group_reset, { textfield_group_reset(ScopeAny(s, o)); return VarType(); });
		AddScript("texture_create", ID_texture_create, { return texture_create(a[0]); });
		AddScript("texture_create_crop", ID_texture_create_crop, { return texture_create_crop(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("texture_create_fill", ID_texture_create_fill, { return texture_create_fill(a[0], a.Size() > 1 ? a[1] : VarType(IntType(16))); });
		AddScript("texture_create_missing", ID_texture_create_missing, { return texture_create_missing(a.Size() > 0 ? a[0] : VarType(IntType(16))); });
		AddScript("texture_create_square", ID_texture_create_square, { return texture_create_square(a[0]); });
		AddScript("texture_duplicate", ID_texture_duplicate, { return texture_duplicate(a[0]); });
		AddScript("texture_export", ID_texture_export, { texture_export(a[0], a[1]); return VarType(); });
		AddScript("texture_free", ID_texture_free, { texture_free(a[0]); return VarType(); });
		AddScript("texture_getpixel", ID_texture_getpixel, { return texture_getpixel(a[0], a[1], a[2]); });
		AddScript("texture_height", ID_texture_height, { return texture_height(a[0]); });
		AddScript("texture_set_mipmap_level", ID_texture_set_mipmap_level, { texture_set_mipmap_level(a[0]); return VarType(); });
		AddScript("texture_split", ID_texture_split, { return texture_split(a[0], a[1], a[2]); });
		AddScript("texture_sprite", ID_texture_sprite, { return texture_sprite(a[0]); });
		AddScript("texture_surface", ID_texture_surface, { return texture_surface(a[0]); });
		AddScript("texture_width", ID_texture_width, { return texture_width(a[0]); });
		AddScript("text_caption_width", ID_text_caption_width, { return text_caption_width(ScopeAny(s, o), a); });
		AddScript("text_control_name", ID_text_control_name, { return text_control_name(a[0]); });
		AddScript("text_exists", ID_text_exists, { return text_exists(a[0]); });
		AddScript("text_get", ID_text_get, { return text_get(a); });
		AddScript("text_max_width", ID_text_max_width, { return text_max_width(a); });
		AddScript("time_get_rotation", ID_time_get_rotation, { return time_get_rotation(a[0]); });
		AddScript("tip_draw", ID_tip_draw, { return tip_draw(ScopeAny(s, o)); });
		AddScript("tip_set", ID_tip_set, { return tip_set(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a.Size() > 5 ? a[5] : VarType(true)); });
		AddScript("tip_set_keybind", ID_tip_set_keybind, { tip_set_keybind(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("tl_animate_scenery", ID_tl_animate_scenery, { tl_animate_scenery(Scope<obj_timeline>(s, o)); return VarType(); });
		AddScript("tl_constraints_update_rot", ID_tl_constraints_update_rot, { tl_constraints_update_rot(); return VarType(); });
		AddScript("tl_copy", ID_tl_copy, { tl_copy(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("tl_deselect", ID_tl_deselect, { return tl_deselect(ScopeAny(s, o)); });
		AddScript("tl_deselect_all", ID_tl_deselect_all, { tl_deselect_all(); return VarType(); });
		AddScript("tl_duplicate", ID_tl_duplicate, { return tl_duplicate(ScopeAny(s, o)); });
		AddScript("tl_event_create", ID_tl_event_create, { tl_event_create(Scope<obj_timeline>(s, o)); return VarType(); });
		AddScript("tl_event_destroy", ID_tl_event_destroy, { tl_event_destroy(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_filter_draw", ID_tl_filter_draw, { tl_filter_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_find_save_ids", ID_tl_find_save_ids, { tl_find_save_ids(Scope<obj_timeline>(s, o)); return VarType(); });
		AddScript("tl_get_save_ids", ID_tl_get_save_ids, { tl_get_save_ids(Scope<obj_history_save>(s, o)); return VarType(); });
		AddScript("tl_get_visible", ID_tl_get_visible, { return tl_get_visible(ScopeAny(s, o)); });
		AddScript("tl_has_child", ID_tl_has_child, { return tl_has_child(ScopeAny(s, o), a[0]); });
		AddScript("tl_interval_settings_draw", ID_tl_interval_settings_draw, { tl_interval_settings_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_jump", ID_tl_jump, { tl_jump(a[0]); return VarType(); });
		AddScript("tl_keyframes_copy", ID_tl_keyframes_copy, { tl_keyframes_copy(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_keyframes_deselect_all", ID_tl_keyframes_deselect_all, { tl_keyframes_deselect_all(); return VarType(); });
		AddScript("tl_keyframes_paste", ID_tl_keyframes_paste, { tl_keyframes_paste(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("tl_keyframes_remove", ID_tl_keyframes_remove, { tl_keyframes_remove(); return VarType(); });
		AddScript("tl_keyframe_add", ID_tl_keyframe_add, { return tl_keyframe_add(ScopeAny(s, o), a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("tl_keyframe_deselect", ID_tl_keyframe_deselect, { return tl_keyframe_deselect(a[0]); });
		AddScript("tl_keyframe_length", ID_tl_keyframe_length, { return tl_keyframe_length(a[0]); });
		AddScript("tl_keyframe_save", ID_tl_keyframe_save, { tl_keyframe_save(a[0]); return VarType(); });
		AddScript("tl_keyframe_select", ID_tl_keyframe_select, { return tl_keyframe_select(a[0]); });
		AddScript("tl_new_part", ID_tl_new_part, { return tl_new_part(Scope<obj_timeline>(s, o), a[0]); });
		AddScript("tl_part_find", ID_tl_part_find, { return tl_part_find(ScopeAny(s, o), a[0]); });
		AddScript("tl_path_offset_get_position", ID_tl_path_offset_get_position, { return tl_path_offset_get_position(a[0], a[1]); });
		AddScript("tl_remove_clean", ID_tl_remove_clean, { tl_remove_clean(ScopeAny(s, o), a); return VarType(); });
		AddScript("tl_save", ID_tl_save, { return tl_save(ScopeAny(s, o)); });
		AddScript("tl_select", ID_tl_select, { return tl_select(ScopeAny(s, o)); });
		AddScript("tl_select_single", ID_tl_select_single, { tl_select_single(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_set_parent", ID_tl_set_parent, { tl_set_parent(ScopeAny(s, o), a); return VarType(); });
		AddScript("tl_set_parent_root", ID_tl_set_parent_root, { tl_set_parent_root(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_supports_ik", ID_tl_supports_ik, { return tl_supports_ik(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(true)); });
		AddScript("tl_update", ID_tl_update, { tl_update(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_update_depth", ID_tl_update_depth, { tl_update_depth(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_update_display_name", ID_tl_update_display_name, { tl_update_display_name(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_update_flw", ID_tl_update_flw, { return tl_update_flw(a[0]); });
		AddScript("do_flw", ID_do_flw, { return do_flw(a[0]); });
		AddScript("tl_update_hide", ID_tl_update_hide, { return tl_update_hide(ScopeAny(s, o)); });
		AddScript("tl_update_ik", ID_tl_update_ik, { return tl_update_ik(ScopeAny(s, o), a[0]); });
		AddScript("do_ik", ID_do_ik, { return do_ik(ScopeAny(s, o), a[0]); });
		AddScript("tl_update_length", ID_tl_update_length, { tl_update_length(); return VarType(); });
		AddScript("tl_update_list", ID_tl_update_list, { tl_update_list(ScopeAny(s, o), a); return VarType(); });
		AddScript("tl_update_list_filter", ID_tl_update_list_filter, { return tl_update_list_filter(a[0]); });
		AddScript("tl_update_list_indent", ID_tl_update_list_indent, { tl_update_list_indent(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("tl_update_marker_length", ID_tl_update_marker_length, { tl_update_marker_length(); return VarType(); });
		AddScript("tl_update_matrix", ID_tl_update_matrix, { return tl_update_matrix(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(false), a.Size() > 1 ? a[1] : VarType(true), a.Size() > 2 ? a[2] : VarType(false), a.Size() > 3 ? a[3] : VarType(true)); });
		AddScript("tl_update_model_shape", ID_tl_update_model_shape, { return tl_update_model_shape(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(true)); });
		AddScript("tl_update_model_shape_bend", ID_tl_update_model_shape_bend, { return tl_update_model_shape_bend(ScopeAny(s, o)); });
		AddScript("tl_update_parent_is_selected", ID_tl_update_parent_is_selected, { tl_update_parent_is_selected(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_update_part_list", ID_tl_update_part_list, { tl_update_part_list(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("tl_update_path", ID_tl_update_path, { return tl_update_path(Scope<obj_timeline>(s, o)); });
		AddScript("tl_update_recursive_select", ID_tl_update_recursive_select, { tl_update_recursive_select(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_update_rot_point", ID_tl_update_rot_point, { tl_update_rot_point(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_update_scenery_part", ID_tl_update_scenery_part, { return tl_update_scenery_part(ScopeAny(s, o)); });
		AddScript("tl_update_type_name", ID_tl_update_type_name, { tl_update_type_name(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_update_values", ID_tl_update_values, { tl_update_values(ScopeAny(s, o)); return VarType(); });
		AddScript("tl_update_values_ease", ID_tl_update_values_ease, { return tl_update_values_ease(Scope<obj_timeline>(s, o), a[0]); });
		AddScript("tl_update_values_progress", ID_tl_update_values_progress, { return tl_update_values_progress(Scope<obj_timeline>(s, o), a[0]); });
		AddScript("tl_update_value_types", ID_tl_update_value_types, { return tl_update_value_types(ScopeAny(s, o)); });
		AddScript("tl_update_value_types_show", ID_tl_update_value_types_show, { tl_update_value_types_show(Scope<obj_timeline>(s, o)); return VarType(); });
		AddScript("tl_value_clamp", ID_tl_value_clamp, { return tl_value_clamp(a[0], a[1]); });
		AddScript("tl_value_default", ID_tl_value_default, { return tl_value_default(a[0]); });
		AddScript("tl_value_find_save_id", ID_tl_value_find_save_id, { return tl_value_find_save_id(a[0], a[1], a[2]); });
		AddScript("tl_value_get_save_id", ID_tl_value_get_save_id, { return tl_value_get_save_id(a[0], a[1]); });
		AddScript("tl_value_interpolate", ID_tl_value_interpolate, { return tl_value_interpolate(a[0], a[1], a[2], a[3]); });
		AddScript("tl_value_is_bool", ID_tl_value_is_bool, { return tl_value_is_bool(a[0]); });
		AddScript("tl_value_is_color", ID_tl_value_is_color, { return tl_value_is_color(a[0]); });
		AddScript("tl_value_is_obj", ID_tl_value_is_obj, { return tl_value_is_obj(a[0]); });
		AddScript("tl_value_is_string", ID_tl_value_is_string, { return tl_value_is_string(a[0]); });
		AddScript("tl_value_is_texture", ID_tl_value_is_texture, { return tl_value_is_texture(a[0]); });
		AddScript("tl_value_set", ID_tl_value_set, { return tl_value_set(ScopeAny(s, o), a); });
		AddScript("tl_value_set_done", ID_tl_value_set_done, { tl_value_set_done(); return VarType(); });
		AddScript("tl_value_set_start", ID_tl_value_set_start, { tl_value_set_start(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("tl_value_spawn", ID_tl_value_spawn, { return tl_value_spawn(ScopeAny(s, o)); });
		AddScript("toasts_startup", ID_toasts_startup, { toasts_startup(ScopeAny(s, o)); return VarType(); });
		AddScript("toast_add_action", ID_toast_add_action, { toast_add_action(ScopeAny(s, o), a[0], a[1], a[2]); return VarType(); });
		AddScript("toast_close", ID_toast_close, { toast_close(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("toast_draw", ID_toast_draw, { toast_draw(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("toast_event_create", ID_toast_event_create, { toast_event_create(Scope<obj_toast>(s, o)); return VarType(); });
		AddScript("toast_event_destroy", ID_toast_event_destroy, { toast_event_destroy(Scope<obj_toast>(s, o)); return VarType(); });
		AddScript("toast_new", ID_toast_new, { return toast_new(ScopeAny(s, o), a[0], a[1]); });
		AddScript("toast_set_close", ID_toast_set_close, { toast_set_close(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("togglebutton_add", ID_togglebutton_add, { togglebutton_add(ScopeAny(s, o), a); return VarType(); });
		AddScript("togglebutton_reset", ID_togglebutton_reset, { togglebutton_reset(ScopeAny(s, o)); return VarType(); });
		AddScript("toolbar_draw", ID_toolbar_draw, { toolbar_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("toolbar_draw_button", ID_toolbar_draw_button, { return toolbar_draw_button(ScopeAny(s, o), a[0], a[1], a[2], a[3], a.Size() > 4 ? a[4] : VarType(true)); });
		AddScript("trial_startup", ID_trial_startup, { trial_startup(); return VarType(); });
		AddScript("trial_upgrade", ID_trial_upgrade, { return trial_upgrade(ScopeAny(s, o), a[0]); });
		AddScript("type_has_wind", ID_type_has_wind, { return type_has_wind(a[0]); });
		AddScript("type_is_shape", ID_type_is_shape, { return type_is_shape(a[0]); });
		AddScript("type_is_timeline", ID_type_is_timeline, { return type_is_timeline(a[0]); });
		AddScript("unzip", ID_unzip, { return unzip(a[0], a.Size() > 1 ? a[1] : VarType(unzip_directory)); });
		AddScript("unzip_asset", ID_unzip_asset, { return unzip_asset(a[0]); });
		AddScript("unzip_model", ID_unzip_model, { return unzip_model(a[0]); });
		AddScript("is_cpp", ID_is_cpp, { return is_cpp(); });
		AddScript("log_message", ID_log_message, { log_message(a[0]); return VarType(); });
		AddScript("os_get", ID_os_get, { return os_get(); });
		AddScript("platform_get", ID_platform_get, { return platform_get(); });
		AddScript("interface_scale_default_get", ID_interface_scale_default_get, { return interface_scale_default_get(); });
		AddScript("interface_scale_set", ID_interface_scale_set, { interface_scale_set(a[0]); return VarType(); });
		AddScript("user_directory_get", ID_user_directory_get, { return user_directory_get(); });
		AddScript("projects_directory_get", ID_projects_directory_get, { return projects_directory_get(); });
		AddScript("skins_directory_get", ID_skins_directory_get, { return skins_directory_get(); });
		AddScript("drivers_url_get", ID_drivers_url_get, { return drivers_url_get(); });
		AddScript("window_drop_enter", ID_window_drop_enter, { return window_drop_enter(ScopeAny(s, o), a[0]); });
		AddScript("window_drop", ID_window_drop, { window_drop(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("window_get_current", ID_window_get_current, { return window_get_current(); });
		AddScript("window_create", ID_window_create, { window_create(a[0], a[1], a[2], a[3], a[4]); return VarType(); });
		AddScript("window_close", ID_window_close, { window_close(a[0]); return VarType(); });
		AddScript("window_event_closed", ID_window_event_closed, { window_event_closed(a[0]); return VarType(); });
		AddScript("window_exists", ID_window_exists, { return window_exists(a[0]); });
		AddScript("window_mouse_is_active", ID_window_mouse_is_active, { return window_mouse_is_active(a[0]); });
		AddScript("window_mouse_set_permission", ID_window_mouse_set_permission, { window_mouse_set_permission(a[0]); return VarType(); });
		AddScript("window_mouse_get_permission", ID_window_mouse_get_permission, { return window_mouse_get_permission(); });
		AddScript("window_state_save", ID_window_state_save, { window_state_save(a[0]); return VarType(); });
		AddScript("window_state_restore", ID_window_state_restore, { window_state_restore(a[0], a[1]); return VarType(); });
		AddScript("window_main_restore", ID_window_main_restore, { window_main_restore(a[0], a[1]); return VarType(); });
		AddScript("surface_clear_depth_cache", ID_surface_clear_depth_cache, { surface_clear_depth_cache(a[0]); return VarType(); });
		AddScript("surface_get_depth", ID_surface_get_depth, { return surface_get_depth(a[0], a[1], a[2]); });
		AddScript("surface_get_max_size", ID_surface_get_max_size, { return surface_get_max_size(); });
		AddScript("res_load_scenery_world", ID_res_load_scenery_world, { return res_load_scenery_world(ScopeAny(s, o)); });
		AddScript("res_save_block_cache", ID_res_save_block_cache, { res_save_block_cache(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("res_load_block_cache", ID_res_load_block_cache, { return res_load_block_cache(Scope<obj_resource>(s, o), a[0]); });
		AddScript("thread_get_number", ID_thread_get_number, { return thread_get_number(); });
		AddScript("thread_get_id", ID_thread_get_id, { return thread_get_id(); });
		AddScript("thread_task_begin", ID_thread_task_begin, { thread_task_begin(); return VarType(); });
		AddScript("thread_task_end", ID_thread_task_end, { thread_task_end(); return VarType(); });
		AddScript("get_vertex_buffer_triangles", ID_get_vertex_buffer_triangles, { return get_vertex_buffer_triangles(); });
		AddScript("get_vertex_buffer_render_calls", ID_get_vertex_buffer_render_calls, { return get_vertex_buffer_render_calls(); });
		AddScript("get_primitive_lines", ID_get_primitive_lines, { return get_primitive_lines(); });
		AddScript("get_primitive_triangles", ID_get_primitive_triangles, { return get_primitive_triangles(); });
		AddScript("get_primitive_render_calls", ID_get_primitive_render_calls, { return get_primitive_render_calls(); });
		AddScript("surface_create_ext2", ID_surface_create_ext2, { return surface_create_ext2(a[0], a[1], a.Size() > 2 ? a[2] : VarType(true), a.Size() > 3 ? a[3] : VarType(false)); });
		AddScript("sprite_set_texture_page", ID_sprite_set_texture_page, { sprite_set_texture_page(a[0], a[1]); return VarType(); });
		AddScript("move_all_to_texture_page", ID_move_all_to_texture_page, { move_all_to_texture_page(); return VarType(); });
		AddScript("submit_batch", ID_submit_batch, { submit_batch(); return VarType(); });
		AddScript("vertex_buffer_set_save_data", ID_vertex_buffer_set_save_data, { vertex_buffer_set_save_data(a[0], a[1]); return VarType(); });
		AddScript("shader_submit_int", ID_shader_submit_int, { shader_submit_int(a[0], a[1]); return VarType(); });
		AddScript("shader_submit_float", ID_shader_submit_float, { shader_submit_float(a[0], a[1]); return VarType(); });
		AddScript("shader_submit_vec2", ID_shader_submit_vec2, { shader_submit_vec2(a[0], a[1], a[2]); return VarType(); });
		AddScript("shader_submit_vec3", ID_shader_submit_vec3, { shader_submit_vec3(a[0], a[1], a[2], a[3]); return VarType(); });
		AddScript("shader_submit_vec4", ID_shader_submit_vec4, { shader_submit_vec4(a[0], a[1], a[2], a[3], a[4]); return VarType(); });
		AddScript("shader_submit_float_array", ID_shader_submit_float_array, { shader_submit_float_array(a[0], a[1]); return VarType(); });
		AddScript("shader_submit_mat4_array", ID_shader_submit_mat4_array, { shader_submit_mat4_array(a[0], a[1]); return VarType(); });
		AddScript("show_message_ext", ID_show_message_ext, { return show_message_ext(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("ds_int_map_create", ID_ds_int_map_create, { return ds_int_map_create(); });
		AddScript("ds_string_map_create", ID_ds_string_map_create, { return ds_string_map_create(); });
		AddScript("clip_is_active", ID_clip_is_active, { return clip_is_active(); });
		AddScript("update_frustum", ID_update_frustum, { update_frustum(); return VarType(); });
		AddScript("uv_rotate", ID_uv_rotate, { return uv_rotate(a[0], a[1], a[2]); });
		AddScript("value_get_array", ID_value_get_array, { return value_get_array(a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("value_get_color", ID_value_get_color, { return value_get_color(a[0], a.Size() > 1 ? a[1] : VarType(-IntType(1))); });
		AddScript("value_get_point2D", ID_value_get_point2D, { return value_get_point2D(a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("value_get_point3D", ID_value_get_point3D, { return value_get_point3D(a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("value_get_real", ID_value_get_real, { return value_get_real(a[0], a.Size() > 1 ? a[1] : VarType(null_)); });
		AddScript("value_get_save_id", ID_value_get_save_id, { return value_get_save_id(a); });
		AddScript("value_get_state_vars", ID_value_get_state_vars, { return value_get_state_vars(a[0]); });
		AddScript("value_get_string", ID_value_get_string, { return value_get_string(a[0], a.Size() > 1 ? a[1] : VarType(/*""*/ STR(0))); });
		AddScript("value_random", ID_value_random, { return value_random(a[0], a[1], a[2], a[3]); });
		AddScript("vbuffer_add_pixels", ID_vbuffer_add_pixels, { vbuffer_add_pixels(a); return VarType(); });
		AddScript("vbuffer_add_triangle", ID_vbuffer_add_triangle, { vbuffer_add_triangle(a); return VarType(); });
		AddScript("vbuffer_create_cone", ID_vbuffer_create_cone, { return vbuffer_create_cone(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]); });
		AddScript("vbuffer_create_cube", ID_vbuffer_create_cube, { return vbuffer_create_cube(a[0], a[1], a[2], a[3], a[4], a[5], a[6]); });
		AddScript("vbuffer_create_cylinder", ID_vbuffer_create_cylinder, { return vbuffer_create_cylinder(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]); });
		AddScript("vbuffer_create_path", ID_vbuffer_create_path, { return vbuffer_create_path(Scope<obj_timeline>(s, o), a[0], a.Size() > 1 ? a[1] : VarType(false)); });
		AddScript("vbuffer_create_sphere", ID_vbuffer_create_sphere, { return vbuffer_create_sphere(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("vbuffer_create_surface", ID_vbuffer_create_surface, { return vbuffer_create_surface(a[0], a[1], a[2], a[3]); });
		AddScript("vbuffer_destroy", ID_vbuffer_destroy, { vbuffer_destroy(a[0]); return VarType(); });
		AddScript("vbuffer_done", ID_vbuffer_done, { return vbuffer_done(a); });
		AddScript("vbuffer_generate_tangents", ID_vbuffer_generate_tangents, { return vbuffer_generate_tangents(a[0]); });
		AddScript("vbuffer_is_empty", ID_vbuffer_is_empty, { return vbuffer_is_empty(a[0]); });
		AddScript("vbuffer_render", ID_vbuffer_render, { return vbuffer_render(a); });
		AddScript("vbuffer_render_matrix", ID_vbuffer_render_matrix, { vbuffer_render_matrix(a[0], a[1]); return VarType(); });
		AddScript("vbuffer_start", ID_vbuffer_start, { return vbuffer_start(); });
		AddScript("vec2", ID_vec2, { return vec2(a[0], a.Size() > 1 ? a[1] : VarType(VarType())); });
		AddScript("vec2_add", ID_vec2_add, { return vec2_add(a[0], a[1]); });
		AddScript("vec2_div", ID_vec2_div, { return vec2_div(a[0], a[1]); });
		AddScript("vec2_dot", ID_vec2_dot, { return vec2_dot(a[0], a[1]); });
		AddScript("vec2_length", ID_vec2_length, { return vec2_length(a[0]); });
		AddScript("vec2_mul", ID_vec2_mul, { return vec2_mul(a[0], a[1]); });
		AddScript("vec2_normalize", ID_vec2_normalize, { return vec2_normalize(a[0]); });
		AddScript("vec3", ID_vec3, { return vec3(a[0], a.Size() > 1 ? a[1] : VarType(VarType()), a.Size() > 2 ? a[2] : VarType(VarType())); });
		AddScript("vec3_add", ID_vec3_add, { return vec3_add(a[0], a[1]); });
		AddScript("vec3_cross", ID_vec3_cross, { return vec3_cross(a[0], a[1]); });
		AddScript("vec3_direction", ID_vec3_direction, { return vec3_direction(a[0], a[1]); });
		AddScript("vec3_div", ID_vec3_div, { return vec3_div(a[0], a[1]); });
		AddScript("vec3_dot", ID_vec3_dot, { return vec3_dot(a[0], a[1]); });
		AddScript("vec3_equals", ID_vec3_equals, { return vec3_equals(a[0], a[1]); });
		AddScript("vec3_length", ID_vec3_length, { return vec3_length(a[0]); });
		AddScript("vec3_mul", ID_vec3_mul, { return vec3_mul(a[0], a[1]); });
		AddScript("vec3_mul_matrix", ID_vec3_mul_matrix, { return vec3_mul_matrix(a[0], a[1]); });
		AddScript("vec3_normal", ID_vec3_normal, { return vec3_normal(a[0], a[1]); });
		AddScript("vec3_normalize", ID_vec3_normalize, { return vec3_normalize(a[0]); });
		AddScript("vec3_project_ray", ID_vec3_project_ray, { return vec3_project_ray(a[0]); });
		AddScript("vec3_reflect", ID_vec3_reflect, { return vec3_reflect(a[0], a[1]); });
		AddScript("vec3_rotate_axis_angle", ID_vec3_rotate_axis_angle, { return vec3_rotate_axis_angle(a[0], a[1], a[2]); });
		AddScript("vec3_sub", ID_vec3_sub, { return vec3_sub(a[0], a[1]); });
		AddScript("vec4", ID_vec4, { return vec4(a[0], a.Size() > 1 ? a[1] : VarType(VarType()), a.Size() > 2 ? a[2] : VarType(VarType()), a.Size() > 3 ? a[3] : VarType(VarType())); });
		AddScript("vec4_add", ID_vec4_add, { return vec4_add(a[0], a[1]); });
		AddScript("vec4_div", ID_vec4_div, { return vec4_div(a[0], a[1]); });
		AddScript("vec4_floor", ID_vec4_floor, { return vec4_floor(a[0]); });
		AddScript("vec4_homogenize", ID_vec4_homogenize, { return vec4_homogenize(a[0]); });
		AddScript("vec4_max", ID_vec4_max, { return vec4_max(a[0], a[1]); });
		AddScript("vec4_min", ID_vec4_min, { return vec4_min(a[0], a[1]); });
		AddScript("vec4_mul", ID_vec4_mul, { return vec4_mul(a[0], a[1]); });
		AddScript("vec4_mul_matrix", ID_vec4_mul_matrix, { return vec4_mul_matrix(a[0], a[1]); });
		AddScript("vec4_sub", ID_vec4_sub, { return vec4_sub(a[0], a[1]); });
		AddScript("vertex_add", ID_vertex_add, { vertex_add(a); return VarType(); });
		AddScript("vertex_format_startup", ID_vertex_format_startup, { vertex_format_startup(ScopeAny(s, o)); return VarType(); });
		AddScript("view_area_draw", ID_view_area_draw, { view_area_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("view_click", ID_view_click, { view_click(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("view_control_bend", ID_view_control_bend, { view_control_bend(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("view_control_camera", ID_view_control_camera, { view_control_camera(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("view_control_move", ID_view_control_move, { view_control_move(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("control_test_point", ID_control_test_point, { return control_test_point(a[0], a[1], a[2]); });
		AddScript("control_pos", ID_control_pos, { return control_pos(a[0], a[1], a[2], a[3], a[4]); });
		AddScript("view_control_move_axis", ID_view_control_move_axis, { return view_control_move_axis(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a.Size() > 6 ? a[6] : VarType(true)); });
		AddScript("view_control_move_pan", ID_view_control_move_pan, { return view_control_move_pan(ScopeAny(s, o), a[0], a[1]); });
		AddScript("view_control_move_plane", ID_view_control_move_plane, { return view_control_move_plane(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9]); });
		AddScript("view_control_plane_start", ID_view_control_plane_start, { view_control_plane_start(a[0], a[1]); return VarType(); });
		AddScript("view_control_plane_update", ID_view_control_plane_update, { view_control_plane_update(); return VarType(); });
		AddScript("view_control_rotate", ID_view_control_rotate, { view_control_rotate(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("view_control_rotate_axis", ID_view_control_rotate_axis, { return view_control_rotate_axis(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5]); });
		AddScript("view_control_scale", ID_view_control_scale, { view_control_scale(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("view_control_scale_all", ID_view_control_scale_all, { return view_control_scale_all(ScopeAny(s, o), a[0], a[1], a[2]); });
		AddScript("view_control_scale_axis", ID_view_control_scale_axis, { return view_control_scale_axis(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]); });
		AddScript("view_control_scale_plane", ID_view_control_scale_plane, { return view_control_scale_plane(ScopeAny(s, o), a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9]); });
		AddScript("view_draw", ID_view_draw, { return view_draw(ScopeAny(s, o), a[0]); });
		AddScript("view_event_create", ID_view_event_create, { view_event_create(Scope<obj_view>(s, o)); return VarType(); });
		AddScript("view_shape_bone", ID_view_shape_bone, { view_shape_bone(a[0], a[1], a[2]); return VarType(); });
		AddScript("view_shape_box", ID_view_shape_box, { view_shape_box(a); return VarType(); });
		AddScript("view_shape_camera", ID_view_shape_camera, { view_shape_camera(a[0]); return VarType(); });
		AddScript("view_shape_circle", ID_view_shape_circle, { return view_shape_circle(a); });
		AddScript("view_shape_cone_draw", ID_view_shape_cone_draw, { return view_shape_cone_draw(a[0], a[1], a[2], a[3]); });
		AddScript("view_shape_cube_draw", ID_view_shape_cube_draw, { return view_shape_cube_draw(a[0], a[1], a[2]); });
		AddScript("view_shape_draw", ID_view_shape_draw, { view_shape_draw(a); return VarType(); });
		AddScript("view_shape_line", ID_view_shape_line, { return view_shape_line(a[0], a[1]); });
		AddScript("view_shape_line_draw", ID_view_shape_line_draw, { view_shape_line_draw(a[0], a[1]); return VarType(); });
		AddScript("view_shape_particles", ID_view_shape_particles, { view_shape_particles(a[0]); return VarType(); });
		AddScript("view_shape_path", ID_view_shape_path, { return view_shape_path(ScopeAny(s, o), a[0], a[1]); });
		AddScript("view_shape_pointlight", ID_view_shape_pointlight, { view_shape_pointlight(a[0]); return VarType(); });
		AddScript("view_shape_project", ID_view_shape_project, { return view_shape_project(a[0]); });
		AddScript("view_shape_spotlight", ID_view_shape_spotlight, { view_shape_spotlight(a[0]); return VarType(); });
		AddScript("view_shape_tnb_frame", ID_view_shape_tnb_frame, { return view_shape_tnb_frame(a[0], a[1], a[2]); });
		AddScript("view_shape_triangle_draw", ID_view_shape_triangle_draw, { view_shape_triangle_draw(a[0], a[1], a[2]); return VarType(); });
		AddScript("view_toggle_render", ID_view_toggle_render, { return view_toggle_render(); });
		AddScript("view_toolbar_draw", ID_view_toolbar_draw, { return view_toolbar_draw(ScopeAny(s, o), a[0], a[1], a[2]); });
		AddScript("view_update", ID_view_update, { view_update(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("view_update_surface", ID_view_update_surface, { view_update_surface(ScopeAny(s, o), a[0], a[1]); return VarType(); });
		AddScript("window_draw", ID_window_draw, { return window_draw(ScopeAny(s, o)); });
		AddScript("window_draw_cover", ID_window_draw_cover, { window_draw_cover(); return VarType(); });
		AddScript("window_draw_export", ID_window_draw_export, { return window_draw_export(ScopeAny(s, o)); });
		AddScript("window_draw_load_assets", ID_window_draw_load_assets, { return window_draw_load_assets(ScopeAny(s, o)); });
		AddScript("window_draw_new_assets", ID_window_draw_new_assets, { return window_draw_new_assets(ScopeAny(s, o)); });
		AddScript("window_draw_startup", ID_window_draw_startup, { window_draw_startup(ScopeAny(s, o)); return VarType(); });
		AddScript("window_draw_timeline_move", ID_window_draw_timeline_move, { return window_draw_timeline_move(ScopeAny(s, o)); });
		AddScript("window_draw_timeline_move_tree", ID_window_draw_timeline_move_tree, { window_draw_timeline_move_tree(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("window_draw_toasts", ID_window_draw_toasts, { window_draw_toasts(ScopeAny(s, o)); return VarType(); });
		AddScript("window_maximize", ID_window_maximize, { return window_maximize(); });
		AddScript("window_set_focus", ID_window_set_focus, { return window_set_focus(); });
		AddScript("app_startup_interface_world_import", ID_app_startup_interface_world_import, { app_startup_interface_world_import(); return VarType(); });
		AddScript("world_import_startup", ID_world_import_startup, { world_import_startup(); return VarType(); });
		AddScript("world_import_begin", ID_world_import_begin, { world_import_begin(ScopeAny(s, o), a.Size() > 0 ? a[0] : VarType(true), a.Size() > 1 ? a[1] : VarType(null_)); return VarType(); });
		AddScript("world_import_select_world", ID_world_import_select_world, { world_import_select_world(ScopeAny(s, o), a[0], a.Size() > 1 ? a[1] : VarType(/*""*/ STR(0)), a.Size() > 2 ? a[2] : VarType(false)); return VarType(); });
		AddScript("world_import_select_dimension", ID_world_import_select_dimension, { world_import_select_dimension(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("world_import_has_dimension", ID_world_import_has_dimension, { return world_import_has_dimension(a[0]); });
		AddScript("world_import_has_selection", ID_world_import_has_selection, { return world_import_has_selection(); });
		AddScript("world_import_get_selection_size", ID_world_import_get_selection_size, { return world_import_get_selection_size(); });
		AddScript("world_import_apply_settings", ID_world_import_apply_settings, { world_import_apply_settings(ScopeAny(s, o)); return VarType(); });
		AddScript("world_import_go_to_player", ID_world_import_go_to_player, { world_import_go_to_player(); return VarType(); });
		AddScript("world_import_set_selection", ID_world_import_set_selection, { world_import_set_selection(a[0]); return VarType(); });
		AddScript("world_import_get_saves_dir", ID_world_import_get_saves_dir, { return world_import_get_saves_dir(); });
		AddScript("world_import_confirm", ID_world_import_confirm, { world_import_confirm(); return VarType(); });
		AddScript("world_import_confirm_done", ID_world_import_confirm_done, { world_import_confirm_done(ScopeAny(s, o)); return VarType(); });
		AddScript("world_import_cancel", ID_world_import_cancel, { world_import_cancel(); return VarType(); });
		AddScript("world_import_update_surface", ID_world_import_update_surface, { world_import_update_surface(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]); return VarType(); });
		AddScript("world_import_world_menu_init", ID_world_import_world_menu_init, { world_import_world_menu_init(); return VarType(); });
		AddScript("world_import_dimension_menu_init", ID_world_import_dimension_menu_init, { world_import_dimension_menu_init(); return VarType(); });
		AddScript("window_draw_world_import", ID_window_draw_world_import, { window_draw_world_import(ScopeAny(s, o)); return VarType(); });
		AddScript("action_world_import_settings_filter_enabled", ID_action_world_import_settings_filter_enabled, { action_world_import_settings_filter_enabled(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_world_import_settings_filter_mode", ID_action_world_import_settings_filter_mode, { action_world_import_settings_filter_mode(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_world_import_settings_block_select", ID_action_world_import_settings_block_select, { action_world_import_settings_block_select(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_world_import_settings_filter_select", ID_action_world_import_settings_filter_select, { action_world_import_settings_filter_select(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("action_world_import_settings_unload_regions", ID_action_world_import_settings_unload_regions, { action_world_import_settings_unload_regions(ScopeAny(s, o), a[0]); return VarType(); });
		AddScript("popup_worldsettings_draw", ID_popup_worldsettings_draw, { popup_worldsettings_draw(ScopeAny(s, o)); return VarType(); });
		AddScript("yesno", ID_yesno, { return yesno(a[0]); });
	}
	
	void app::InitMembers()
	{
		if (memberMap.contains(ID_app))
			return;
		
		DefineObjectMember(ID_app, M_timeline_marker, timeline_marker, VARIANT_t);
		DefineObjectMember(ID_app, M_save_id, save_id, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_marker_list, timeline_marker_list, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_count, menu_count, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_list, menu_list, INTEGER_t);
		DefineObjectMember(ID_app, M_bench_settings, bench_settings, INTEGER_t);
		DefineObjectMember(ID_app, M_ptype_list, ptype_list, INTEGER_t);
		DefineObjectMember(ID_app, M_recent_list, recent_list, INTEGER_t);
		DefineObjectMember(ID_app, M_background_image, background_image, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_sun_tex, background_sky_sun_tex, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_moon_tex, background_sky_moon_tex, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_tex, background_sky_clouds_tex, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_tex, background_ground_tex, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_slot, background_ground_slot, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_slot_prev, background_ground_slot_prev, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_tex_prev, background_ground_tex_prev, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_ani, background_ground_ani, BOOLEAN_t);
		DefineObjectMember(ID_app, M_background_ground_ani_texture, background_ground_ani_texture, ARRAY_t);
		DefineObjectMember(ID_app, M_background_ground_texture, background_ground_texture, INTEGER_t);
		DefineObjectMember(ID_app, M_background_ground_name, background_ground_name, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_tex_material, background_ground_tex_material, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_tex_normal, background_ground_tex_normal, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_slot_normal, background_ground_slot_normal, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_tex_normal_prev, background_ground_tex_normal_prev, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_normal_ani, background_ground_normal_ani, BOOLEAN_t);
		DefineObjectMember(ID_app, M_background_ground_ani_tex_normal, background_ground_ani_tex_normal, ARRAY_t);
		DefineObjectMember(ID_app, M_background_ground_ani_texture_normal, background_ground_ani_texture_normal, ARRAY_t);
		DefineObjectMember(ID_app, M_background_ground_texture_normal, background_ground_texture_normal, INTEGER_t);
		DefineObjectMember(ID_app, M_spr_default_normal, spr_default_normal, INTEGER_t);
		DefineObjectMember(ID_app, M_res_list, res_list, INTEGER_t);
		DefineObjectMember(ID_app, M_frame_editor, frame_editor, INTEGER_t);
		DefineObjectMember(ID_app, M_timeline_camera, timeline_camera, INTEGER_t);
		DefineObjectMember(ID_app, M_lib_list, lib_list, INTEGER_t);
		DefineObjectMember(ID_app, M_value_default, value_default, ARRAY_t);
		DefineObjectMember(ID_app, M_project_timeline_list, project_timeline_list, INTEGER_t);
		DefineObjectMember(ID_app, M_id, id, VARIANT_t);
		DefineObjectMember(ID_app, M_project_inherit_pose_array, project_inherit_pose_array, ARRAY_t);
		DefineObjectMember(ID_app, M_update_matrix, update_matrix, BOOLEAN_t);
		DefineObjectMember(ID_app, M_project_ik_part_array, project_ik_part_array, VARIANT_t);
		DefineObjectMember(ID_app, M_i, i, INTEGER_t);
		DefineObjectMember(ID_app, M_project_flw_obj_array, project_flw_obj_array, VARIANT_t);
		DefineObjectMember(ID_app, M_window_height, window_height, REAL_t);
		DefineObjectMember(ID_app, M_font_label, font_label, INTEGER_t);
		DefineObjectMember(ID_app, M_window_state, window_state, STRING_t);
		DefineObjectMember(ID_app, M_setting_main_window_rect, setting_main_window_rect, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_main_window_maximized, setting_main_window_maximized, VARIANT_t);
		DefineObjectMember(ID_app, M_shortcut_bar_list, shortcut_bar_list, INTEGER_t);
		DefineObjectMember(ID_app, M_shortcut_bar_state, shortcut_bar_state, STRING_t);
		DefineObjectMember(ID_app, M_shortcut_bar_state_prev, shortcut_bar_state_prev, STRING_t);
		DefineObjectMember(ID_app, M_bench_open, bench_open, BOOLEAN_t);
		DefineObjectMember(ID_app, M_bench_hover_ani, bench_hover_ani, REAL_t);
		DefineObjectMember(ID_app, M_bench_hover_ani_goal, bench_hover_ani_goal, REAL_t);
		DefineObjectMember(ID_app, M_bench_click_ani, bench_click_ani, REAL_t);
		DefineObjectMember(ID_app, M_bench_click_ani_goal, bench_click_ani_goal, REAL_t);
		DefineObjectMember(ID_app, M_bench_rotate_ani, bench_rotate_ani, REAL_t);
		DefineObjectMember(ID_app, M_bench_button_hover, bench_button_hover, BOOLEAN_t);
		DefineObjectMember(ID_app, M_bench_show_ani_type, bench_show_ani_type, STRING_t);
		DefineObjectMember(ID_app, M_bench_show_ani, bench_show_ani, VARIANT_t);
		DefineObjectMember(ID_app, M_bench_settings_ani, bench_settings_ani, VARIANT_t);
		DefineObjectMember(ID_app, M_bench_height, bench_height, REAL_t);
		DefineObjectMember(ID_app, M_bench_type_list, bench_type_list, INTEGER_t);
		DefineObjectMember(ID_app, M_timeline_playing, timeline_playing, REAL_t);
		DefineObjectMember(ID_app, M_timeline_playing_start_time, timeline_playing_start_time, INTEGER_t);
		DefineObjectMember(ID_app, M_timeline_playing_start_marker, timeline_playing_start_marker, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_playing_last_marker, timeline_playing_last_marker, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_playing_start_hor_scroll, timeline_playing_start_hor_scroll, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_repeat, timeline_repeat, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_seamless_repeat, timeline_seamless_repeat, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_intervals_show, timeline_intervals_show, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_interval_size, timeline_interval_size, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_interval_offset, timeline_interval_offset, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_list_first, timeline_list_first, REAL_t);
		DefineObjectMember(ID_app, M_timeline_list_visible, timeline_list_visible, REAL_t);
		DefineObjectMember(ID_app, M_timeline_mouse_pos, timeline_mouse_pos, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_marker_move, timeline_marker_move, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_marker_previous, timeline_marker_previous, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_region_start, timeline_region_start, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_region_end, timeline_region_end, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_region_pos, timeline_region_pos, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_length, timeline_length, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_zoom, timeline_zoom, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_zoom_goal, timeline_zoom_goal, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_insert_pos, timeline_insert_pos, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_show_frames, timeline_show_frames, REAL_t);
		DefineObjectMember(ID_app, M_timeline_marker_length, timeline_marker_length, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_move_obj, timeline_move_obj, INTEGER_t);
		DefineObjectMember(ID_app, M_timeline_move_highlight_tl, timeline_move_highlight_tl, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_move_highlight_pos, timeline_move_highlight_pos, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_move_off_x, timeline_move_off_x, REAL_t);
		DefineObjectMember(ID_app, M_timeline_move_off_y, timeline_move_off_y, REAL_t);
		DefineObjectMember(ID_app, M_timeline_move_kf, timeline_move_kf, INTEGER_t);
		DefineObjectMember(ID_app, M_timeline_move_kf_mouse_pos, timeline_move_kf_mouse_pos, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_sound_resize_mouse_pos, timeline_sound_resize_mouse_pos, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_sound_end_mousex, timeline_sound_end_mousex, INTEGER_t);
		DefineObjectMember(ID_app, M_timeline_sound_end_value, timeline_sound_end_value, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_settings, timeline_settings, BOOLEAN_t);
		DefineObjectMember(ID_app, M_timeline_settings_import_loop_tl, timeline_settings_import_loop_tl, INTEGER_t);
		DefineObjectMember(ID_app, M_timeline_settings_walk_fn, timeline_settings_walk_fn, STRING_t);
		DefineObjectMember(ID_app, M_timeline_settings_run_fn, timeline_settings_run_fn, STRING_t);
		DefineObjectMember(ID_app, M_timeline_settings_keyframes, timeline_settings_keyframes, BOOLEAN_t);
		DefineObjectMember(ID_app, M_timeline_settings_keyframes_export, timeline_settings_keyframes_export, BOOLEAN_t);
		DefineObjectMember(ID_app, M_copy_kf_amount, copy_kf_amount, INTEGER_t);
		DefineObjectMember(ID_app, M_copy_kf_pos, copy_kf_pos, ARRAY_t);
		DefineObjectMember(ID_app, M_copy_kf_value, copy_kf_value, ARRAY_t);
		DefineObjectMember(ID_app, M_copy_kf_tl_save_id, copy_kf_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_app, M_copy_kf_tl_part_of_save_id, copy_kf_tl_part_of_save_id, ARRAY_t);
		DefineObjectMember(ID_app, M_copy_kf_tl_model_part_name, copy_kf_tl_model_part_name, ARRAY_t);
		DefineObjectMember(ID_app, M_tree_list, tree_list, INTEGER_t);
		DefineObjectMember(ID_app, M_tree_list_filter, tree_list_filter, INTEGER_t);
		DefineObjectMember(ID_app, M_tree_visible_list, tree_visible_list, INTEGER_t);
		DefineObjectMember(ID_app, M_tree_update_parent_filter, tree_update_parent_filter, INTEGER_t);
		DefineObjectMember(ID_app, M_tree_update_extend, tree_update_extend, VARIANT_t);
		DefineObjectMember(ID_app, M_tree_update_color, tree_update_color, VARIANT_t);
		DefineObjectMember(ID_app, M_project_model_list, project_model_list, INTEGER_t);
		DefineObjectMember(ID_app, M_timeline_settings_w, timeline_settings_w, REAL_t);
		DefineObjectMember(ID_app, M_timeline_settings_right_w, timeline_settings_right_w, REAL_t);
		DefineObjectMember(ID_app, M_timeline_marker_current, timeline_marker_current, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_marker_edit, timeline_marker_edit, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_marker_edit_offset, timeline_marker_edit_offset, REAL_t);
		DefineObjectMember(ID_app, M_timeline_search, timeline_search, STRING_t);
		DefineObjectMember(ID_app, M_timeline_rename, timeline_rename, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_hide_color_tag, timeline_hide_color_tag, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_select_box_min, timeline_select_box_min, ARRAY_t);
		DefineObjectMember(ID_app, M_timeline_select_box_max, timeline_select_box_max, ARRAY_t);
		DefineObjectMember(ID_app, M_tree_close_parent, tree_close_parent, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_timeline_hide_ghosts, setting_timeline_hide_ghosts, VARIANT_t);
		DefineObjectMember(ID_app, M_level_display, level_display, ARRAY_t);
		DefineObjectMember(ID_app, M_parent_filter, parent_filter, INTEGER_t);
		DefineObjectMember(ID_app, M_export_surface, export_surface, VARIANT_t);
		DefineObjectMember(ID_app, M_export_sample, export_sample, REAL_t);
		DefineObjectMember(ID_app, M_export_filename, export_filename, STRING_t);
		DefineObjectMember(ID_app, M_export_escape_time, export_escape_time, INTEGER_t);
		DefineObjectMember(ID_app, M_exportmovie_format, exportmovie_format, STRING_t);
		DefineObjectMember(ID_app, M_exportmovie_marker_previous, exportmovie_marker_previous, VARIANT_t);
		DefineObjectMember(ID_app, M_exportmovie_marker_start, exportmovie_marker_start, VARIANT_t);
		DefineObjectMember(ID_app, M_exportmovie_marker_end, exportmovie_marker_end, VARIANT_t);
		DefineObjectMember(ID_app, M_exportmovie_frame, exportmovie_frame, REAL_t);
		DefineObjectMember(ID_app, M_exportmovie_frame_rate, exportmovie_frame_rate, REAL_t);
		DefineObjectMember(ID_app, M_exportmovie_framespersecond, exportmovie_framespersecond, REAL_t);
		DefineObjectMember(ID_app, M_exportmovie_high_quality, exportmovie_high_quality, REAL_t);
		DefineObjectMember(ID_app, M_exportmovie_start, exportmovie_start, VARIANT_t);
		DefineObjectMember(ID_app, M_exportmovie_buffer, exportmovie_buffer, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_current, menu_current, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_popup, menu_popup, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_expose, menu_expose, BOOLEAN_t);
		DefineObjectMember(ID_app, M_menu_filter, menu_filter, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_filter_normal, menu_filter_normal, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_search_tbx, menu_search_tbx, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_search_busy, menu_search_busy, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_search, menu_search, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_model_current, menu_model_current, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_model_state, menu_model_state, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_model_state_current, menu_model_state_current, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_block_current, menu_block_current, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_block_state, menu_block_state, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_block_state_current, menu_block_state_current, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_bench, menu_bench, BOOLEAN_t);
		DefineObjectMember(ID_app, M_menu_armor_piece, menu_armor_piece, INTEGER_t);
		DefineObjectMember(ID_app, M_menu_armor_piece_data, menu_armor_piece_data, INTEGER_t);
		DefineObjectMember(ID_app, M_settings_menu_name, settings_menu_name, STRING_t);
		DefineObjectMember(ID_app, M_settings_menu_ani, settings_menu_ani, VARIANT_t);
		DefineObjectMember(ID_app, M_settings_menu_ani_type, settings_menu_ani_type, STRING_t);
		DefineObjectMember(ID_app, M_settings_menu_window, settings_menu_window, INTEGER_t);
		DefineObjectMember(ID_app, M_settings_menu_x, settings_menu_x, VARIANT_t);
		DefineObjectMember(ID_app, M_settings_menu_y, settings_menu_y, VARIANT_t);
		DefineObjectMember(ID_app, M_settings_menu_w, settings_menu_w, VARIANT_t);
		DefineObjectMember(ID_app, M_settings_menu_h, settings_menu_h, VARIANT_t);
		DefineObjectMember(ID_app, M_settings_menu_h_max, settings_menu_h_max, VARIANT_t);
		DefineObjectMember(ID_app, M_settings_menu_button_w, settings_menu_button_w, REAL_t);
		DefineObjectMember(ID_app, M_settings_menu_button_h, settings_menu_button_h, REAL_t);
		DefineObjectMember(ID_app, M_settings_menu_amount, settings_menu_amount, INTEGER_t);
		DefineObjectMember(ID_app, M_settings_menu_primary, settings_menu_primary, BOOLEAN_t);
		DefineObjectMember(ID_app, M_settings_menu_script, settings_menu_script, INTEGER_t);
		DefineObjectMember(ID_app, M_settings_menu_above, settings_menu_above, BOOLEAN_t);
		DefineObjectMember(ID_app, M_settings_menu_list, settings_menu_list, INTEGER_t);
		DefineObjectMember(ID_app, M_settings_menu_busy_prev, settings_menu_busy_prev, VARIANT_t);
		DefineObjectMember(ID_app, M_settings_menu_scroll, settings_menu_scroll, INTEGER_t);
		DefineObjectMember(ID_app, M_settings_menu_steps, settings_menu_steps, INTEGER_t);
		DefineObjectMember(ID_app, M_settings_menu_quick, settings_menu_quick, REAL_t);
		DefineObjectMember(ID_app, M_colorpicker, colorpicker, INTEGER_t);
		DefineObjectMember(ID_app, M_tbx_grid_rows, tbx_grid_rows, INTEGER_t);
		DefineObjectMember(ID_app, M_tbx_grid_columns, tbx_grid_columns, INTEGER_t);
		DefineObjectMember(ID_app, M_tbx_snap_position, tbx_snap_position, INTEGER_t);
		DefineObjectMember(ID_app, M_tbx_snap_rotation, tbx_snap_rotation, INTEGER_t);
		DefineObjectMember(ID_app, M_tbx_snap_scale, tbx_snap_scale, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_welcome, popup_welcome, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_about, popup_about, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_newproject, popup_newproject, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_saveas, popup_saveas, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_loading, popup_loading, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_downloadskin, popup_downloadskin, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_importimage, popup_importimage, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_importitemsheet, popup_importitemsheet, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_exportmovie, popup_exportmovie, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_export_movie_format, setting_export_movie_format, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_movie_frame_rate, setting_export_movie_frame_rate, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_movie_framespersecond, setting_export_movie_framespersecond, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_movie_bit_rate, setting_export_movie_bit_rate, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_movie_include_audio, setting_export_movie_include_audio, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_movie_remove_background, setting_export_movie_remove_background, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_movie_include_hidden, setting_export_movie_include_hidden, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_movie_high_quality, setting_export_movie_high_quality, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_movie_watermark, setting_export_movie_watermark, VARIANT_t);
		DefineObjectMember(ID_app, M_popup_exportimage, popup_exportimage, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_export_image_remove_background, setting_export_image_remove_background, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_image_include_hidden, setting_export_image_include_hidden, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_image_high_quality, setting_export_image_high_quality, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_export_image_watermark, setting_export_image_watermark, VARIANT_t);
		DefineObjectMember(ID_app, M_popup_upgrade, popup_upgrade, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_advanced, popup_advanced, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_modelbench, popup_modelbench, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_modelbench_popup_hidden, setting_modelbench_popup_hidden, VARIANT_t);
		DefineObjectMember(ID_app, M_popup_pattern_editor, popup_pattern_editor, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_armor_editor, popup_armor_editor, INTEGER_t);
		DefineObjectMember(ID_app, M_panel_map, panel_map, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_panel_left_bottom_size, setting_panel_left_bottom_size, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_panel_right_bottom_size, setting_panel_right_bottom_size, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_panel_bottom_size, setting_panel_bottom_size, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_panel_top_size, setting_panel_top_size, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_panel_left_top_size, setting_panel_left_top_size, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_panel_right_top_size, setting_panel_right_top_size, VARIANT_t);
		DefineObjectMember(ID_app, M_panel_window_obj, panel_window_obj, INTEGER_t);
		DefineObjectMember(ID_app, M_panel_area_x, panel_area_x, REAL_t);
		DefineObjectMember(ID_app, M_panel_area_y, panel_area_y, REAL_t);
		DefineObjectMember(ID_app, M_panel_area_width, panel_area_width, REAL_t);
		DefineObjectMember(ID_app, M_panel_area_height, panel_area_height, REAL_t);
		DefineObjectMember(ID_app, M_panel_resize, panel_resize, INTEGER_t);
		DefineObjectMember(ID_app, M_panel_resize_size, panel_resize_size, REAL_t);
		DefineObjectMember(ID_app, M_tab_move, tab_move, VARIANT_t);
		DefineObjectMember(ID_app, M_tab_move_name, tab_move_name, VARIANT_t);
		DefineObjectMember(ID_app, M_tab_move_x, tab_move_x, REAL_t);
		DefineObjectMember(ID_app, M_tab_move_width, tab_move_width, REAL_t);
		DefineObjectMember(ID_app, M_tab_move_direction, tab_move_direction, INTEGER_t);
		DefineObjectMember(ID_app, M_tab_move_box_x, tab_move_box_x, REAL_t);
		DefineObjectMember(ID_app, M_tab_move_box_y, tab_move_box_y, REAL_t);
		DefineObjectMember(ID_app, M_tab_move_box_width, tab_move_box_width, REAL_t);
		DefineObjectMember(ID_app, M_tab_move_box_height, tab_move_box_height, REAL_t);
		DefineObjectMember(ID_app, M_tab_move_mouseon_panel, tab_move_mouseon_panel, INTEGER_t);
		DefineObjectMember(ID_app, M_tab_move_mouseon_panel_prev, tab_move_mouseon_panel_prev, INTEGER_t);
		DefineObjectMember(ID_app, M_tab_move_mouseon_position, tab_move_mouseon_position, INTEGER_t);
		DefineObjectMember(ID_app, M_properties, properties, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_properties_location, setting_properties_location, VARIANT_t);
		DefineObjectMember(ID_app, M_lib_preview, lib_preview, INTEGER_t);
		DefineObjectMember(ID_app, M_res_preview, res_preview, INTEGER_t);
		DefineObjectMember(ID_app, M_ground_editor, ground_editor, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_ground_editor_location, setting_ground_editor_location, VARIANT_t);
		DefineObjectMember(ID_app, M_template_editor, template_editor, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_template_editor_location, setting_template_editor_location, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline, timeline, VARIANT_t);
		DefineObjectMember(ID_app, M_timeline_editor, timeline_editor, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_timeline_editor_location, setting_timeline_editor_location, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_frame_editor_location, setting_frame_editor_location, VARIANT_t);
		DefineObjectMember(ID_app, M_settings, settings, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_settings_location, setting_settings_location, VARIANT_t);
		DefineObjectMember(ID_app, M_toolbar_size, toolbar_size, REAL_t);
		DefineObjectMember(ID_app, M_toolbar_menu_active, toolbar_menu_active, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_area_x, view_area_x, REAL_t);
		DefineObjectMember(ID_app, M_view_area_y, view_area_y, REAL_t);
		DefineObjectMember(ID_app, M_view_area_width, view_area_width, REAL_t);
		DefineObjectMember(ID_app, M_view_area_height, view_area_height, REAL_t);
		DefineObjectMember(ID_app, M_view_click_x, view_click_x, INTEGER_t);
		DefineObjectMember(ID_app, M_view_click_y, view_click_y, INTEGER_t);
		DefineObjectMember(ID_app, M_view_resize_width, view_resize_width, VARIANT_t);
		DefineObjectMember(ID_app, M_view_resize_height, view_resize_height, VARIANT_t);
		DefineObjectMember(ID_app, M_view_glow_left_top, view_glow_left_top, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_glow_top, view_glow_top, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_glow_right_top, view_glow_right_top, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_glow_right, view_glow_right, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_glow_right_bottom, view_glow_right_bottom, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_glow_bottom, view_glow_bottom, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_glow_left_bottom, view_glow_left_bottom, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_glow_left, view_glow_left, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_split, view_split, REAL_t);
		DefineObjectMember(ID_app, M_setting_view_split, setting_view_split, VARIANT_t);
		DefineObjectMember(ID_app, M_view_main, view_main, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_view_main_overlays, setting_view_main_overlays, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_main_aspect_ratio, setting_view_main_aspect_ratio, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_main_grid, setting_view_main_grid, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_main_gizmos, setting_view_main_gizmos, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_main_effects, setting_view_main_effects, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_main_particles, setting_view_main_particles, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_main_location, setting_view_main_location, VARIANT_t);
		DefineObjectMember(ID_app, M_view_second, view_second, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_view_second_show, setting_view_second_show, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_overlays, setting_view_second_overlays, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_aspect_ratio, setting_view_second_aspect_ratio, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_grid, setting_view_second_grid, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_gizmos, setting_view_second_gizmos, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_effects, setting_view_second_effects, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_particles, setting_view_second_particles, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_location, setting_view_second_location, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_width, setting_view_second_width, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_view_second_height, setting_view_second_height, VARIANT_t);
		DefineObjectMember(ID_app, M_view_glow_ani, view_glow_ani, VARIANT_t);
		DefineObjectMember(ID_app, M_view_glow_location_prev, view_glow_location_prev, STRING_t);
		DefineObjectMember(ID_app, M_view_render, view_render, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_render_real_time, view_render_real_time, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_control_ratio, view_control_ratio, REAL_t);
		DefineObjectMember(ID_app, M_view_control_edit, view_control_edit, INTEGER_t);
		DefineObjectMember(ID_app, M_view_control_edit_view, view_control_edit_view, INTEGER_t);
		DefineObjectMember(ID_app, M_view_control_vec, view_control_vec, VECTOR_t);
		DefineObjectMember(ID_app, M_view_control_pos, view_control_pos, VECTOR_t);
		DefineObjectMember(ID_app, M_view_control_flip, view_control_flip, REAL_t);
		DefineObjectMember(ID_app, M_view_control_value, view_control_value, VARIANT_t);
		DefineObjectMember(ID_app, M_view_control_move_distance, view_control_move_distance, REAL_t);
		DefineObjectMember(ID_app, M_view_control_scale_coords, view_control_scale_coords, VECTOR_t);
		DefineObjectMember(ID_app, M_view_control_scale_amount, view_control_scale_amount, REAL_t);
		DefineObjectMember(ID_app, M_view_control_scale_start, view_control_scale_start, REAL_t);
		DefineObjectMember(ID_app, M_view_control_value_scale, view_control_value_scale, VECTOR_t);
		DefineObjectMember(ID_app, M_view_control_matrix, view_control_matrix, VARIANT_t);
		DefineObjectMember(ID_app, M_view_control_length, view_control_length, VARIANT_t);
		DefineObjectMember(ID_app, M_view_control_ray_dir, view_control_ray_dir, VECTOR_t);
		DefineObjectMember(ID_app, M_view_control_plane_normal, view_control_plane_normal, VECTOR_t);
		DefineObjectMember(ID_app, M_view_control_plane_origin, view_control_plane_origin, VARIANT_t);
		DefineObjectMember(ID_app, M_view_control_plane, view_control_plane, BOOLEAN_t);
		DefineObjectMember(ID_app, M_view_control_move_flip_axis, view_control_move_flip_axis, ARRAY_t);
		DefineObjectMember(ID_app, M_world_import_settings_popup, world_import_settings_popup, INTEGER_t);
		DefineObjectMember(ID_app, M_world_import_surface, world_import_surface, VARIANT_t);
		DefineObjectMember(ID_app, M_world_import_add_tl, world_import_add_tl, BOOLEAN_t);
		DefineObjectMember(ID_app, M_world_import_temp, world_import_temp, VARIANT_t);
		DefineObjectMember(ID_app, M_world_import_settings_block_select, world_import_settings_block_select, INTEGER_t);
		DefineObjectMember(ID_app, M_world_import_settings_block_list, world_import_settings_block_list, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_world_import_filter_list, setting_world_import_filter_list, INTEGER_t);
		DefineObjectMember(ID_app, M_world_import_settings_filter_select, world_import_settings_filter_select, INTEGER_t);
		DefineObjectMember(ID_app, M_world_import_settings_filter_list, world_import_settings_filter_list, INTEGER_t);
		DefineObjectMember(ID_app, M_context_group_copy_list, context_group_copy_list, INTEGER_t);
		DefineObjectMember(ID_app, M_context_menu_copy_axis_edit, context_menu_copy_axis_edit, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_value_type, context_menu_value_type, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_value, context_menu_value, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_value_name, context_menu_value_name, STRING_t);
		DefineObjectMember(ID_app, M_context_menu_copy_type, context_menu_copy_type, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_copy, context_menu_copy, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_value_script, context_menu_value_script, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_value_default, context_menu_value_default, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_name, context_menu_name, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_name_last, context_menu_name_last, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_level_amount, context_menu_level_amount, INTEGER_t);
		DefineObjectMember(ID_app, M_context_menu_level, context_menu_level, INTEGER_t);
		DefineObjectMember(ID_app, M_context_menu_find_script, context_menu_find_script, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_find_script_name, context_menu_find_script_name, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_mouseon, context_menu_mouseon, BOOLEAN_t);
		DefineObjectMember(ID_app, M_context_menu_mouseon_level, context_menu_mouseon_level, INTEGER_t);
		DefineObjectMember(ID_app, M_context_menu_mouseon_item, context_menu_mouseon_item, INTEGER_t);
		DefineObjectMember(ID_app, M_context_menu_mouseon_reset, context_menu_mouseon_reset, BOOLEAN_t);
		DefineObjectMember(ID_app, M_context_menu_busy_prev, context_menu_busy_prev, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_min_x, context_menu_min_x, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_min_y, context_menu_min_y, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_max_x, context_menu_max_x, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_max_y, context_menu_max_y, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_ani, context_menu_ani, STRING_t);
		DefineObjectMember(ID_app, M_context_menu_window, context_menu_window, INTEGER_t);
		DefineObjectMember(ID_app, M_context_menu_current, context_menu_current, VARIANT_t);
		DefineObjectMember(ID_app, M_context_menu_tbx_action, context_menu_tbx_action, BOOLEAN_t);
		DefineObjectMember(ID_app, M_context_menu_tbx_cut, context_menu_tbx_cut, BOOLEAN_t);
		DefineObjectMember(ID_app, M_context_menu_tbx_copy, context_menu_tbx_copy, BOOLEAN_t);
		DefineObjectMember(ID_app, M_context_menu_tbx_paste, context_menu_tbx_paste, BOOLEAN_t);
		DefineObjectMember(ID_app, M_context_menu_tbx_select_all, context_menu_tbx_select_all, BOOLEAN_t);
		DefineObjectMember(ID_app, M_context_menu_group_temp, context_menu_group_temp, INTEGER_t);
		DefineObjectMember(ID_app, M_context_menu_group, context_menu_group, INTEGER_t);
		DefineObjectMember(ID_app, M_togglebutton_name, togglebutton_name, VARIANT_t);
		DefineObjectMember(ID_app, M_togglebutton_icon, togglebutton_icon, VARIANT_t);
		DefineObjectMember(ID_app, M_togglebutton_value, togglebutton_value, VARIANT_t);
		DefineObjectMember(ID_app, M_togglebutton_active, togglebutton_active, VARIANT_t);
		DefineObjectMember(ID_app, M_togglebutton_script, togglebutton_script, VARIANT_t);
		DefineObjectMember(ID_app, M_togglebutton_axis, togglebutton_axis, VARIANT_t);
		DefineObjectMember(ID_app, M_togglebutton_amount, togglebutton_amount, INTEGER_t);
		DefineObjectMember(ID_app, M_textbox_lastfocus, textbox_lastfocus, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_click, textbox_click, INTEGER_t);
		DefineObjectMember(ID_app, M_textbox_marker, textbox_marker, INTEGER_t);
		DefineObjectMember(ID_app, M_textbox_mouseover, textbox_mouseover, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_select_startline, textbox_select_startline, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_select_startpos, textbox_select_startpos, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_select_endline, textbox_select_endline, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_select_endpos, textbox_select_endpos, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_select_mouseline, textbox_select_mouseline, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_select_mousepos, textbox_select_mousepos, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_select_clickline, textbox_select_clickline, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_select_clickpos, textbox_select_clickpos, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_isediting, textbox_isediting, BOOLEAN_t);
		DefineObjectMember(ID_app, M_textbox_isediting_respond, textbox_isediting_respond, BOOLEAN_t);
		DefineObjectMember(ID_app, M_textbox_input, textbox_input, STRING_t);
		DefineObjectMember(ID_app, M_textbox_jump, textbox_jump, BOOLEAN_t);
		DefineObjectMember(ID_app, M_textbox_jumpto, textbox_jumpto, VARIANT_t);
		DefineObjectMember(ID_app, M_textbox_list, textbox_list, INTEGER_t);
		DefineObjectMember(ID_app, M_history, history, ARRAY_t);
		DefineObjectMember(ID_app, M_history_amount, history_amount, REAL_t);
		DefineObjectMember(ID_app, M_history_pos, history_pos, REAL_t);
		DefineObjectMember(ID_app, M_history_undo, history_undo, REAL_t);
		DefineObjectMember(ID_app, M_history_redo, history_redo, REAL_t);
		DefineObjectMember(ID_app, M_history_resource_update, history_resource_update, BOOLEAN_t);
		DefineObjectMember(ID_app, M_textfield_name, textfield_name, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_value, textfield_value, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_default, textfield_default, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_script, textfield_script, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_axis, textfield_axis, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_textbox, textfield_textbox, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_icon, textfield_icon, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_mul, textfield_mul, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_min, textfield_min, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_max, textfield_max, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_caption, textfield_caption, VARIANT_t);
		DefineObjectMember(ID_app, M_textfield_amount, textfield_amount, REAL_t);
		DefineObjectMember(ID_app, M_project_render_distance, project_render_distance, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_texture_material, background_ground_texture_material, INTEGER_t);
		DefineObjectMember(ID_app, M_background_ground_material_ani, background_ground_material_ani, BOOLEAN_t);
		DefineObjectMember(ID_app, M_background_ground_ani_texture_material, background_ground_ani_texture_material, ARRAY_t);
		DefineObjectMember(ID_app, M_background_ground_vbuffer, background_ground_vbuffer, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_sphere_vbuffer, background_image_sphere_vbuffer, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_cube_vbuffer, background_image_cube_vbuffer, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_cube_mapped_vbuffer, background_image_cube_mapped_vbuffer, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_texture, background_fog_texture, INTEGER_t);
		DefineObjectMember(ID_app, M_background_fog_vbuffer, background_fog_vbuffer, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_stars_texture, background_sky_stars_texture, INTEGER_t);
		DefineObjectMember(ID_app, M_background_sky_stars_vbuffer, background_sky_stars_vbuffer, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_sun_moon_vbuffer, background_sky_sun_moon_vbuffer, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_vbuffer, background_sky_clouds_vbuffer, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_vbuffer_pos, background_sky_clouds_vbuffer_pos, ARRAY_t);
		DefineObjectMember(ID_app, M_http_assets, http_assets, INTEGER_t);
		DefineObjectMember(ID_app, M_project_startup_fn, project_startup_fn, STRING_t);
		DefineObjectMember(ID_app, M_backup_next, backup_next, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_backup_time, setting_backup_time, REAL_t);
		DefineObjectMember(ID_app, M_project_file, project_file, VARIANT_t);
		DefineObjectMember(ID_app, M_project_folder, project_folder, STRING_t);
		DefineObjectMember(ID_app, M_project_changed, project_changed, INTEGER_t);
		DefineObjectMember(ID_app, M_project_name, project_name, VARIANT_t);
		DefineObjectMember(ID_app, M_project_author, project_author, VARIANT_t);
		DefineObjectMember(ID_app, M_project_description, project_description, VARIANT_t);
		DefineObjectMember(ID_app, M_project_video_width, project_video_width, VARIANT_t);
		DefineObjectMember(ID_app, M_project_video_height, project_video_height, VARIANT_t);
		DefineObjectMember(ID_app, M_project_video_template, project_video_template, VARIANT_t);
		DefineObjectMember(ID_app, M_project_video_keep_aspect_ratio, project_video_keep_aspect_ratio, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_settings, project_render_settings, VARIANT_t);
		DefineObjectMember(ID_app, M_project_tempo, project_tempo, VARIANT_t);
		DefineObjectMember(ID_app, M_project_grid_rows, project_grid_rows, VARIANT_t);
		DefineObjectMember(ID_app, M_project_grid_columns, project_grid_columns, VARIANT_t);
		DefineObjectMember(ID_app, M_app_update_step, app_update_step, REAL_t);
		DefineObjectMember(ID_app, M_project_path_tl_array, project_path_tl_array, ARRAY_t);
		DefineObjectMember(ID_app, M_project_use_path_tl_array, project_use_path_tl_array, ARRAY_t);
		DefineObjectMember(ID_app, M_cam_work_focus, cam_work_focus, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_focus_last, cam_work_focus_last, VECTOR_t);
		DefineObjectMember(ID_app, M_cam_work_focus_tl, cam_work_focus_tl, INTEGER_t);
		DefineObjectMember(ID_app, M_cam_work_jump, cam_work_jump, BOOLEAN_t);
		DefineObjectMember(ID_app, M_cam_work_angle_xy, cam_work_angle_xy, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_angle_goal_xy, cam_work_angle_goal_xy, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_angle_z, cam_work_angle_z, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_angle_goal_z, cam_work_angle_goal_z, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_roll, cam_work_roll, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_zoom, cam_work_zoom, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_zoom_goal, cam_work_zoom_goal, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_angle_look_xy, cam_work_angle_look_xy, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_angle_look_z, cam_work_angle_look_z, VARIANT_t);
		DefineObjectMember(ID_app, M_cam_work_angle_look_off_xy, cam_work_angle_look_off_xy, REAL_t);
		DefineObjectMember(ID_app, M_cam_work_angle_look_off_z, cam_work_angle_look_off_z, REAL_t);
		DefineObjectMember(ID_app, M_cam_work_from, cam_work_from, VECTOR_t);
		DefineObjectMember(ID_app, M_project_render_samples, project_render_samples, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_ssao, project_render_ssao, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_ssao_radius, project_render_ssao_radius, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_ssao_power, project_render_ssao_power, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_ssao_color, project_render_ssao_color, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_shadows, project_render_shadows, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_shadows_sun_buffer_size, project_render_shadows_sun_buffer_size, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_shadows_spot_buffer_size, project_render_shadows_spot_buffer_size, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_shadows_point_buffer_size, project_render_shadows_point_buffer_size, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_shadows_transparent, project_render_shadows_transparent, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_subsurface_samples, project_render_subsurface_samples, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_subsurface_highlight, project_render_subsurface_highlight, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_subsurface_highlight_strength, project_render_subsurface_highlight_strength, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_indirect, project_render_indirect, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_indirect_precision, project_render_indirect_precision, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_indirect_blur_radius, project_render_indirect_blur_radius, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_indirect_strength, project_render_indirect_strength, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_reflections, project_render_reflections, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_reflections_precision, project_render_reflections_precision, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_reflections_thickness, project_render_reflections_thickness, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_reflections_fade_amount, project_render_reflections_fade_amount, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_glow, project_render_glow, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_glow_radius, project_render_glow_radius, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_glow_intensity, project_render_glow_intensity, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_glow_falloff, project_render_glow_falloff, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_glow_falloff_radius, project_render_glow_falloff_radius, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_glow_falloff_intensity, project_render_glow_falloff_intensity, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_aa, project_render_aa, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_aa_power, project_render_aa_power, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_texture_filtering, project_render_texture_filtering, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_transparent_block_texture_filtering, project_render_transparent_block_texture_filtering, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_texture_filtering_level, project_render_texture_filtering_level, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_alpha_mode, project_render_alpha_mode, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_tonemapper, project_render_tonemapper, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_exposure, project_render_exposure, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_gamma, project_render_gamma, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_material_maps, project_render_material_maps, VARIANT_t);
		DefineObjectMember(ID_app, M_project_bend_style, project_bend_style, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_opaque_leaves, project_render_opaque_leaves, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_liquid_animation, project_render_liquid_animation, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_water_reflections, project_render_water_reflections, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_block_emissive, project_render_block_emissive, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_block_subsurface, project_render_block_subsurface, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_glint_speed, project_render_glint_speed, VARIANT_t);
		DefineObjectMember(ID_app, M_project_render_glint_strength, project_render_glint_strength, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_show, background_image_show, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_type, background_image_type, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_stretch, background_image_stretch, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_box_mapped, background_image_box_mapped, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_rotation, background_image_rotation, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_sun_angle, background_sky_sun_angle, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_sun_scale, background_sky_sun_scale, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_moon_phase, background_sky_moon_phase, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_moon_angle, background_sky_moon_angle, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_moon_scale, background_sky_moon_scale, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_time, background_sky_time, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_rotation, background_sky_rotation, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sunlight_strength, background_sunlight_strength, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sunlight_angle, background_sunlight_angle, VARIANT_t);
		DefineObjectMember(ID_app, M_background_twilight, background_twilight, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_show, background_sky_clouds_show, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_mode, background_sky_clouds_mode, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_speed, background_sky_clouds_speed, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_height, background_sky_clouds_height, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_size, background_sky_clouds_size, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_thickness, background_sky_clouds_thickness, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_offset, background_sky_clouds_offset, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_show, background_ground_show, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_slot_material, background_ground_slot_material, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ground_tex_material_prev, background_ground_tex_material_prev, VARIANT_t);
		DefineObjectMember(ID_app, M_background_biome, background_biome, VARIANT_t);
		DefineObjectMember(ID_app, M_background_biome_prev, background_biome_prev, VARIANT_t);
		DefineObjectMember(ID_app, M_background_grass_color, background_grass_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_foliage_color, background_foliage_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_water_color, background_water_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_leaves_oak_color, background_leaves_oak_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_leaves_spruce_color, background_leaves_spruce_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_leaves_birch_color, background_leaves_birch_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_leaves_jungle_color, background_leaves_jungle_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_leaves_acacia_color, background_leaves_acacia_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_leaves_dark_oak_color, background_leaves_dark_oak_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_leaves_mangrove_color, background_leaves_mangrove_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_color, background_sky_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_color, background_sky_clouds_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sunlight_color, background_sunlight_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_ambient_color, background_ambient_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_night_color, background_night_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_show, background_fog_show, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_sky, background_fog_sky, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_color_custom, background_fog_color_custom, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_color, background_fog_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_custom_object_color, background_fog_custom_object_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_object_color, background_fog_object_color, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_distance, background_fog_distance, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_size, background_fog_size, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_height, background_fog_height, VARIANT_t);
		DefineObjectMember(ID_app, M_background_wind, background_wind, VARIANT_t);
		DefineObjectMember(ID_app, M_background_wind_speed, background_wind_speed, VARIANT_t);
		DefineObjectMember(ID_app, M_background_wind_strength, background_wind_strength, VARIANT_t);
		DefineObjectMember(ID_app, M_background_wind_direction, background_wind_direction, VARIANT_t);
		DefineObjectMember(ID_app, M_background_wind_directional_speed, background_wind_directional_speed, VARIANT_t);
		DefineObjectMember(ID_app, M_background_wind_directional_strength, background_wind_directional_strength, VARIANT_t);
		DefineObjectMember(ID_app, M_background_texture_animation_speed, background_texture_animation_speed, VARIANT_t);
		DefineObjectMember(ID_app, M_background_sunlight_color_final, background_sunlight_color_final, INTEGER_t);
		DefineObjectMember(ID_app, M_background_ambient_color_final, background_ambient_color_final, INTEGER_t);
		DefineObjectMember(ID_app, M_background_fog_color_final, background_fog_color_final, VARIANT_t);
		DefineObjectMember(ID_app, M_background_fog_object_color_final, background_fog_object_color_final, VARIANT_t);
		DefineObjectMember(ID_app, M_background_night_alpha, background_night_alpha, REAL_t);
		DefineObjectMember(ID_app, M_background_sunset_alpha, background_sunset_alpha, REAL_t);
		DefineObjectMember(ID_app, M_background_sunrise_alpha, background_sunrise_alpha, REAL_t);
		DefineObjectMember(ID_app, M_background_sky_color_final, background_sky_color_final, INTEGER_t);
		DefineObjectMember(ID_app, M_background_clouds_alpha, background_clouds_alpha, REAL_t);
		DefineObjectMember(ID_app, M_background_sky_clouds_final, background_sky_clouds_final, INTEGER_t);
		DefineObjectMember(ID_app, M_background_time, background_time, REAL_t);
		DefineObjectMember(ID_app, M_background_time_prev, background_time_prev, REAL_t);
		DefineObjectMember(ID_app, M_setting_minecraft_assets_version, setting_minecraft_assets_version, STRING_t);
		DefineObjectMember(ID_app, M_setting_minecraft_assets_new_version, setting_minecraft_assets_new_version, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_minecraft_assets_new_format, setting_minecraft_assets_new_format, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_minecraft_assets_new_changes, setting_minecraft_assets_new_changes, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_minecraft_assets_new_image, setting_minecraft_assets_new_image, STRING_t);
		DefineObjectMember(ID_app, M_closed_toast_list, closed_toast_list, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_advanced_mode, setting_advanced_mode, REAL_t);
		DefineObjectMember(ID_app, M_setting_project_folder, setting_project_folder, STRING_t);
		DefineObjectMember(ID_app, M_setting_backup, setting_backup, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_backup_amount, setting_backup_amount, REAL_t);
		DefineObjectMember(ID_app, M_setting_spawn_cameras, setting_spawn_cameras, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_unlimited_values, setting_unlimited_values, REAL_t);
		DefineObjectMember(ID_app, M_setting_scenery_remove_edges, setting_scenery_remove_edges, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_watermark_custom, setting_watermark_custom, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_watermark_fn, setting_watermark_fn, STRING_t);
		DefineObjectMember(ID_app, M_setting_watermark_halign, setting_watermark_halign, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_watermark_valign, setting_watermark_valign, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_watermark_padding, setting_watermark_padding, REAL_t);
		DefineObjectMember(ID_app, M_setting_watermark_scale, setting_watermark_scale, REAL_t);
		DefineObjectMember(ID_app, M_setting_watermark_opacity, setting_watermark_opacity, REAL_t);
		DefineObjectMember(ID_app, M_setting_language_filename, setting_language_filename, STRING_t);
		DefineObjectMember(ID_app, M_setting_theme, setting_theme, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_accent, setting_accent, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_accent_custom, setting_accent_custom, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_timeline_autoscroll, setting_timeline_autoscroll, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_timeline_show_markers, setting_timeline_show_markers, BOOLEAN_t);
		DefineObjectMember(ID_app, M_setting_interface_compact, setting_interface_compact, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_timeline_compact, setting_timeline_compact, REAL_t);
		DefineObjectMember(ID_app, M_setting_reduced_motion, setting_reduced_motion, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_timeline_select_jump, setting_timeline_select_jump, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_timeline_frame_snap, setting_timeline_frame_snap, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_z_is_up, setting_z_is_up, REAL_t);
		DefineObjectMember(ID_app, M_setting_separate_tool_modes, setting_separate_tool_modes, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_show_shortcuts_bar, setting_show_shortcuts_bar, BOOLEAN_t);
		DefineObjectMember(ID_app, M_setting_gizmos_face_camera, setting_gizmos_face_camera, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_fade_gizmos, setting_fade_gizmos, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_camera_lock_mouse, setting_camera_lock_mouse, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_place_new, setting_place_new, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_interface_scale, setting_interface_scale, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_interface_scale_auto, setting_interface_scale_auto, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_snap, setting_snap, REAL_t);
		DefineObjectMember(ID_app, M_setting_snap_absolute, setting_snap_absolute, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_snap_size_position, setting_snap_size_position, REAL_t);
		DefineObjectMember(ID_app, M_setting_snap_size_rotation, setting_snap_size_rotation, REAL_t);
		DefineObjectMember(ID_app, M_setting_snap_size_scale, setting_snap_size_scale, REAL_t);
		DefineObjectMember(ID_app, M_setting_move_speed, setting_move_speed, REAL_t);
		DefineObjectMember(ID_app, M_setting_look_sensitivity, setting_look_sensitivity, REAL_t);
		DefineObjectMember(ID_app, M_setting_fast_modifier, setting_fast_modifier, REAL_t);
		DefineObjectMember(ID_app, M_setting_slow_modifier, setting_slow_modifier, REAL_t);
		DefineObjectMember(ID_app, M_setting_world_import_filter_enabled, setting_world_import_filter_enabled, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_world_import_filter_mode, setting_world_import_filter_mode, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_world_import_unload_regions, setting_world_import_unload_regions, VARIANT_t);
		DefineObjectMember(ID_app, M_select_kf_amount, select_kf_amount, REAL_t);
		DefineObjectMember(ID_app, M_select_kf_single, select_kf_single, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_tool_scale, setting_tool_scale, BOOLEAN_t);
		DefineObjectMember(ID_app, M_setting_tool_move, setting_tool_move, VARIANT_t);
		DefineObjectMember(ID_app, M_popup, popup, INTEGER_t);
		DefineObjectMember(ID_app, M_window_busy, window_busy, VARIANT_t);
		DefineObjectMember(ID_app, M_window_focus, window_focus, VARIANT_t);
		DefineObjectMember(ID_app, M_popup_ani_type, popup_ani_type, STRING_t);
		DefineObjectMember(ID_app, M_mouse_left, mouse_left, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_left_pressed, mouse_left_pressed, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_left_double_pressed, mouse_left_double_pressed, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_left_released, mouse_left_released, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_right, mouse_right, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_right_pressed, mouse_right_pressed, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_right_released, mouse_right_released, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_middle, mouse_middle, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_middle_pressed, mouse_middle_pressed, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_click_count, mouse_click_count, INTEGER_t);
		DefineObjectMember(ID_app, M_recent_add_wait, recent_add_wait, BOOLEAN_t);
		DefineObjectMember(ID_app, M_toast_list, toast_list, INTEGER_t);
		DefineObjectMember(ID_app, M_toast_amount, toast_amount, INTEGER_t);
		DefineObjectMember(ID_app, M_toast_last, toast_last, INTEGER_t);
		DefineObjectMember(ID_app, M_tree_array, tree_array, VARIANT_t);
		DefineObjectMember(ID_app, M_background_loaded, background_loaded, BOOLEAN_t);
		DefineObjectMember(ID_app, M_loaded, loaded, BOOLEAN_t);
		DefineObjectMember(ID_app, M_background_ground_legacy_name, background_ground_legacy_name, VARIANT_t);
		DefineObjectMember(ID_app, M_background_image_box, background_image_box, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_ani, popup_ani, VARIANT_t);
		DefineObjectMember(ID_app, M_window_width, window_width, REAL_t);
		DefineObjectMember(ID_app, M_content_x, content_x, VARIANT_t);
		DefineObjectMember(ID_app, M_content_y, content_y, VARIANT_t);
		DefineObjectMember(ID_app, M_content_width, content_width, VARIANT_t);
		DefineObjectMember(ID_app, M_content_height, content_height, VARIANT_t);
		DefineObjectMember(ID_app, M_spr_startupasset_gradient, spr_startupasset_gradient, INTEGER_t);
		DefineObjectMember(ID_app, M_spr_pattern_left, spr_pattern_left, INTEGER_t);
		DefineObjectMember(ID_app, M_spr_load_assets, spr_load_assets, INTEGER_t);
		DefineObjectMember(ID_app, M_font_splash_bold_big, font_splash_bold_big, INTEGER_t);
		DefineObjectMember(ID_app, M_font_splash_bold, font_splash_bold, INTEGER_t);
		DefineObjectMember(ID_app, M_font_splash_bold_secondary, font_splash_bold_secondary, INTEGER_t);
		DefineObjectMember(ID_app, M_font_subheading, font_subheading, INTEGER_t);
		DefineObjectMember(ID_app, M_font_heading_big, font_heading_big, INTEGER_t);
		DefineObjectMember(ID_app, M_spr_dropshadow, spr_dropshadow, INTEGER_t);
		DefineObjectMember(ID_app, M_content_mouseon, content_mouseon, BOOLEAN_t);
		DefineObjectMember(ID_app, M_dx, dx, VARIANT_t);
		DefineObjectMember(ID_app, M_dy, dy, VARIANT_t);
		DefineObjectMember(ID_app, M_dw, dw, VARIANT_t);
		DefineObjectMember(ID_app, M_dh, dh, VARIANT_t);
		DefineObjectMember(ID_app, M_new_assets_image_texture, new_assets_image_texture, INTEGER_t);
		DefineObjectMember(ID_app, M_new_assets_version, new_assets_version, STRING_t);
		DefineObjectMember(ID_app, M_font_heading, font_heading, INTEGER_t);
		DefineObjectMember(ID_app, M_font_value, font_value, INTEGER_t);
		DefineObjectMember(ID_app, M_new_assets_stage, new_assets_stage, STRING_t);
		DefineObjectMember(ID_app, M_tab_control_h, tab_control_h, REAL_t);
		DefineObjectMember(ID_app, M_tab_collumns, tab_collumns, VARIANT_t);
		DefineObjectMember(ID_app, M_tab_collumns_width, tab_collumns_width, VARIANT_t);
		DefineObjectMember(ID_app, M_tab_collumns_count, tab_collumns_count, VARIANT_t);
		DefineObjectMember(ID_app, M_tab_collumns_start_x, tab_collumns_start_x, VARIANT_t);
		DefineObjectMember(ID_app, M_tab_collumns_index, tab_collumns_index, REAL_t);
		DefineObjectMember(ID_app, M_new_assets_download_progress, new_assets_download_progress, REAL_t);
		DefineObjectMember(ID_app, M_tab_collapse, tab_collapse, BOOLEAN_t);
		DefineObjectMember(ID_app, M_font_button, font_button, INTEGER_t);
		DefineObjectMember(ID_app, M_mouse_cursor, mouse_cursor, INTEGER_t);
		DefineObjectMember(ID_app, M_new_assets_format, new_assets_format, VARIANT_t);
		DefineObjectMember(ID_app, M_http_download_assets_file, http_download_assets_file, INTEGER_t);
		DefineObjectMember(ID_app, M_tip_show, tip_show, BOOLEAN_t);
		DefineObjectMember(ID_app, M_alarm, alarm, ARRAY_t);
		DefineObjectMember(ID_app, M_dy_start, dy_start, VARIANT_t);
		DefineObjectMember(ID_app, M_new_assets_scroll, new_assets_scroll, INTEGER_t);
		DefineObjectMember(ID_app, M_new_assets_changes_lines, new_assets_changes_lines, ARRAY_t);
		DefineObjectMember(ID_app, M_window_scroll_focus, window_scroll_focus, STRING_t);
		DefineObjectMember(ID_app, M_window_scroll_focus_prev, window_scroll_focus_prev, STRING_t);
		DefineObjectMember(ID_app, M_mouse_wheel, mouse_wheel, REAL_t);
		DefineObjectMember(ID_app, M_mouse_dx, mouse_dx, REAL_t);
		DefineObjectMember(ID_app, M_mouse_dy, mouse_dy, REAL_t);
		DefineObjectMember(ID_app, M_background_light_amount, background_light_amount, INTEGER_t);
		DefineObjectMember(ID_app, M_background_light_data, background_light_data, ARRAY_t);
		DefineObjectMember(ID_app, M_background_sun_direction, background_sun_direction, VECTOR_t);
		DefineObjectMember(ID_app, M_project_render_pass, project_render_pass, INTEGER_t);
		DefineObjectMember(ID_app, M_render_camera_colors, render_camera_colors, BOOLEAN_t);
		DefineObjectMember(ID_app, M_render_sample_noise_exists, render_sample_noise_exists, BOOLEAN_t);
		DefineObjectMember(ID_app, M_setting_wind_enable, setting_wind_enable, BOOLEAN_t);
		DefineObjectMember(ID_app, M_spr_blue_noise, spr_blue_noise, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_watermark_image, setting_watermark_image, INTEGER_t);
		DefineObjectMember(ID_app, M_spr_pattern_right, spr_pattern_right, INTEGER_t);
		DefineObjectMember(ID_app, M_font_caption, font_caption, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_mouseon, popup_mouseon, BOOLEAN_t);
		DefineObjectMember(ID_app, M_toast_mouseon, toast_mouseon, BOOLEAN_t);
		DefineObjectMember(ID_app, M_spr_logo, spr_logo, INTEGER_t);
		DefineObjectMember(ID_app, M_tip_window, tip_window, INTEGER_t);
		DefineObjectMember(ID_app, M_tip_box_x, tip_box_x, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_box_y, tip_box_y, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_text, tip_text, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_keybind, tip_keybind, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_keybind_draw, tip_keybind_draw, BOOLEAN_t);
		DefineObjectMember(ID_app, M_tip_text_keybind, tip_text_keybind, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_wrap, tip_wrap, BOOLEAN_t);
		DefineObjectMember(ID_app, M_tip_text_wrap, tip_text_wrap, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_text_array, tip_text_array, ARRAY_t);
		DefineObjectMember(ID_app, M_tip_w, tip_w, REAL_t);
		DefineObjectMember(ID_app, M_tip_h, tip_h, REAL_t);
		DefineObjectMember(ID_app, M_tip_x, tip_x, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_y, tip_y, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_right, tip_right, BOOLEAN_t);
		DefineObjectMember(ID_app, M_tip_arrow, tip_arrow, REAL_t);
		DefineObjectMember(ID_app, M_tip_arrow_xscale, tip_arrow_xscale, REAL_t);
		DefineObjectMember(ID_app, M_tip_force_right, tip_force_right, BOOLEAN_t);
		DefineObjectMember(ID_app, M_tip_arrow_x, tip_arrow_x, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_arrow_y, tip_arrow_y, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_arrow_yscale, tip_arrow_yscale, REAL_t);
		DefineObjectMember(ID_app, M_tip_location_x, tip_location_x, BOOLEAN_t);
		DefineObjectMember(ID_app, M_tip_location_y, tip_location_y, BOOLEAN_t);
		DefineObjectMember(ID_app, M_popup_switch_to, popup_switch_to, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_switch_from, popup_switch_from, INTEGER_t);
		DefineObjectMember(ID_app, M_recent_list_amount, recent_list_amount, REAL_t);
		DefineObjectMember(ID_app, M_recent_display_mode, recent_display_mode, STRING_t);
		DefineObjectMember(ID_app, M_settings_menu_sortlist, settings_menu_sortlist, VARIANT_t);
		DefineObjectMember(ID_app, M_recent_list_update, recent_list_update, BOOLEAN_t);
		DefineObjectMember(ID_app, M_recent_scrollbar, recent_scrollbar, INTEGER_t);
		DefineObjectMember(ID_app, M_recent_list_display, recent_list_display, INTEGER_t);
		DefineObjectMember(ID_app, M_spr_missing_thumbnail, spr_missing_thumbnail, INTEGER_t);
		DefineObjectMember(ID_app, M_recent_sort_mode, recent_sort_mode, VARIANT_t);
		DefineObjectMember(ID_app, M_spr_jonathan_splash, spr_jonathan_splash, INTEGER_t);
		DefineObjectMember(ID_app, M_popup_block_ani, popup_block_ani, VARIANT_t);
		DefineObjectMember(ID_app, M_popup_block_ani_ease, popup_block_ani_ease, STRING_t);
		DefineObjectMember(ID_app, M_world_import_world_root, world_import_world_root, STRING_t);
		DefineObjectMember(ID_app, M_world_import_world_name, world_import_world_name, VARIANT_t);
		DefineObjectMember(ID_app, M_content_tab, content_tab, VARIANT_t);
		DefineObjectMember(ID_app, M_window_compact, window_compact, REAL_t);
		DefineObjectMember(ID_app, M_panel_compact, panel_compact, REAL_t);
		DefineObjectMember(ID_app, M_tab_show, tab_show, INTEGER_t);
		DefineObjectMember(ID_app, M_tab_close, tab_close, INTEGER_t);
		DefineObjectMember(ID_app, M_textbox_key_delay, textbox_key_delay, ARRAY_t);
		DefineObjectMember(ID_app, M_realmousepos, realmousepos, VARIANT_t);
		DefineObjectMember(ID_app, M_parent, parent, VARIANT_t);
		DefineObjectMember(ID_app, M_part_of, part_of, VARIANT_t);
		DefineObjectMember(ID_app, M_display_name, display_name, VARIANT_t);
		DefineObjectMember(ID_app, M_tree_extend, tree_extend, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_x, menu_x, VARIANT_t);
		DefineObjectMember(ID_app, M_menu_y, menu_y, VARIANT_t);
		DefineObjectMember(ID_app, M_world_import_dimension, world_import_dimension, STRING_t);
		DefineObjectMember(ID_app, M_backup_text_ani, backup_text_ani, REAL_t);
		DefineObjectMember(ID_app, M_mouse_still, mouse_still, INTEGER_t);
		DefineObjectMember(ID_app, M_mouseon, mouseon, BOOLEAN_t);
		DefineObjectMember(ID_app, M_settings_menu_view, settings_menu_view, INTEGER_t);
		DefineObjectMember(ID_app, M_place_tl, place_tl, INTEGER_t);
		DefineObjectMember(ID_app, M_setting_tool_transform, setting_tool_transform, BOOLEAN_t);
		DefineObjectMember(ID_app, M_setting_tool_rotate, setting_tool_rotate, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_wrap_x, mouse_wrap_x, INTEGER_t);
		DefineObjectMember(ID_app, M_mouse_wrap_y, mouse_wrap_y, INTEGER_t);
		DefineObjectMember(ID_app, M_view_control_plane_mouse, view_control_plane_mouse, VECTOR_t);
		DefineObjectMember(ID_app, M_view_control_plane_offset, view_control_plane_offset, VECTOR_t);
		DefineObjectMember(ID_app, M_dragger_multiplier, dragger_multiplier, REAL_t);
		DefineObjectMember(ID_app, M_dragger_snap, dragger_snap, REAL_t);
		DefineObjectMember(ID_app, M_mouse_previous_x, mouse_previous_x, VARIANT_t);
		DefineObjectMember(ID_app, M_mouse_previous_y, mouse_previous_y, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_tool_bend, setting_tool_bend, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_current_x, mouse_current_x, VARIANT_t);
		DefineObjectMember(ID_app, M_mouse_current_y, mouse_current_y, VARIANT_t);
		DefineObjectMember(ID_app, M_place_view_mouse, place_view_mouse, VARIANT_t);
		DefineObjectMember(ID_app, M_mouse_move, mouse_move, REAL_t);
		DefineObjectMember(ID_app, M_place_tl_render, place_tl_render, BOOLEAN_t);
		DefineObjectMember(ID_app, M_place_view_pos, place_view_pos, VARIANT_t);
		DefineObjectMember(ID_app, M_setting_tool_select, setting_tool_select, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_click_x, mouse_click_x, INTEGER_t);
		DefineObjectMember(ID_app, M_mouse_click_y, mouse_click_y, INTEGER_t);
		DefineObjectMember(ID_app, M_content_direction, content_direction, INTEGER_t);
		DefineObjectMember(ID_app, M_tab, tab, VARIANT_t);
		DefineObjectMember(ID_app, M_dx_start, dx_start, VARIANT_t);
		DefineObjectMember(ID_app, M_dw_start, dw_start, VARIANT_t);
		DefineObjectMember(ID_app, M_dh_start, dh_start, VARIANT_t);
		DefineObjectMember(ID_app, M_spr_chevron_ani, spr_chevron_ani, INTEGER_t);
		DefineObjectMember(ID_app, M_spr_bench_example, spr_bench_example, INTEGER_t);
		DefineObjectMember(ID_app, M_ui_large_height, ui_large_height, REAL_t);
		DefineObjectMember(ID_app, M_ui_small_height, ui_small_height, REAL_t);
		DefineObjectMember(ID_app, M_font_digits, font_digits, INTEGER_t);
		DefineObjectMember(ID_app, M_sortlist_resize, sortlist_resize, INTEGER_t);
		DefineObjectMember(ID_app, M_sortlist_resize_column, sortlist_resize_column, INTEGER_t);
		DefineObjectMember(ID_app, M_sortlist_resize_column_x, sortlist_resize_column_x, REAL_t);
		DefineObjectMember(ID_app, M_listh, listh, REAL_t);
		DefineObjectMember(ID_app, M_place_spawn, place_spawn, BOOLEAN_t);
		DefineObjectMember(ID_app, M_update, update, BOOLEAN_t);
		DefineObjectMember(ID_app, M_toast_script, toast_script, VARIANT_t);
		DefineObjectMember(ID_app, M_toast_script_value, toast_script_value, VARIANT_t);
		DefineObjectMember(ID_app, M_popup_move_offset_x, popup_move_offset_x, REAL_t);
		DefineObjectMember(ID_app, M_popup_move_offset_y, popup_move_offset_y, REAL_t);
		DefineObjectMember(ID_app, M_tip_alpha, tip_alpha, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_final_x, tip_final_x, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_final_y, tip_final_y, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_arrow_final_x, tip_arrow_final_x, VARIANT_t);
		DefineObjectMember(ID_app, M_tip_arrow_final_y, tip_arrow_final_y, VARIANT_t);
		DefineObjectMember(ID_app, M_debug_info, debug_info, BOOLEAN_t);
		DefineObjectMember(ID_app, M_mouse_click_timer, mouse_click_timer, REAL_t);
		DefineObjectMember(ID_app, M_place_cam_work_from, place_cam_work_from, VECTOR_t);
		DefineObjectMember(ID_app, M_place_cam_work_angle_look_xy, place_cam_work_angle_look_xy, VARIANT_t);
		DefineObjectMember(ID_app, M_place_cam_work_angle_look_z, place_cam_work_angle_look_z, VARIANT_t);
		DefineObjectMember(ID_app, M_recent_thumbnail_width, recent_thumbnail_width, VARIANT_t);
		DefineObjectMember(ID_app, M_recent_thumbnail_height, recent_thumbnail_height, VARIANT_t);
		DefineObjectMember(ID_app, M_update_interface_wait, update_interface_wait, BOOLEAN_t);
		DefineObjectMember(ID_app, M_assets_http_image, assets_http_image, INTEGER_t);
		DefineObjectMember(ID_app, M_http_download_assets_zip, http_download_assets_zip, INTEGER_t);
		DefineObjectMember(ID_app, M_new_assets_image, new_assets_image, VARIANT_t);
		DefineObjectMember(ID_app, M_http_alert_news, http_alert_news, INTEGER_t);
		DefineObjectMember(ID_app, M_http_downloadskin, http_downloadskin, INTEGER_t);
		DefineObjectMember(ID_app, M_startup_error, startup_error, VARIANT_t);
		DefineObjectMember(ID_app, M_level, level, VARIANT_t);
		DefineObjectMember(ID_app, M_indent_level, indent_level, REAL_t);
		DefineObjectMember(ID_app, M_tree_contents, tree_contents, ARRAY_t);
		DefineObjectMember(ID_app, M_color_tag, color_tag, VARIANT_t);
		DefineObjectMember(ID_app, M_color_tag_inherit, color_tag_inherit, VARIANT_t);
		DefineObjectMember(ID_app, M_type, type, VARIANT_t);
		DefineObjectMember(ID_app, M_exportmovie_current_sound, exportmovie_current_sound, INTEGER_t);
	}
	
	void obj_bench_settings::InitMembers()
	{
		if (memberMap.contains(ID_obj_bench_settings))
			return;
		
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex, shape_tex, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_material, shape_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_normal, shape_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_posx, posx, REAL_t);
		DefineObjectMember(ID_obj_bench_settings, M_posy, posy, REAL_t);
		DefineObjectMember(ID_obj_bench_settings, M_height, height, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_height_goal, height_goal, REAL_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_name, model_name, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_state, model_state, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_part_name, model_part_name, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_file, model_file, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_texture_name_map, model_texture_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_texture_material_name_map, model_texture_material_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_tex_normal_name_map, model_tex_normal_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_shape_texture_name_map, model_shape_texture_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_shape_texture_material_name_map, model_shape_texture_material_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_shape_tex_normal_name_map, model_shape_tex_normal_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_hide_list, model_hide_list, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_shape_hide_list, model_shape_hide_list, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_color_name_map, model_color_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pattern_type, pattern_type, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model, model, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_use_blend_color, model_use_blend_color, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_blend_color, model_blend_color, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_blend_color_default, model_blend_color_default, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_color_map, model_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_armor_array, armor_array, ARRAY_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_part, model_part, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_shape_alpha_map, model_shape_alpha_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_shape_vbuffer_map, model_shape_vbuffer_map, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_part_of, part_of, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_tex, model_tex, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_state, block_state, ARRAY_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_constant, pc_spawn_constant, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_amount, pc_spawn_amount, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_region_use, pc_spawn_region_use, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_region_type, pc_spawn_region_type, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_region_path, pc_spawn_region_path, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_region_sphere_radius, pc_spawn_region_sphere_radius, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_region_cube_size, pc_spawn_region_cube_size, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_region_box_size, pc_spawn_region_box_size, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_spawn_region_path_radius, pc_spawn_region_path_radius, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_bounding_box_type, pc_bounding_box_type, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_bounding_box_ground_z, pc_bounding_box_ground_z, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_bounding_box_custom_start, pc_bounding_box_custom_start, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_bounding_box_custom_end, pc_bounding_box_custom_end, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_bounding_box_relative, pc_bounding_box_relative, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_animation_finish, pc_destroy_at_animation_finish, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_amount, pc_destroy_at_amount, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_amount_val, pc_destroy_at_amount_val, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_time, pc_destroy_at_time, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_time_seconds, pc_destroy_at_time_seconds, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_time_israndom, pc_destroy_at_time_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_time_random_min, pc_destroy_at_time_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_time_random_max, pc_destroy_at_time_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_destroy_at_bounding_box, pc_destroy_at_bounding_box, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pc_type_list, pc_type_list, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_tex_material, model_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_model_tex_normal, model_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_tex, item_tex, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_tex_material, item_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_tex_normal, item_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_tex, block_tex, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_tex_material, block_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_tex_normal, block_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_text_font, text_font, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_particle_preset, particle_preset, STRING_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_type, shape_type, REAL_t);
		DefineObjectMember(ID_obj_bench_settings, M_light_type, light_type, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_preview, preview, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_char_list, char_list, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_scroll, item_scroll, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_list, block_list, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_special_block_list, special_block_list, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_bodypart_model_list, bodypart_model_list, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_particles_list, particles_list, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_name, block_name, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pattern_base_color, pattern_base_color, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pattern_pattern_list, pattern_pattern_list, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pattern_color_list, pattern_color_list, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_pattern_skin, pattern_skin, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_armor_skin_array, armor_skin_array, ARRAY_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_slot, item_slot, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_3d, item_3d, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_face_camera, item_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_bounce, item_bounce, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_spin, item_spin, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_scenery, scenery, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_repeat_enable, block_repeat_enable, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_repeat, block_repeat, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_randomize, block_randomize, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_mapped, shape_tex_mapped, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_hoffset, shape_tex_hoffset, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_voffset, shape_tex_voffset, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_hrepeat, shape_tex_hrepeat, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_vrepeat, shape_tex_vrepeat, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_hmirror, shape_tex_hmirror, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_tex_vmirror, shape_tex_vmirror, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_closed, shape_closed, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_invert, shape_invert, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_detail, shape_detail, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_face_camera, shape_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_text_3d, text_3d, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_text_face_camera, text_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_res, item_res, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_material_res, item_material_res, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_normal_res, item_normal_res, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_custom_slot, item_custom_slot, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_item_vbuffer, item_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_save_id, save_id, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_loaded, loaded, BOOLEAN_t);
		DefineObjectMember(ID_obj_bench_settings, M_creator, creator, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_display_name, display_name, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_count, count, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_rot_point, rot_point, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_load_update_tree, load_update_tree, BOOLEAN_t);
		DefineObjectMember(ID_obj_bench_settings, M_legacy_item_sheet, legacy_item_sheet, INTEGER_t);
		DefineObjectMember(ID_obj_bench_settings, M_block_vbuffer, block_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_bench_settings, M_shape_vbuffer, shape_vbuffer, VARIANT_t);
	}
	
	void obj_biome::InitMembers()
	{
		if (memberMap.contains(ID_obj_biome))
			return;
		
		DefineObjectMember(ID_obj_biome, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_biome, M_hardcoded, hardcoded, BOOLEAN_t);
		DefineObjectMember(ID_obj_biome, M_color_grass, color_grass, VARIANT_t);
		DefineObjectMember(ID_obj_biome, M_color_foliage, color_foliage, VARIANT_t);
		DefineObjectMember(ID_obj_biome, M_txy, txy, VARIANT_t);
		DefineObjectMember(ID_obj_biome, M_color_water, color_water, VARIANT_t);
		DefineObjectMember(ID_obj_biome, M_biome_base, biome_base, INTEGER_t);
		DefineObjectMember(ID_obj_biome, M_group, group, VARIANT_t);
		DefineObjectMember(ID_obj_biome, M_biome_variants, biome_variants, INTEGER_t);
		DefineObjectMember(ID_obj_biome, M_variants_extend, variants_extend, REAL_t);
		DefineObjectMember(ID_obj_biome, M_display_name, display_name, VARIANT_t);
		DefineObjectMember(ID_obj_biome, M_selected_variant, selected_variant, REAL_t);
	}
	
	void obj_block::InitMembers()
	{
		if (memberMap.contains(ID_obj_block))
			return;
		
		DefineObjectMember(ID_obj_block, M_block_id, block_id, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_set_script, set_script, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_generate_script, generate_script, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_filename, filename, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_emissive, emissive, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_random_offset, random_offset, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_random_offset_xy, random_offset_xy, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_states_map, states_map, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_state_id_amount, state_id_amount, REAL_t);
		DefineObjectMember(ID_obj_block, M_file, file, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_default_state, default_state, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_default_state_id, default_state_id, REAL_t);
		DefineObjectMember(ID_obj_block, M_subsurface, subsurface, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_wind_axis, wind_axis, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_wind_zmin, wind_zmin, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_waterlogged, waterlogged, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_require_models, require_models, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_timeline, timeline, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_model_double, model_double, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_model_name, tl_model_name, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_model_state, tl_model_state, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_model_state_amount, tl_model_state_amount, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_tl_has_model_state, tl_has_model_state, BOOLEAN_t);
		DefineObjectMember(ID_obj_block, M_tl_has_text, tl_has_text, BOOLEAN_t);
		DefineObjectMember(ID_obj_block, M_tl_text_front_position, tl_text_front_position, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_text_front_rotation, tl_text_front_rotation, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_text_front_scale, tl_text_front_scale, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_text_back_position, tl_text_back_position, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_text_back_rotation, tl_text_back_rotation, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_text_back_scale, tl_text_back_scale, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_pattern_type, tl_pattern_type, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_rot_point, tl_rot_point, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_rot_point_state_amount, tl_rot_point_state_amount, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_tl_rot_point_state, tl_rot_point_state, ARRAY_t);
		DefineObjectMember(ID_obj_block, M_tl_position, tl_position, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_position_state_amount, tl_position_state_amount, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_tl_position_state, tl_position_state, ARRAY_t);
		DefineObjectMember(ID_obj_block, M_tl_rotation, tl_rotation, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_tl_rotation_state_amount, tl_rotation_state_amount, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_tl_rotation_state, tl_rotation_state, ARRAY_t);
		DefineObjectMember(ID_obj_block, M_multithreaded, multithreaded, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_mc_ids, mc_ids, ARRAY_t);
		DefineObjectMember(ID_obj_block, M_id_state_vars_map, id_state_vars_map, INTEGER_t);
		DefineObjectMember(ID_obj_block, M_state_id_model_obj, state_id_model_obj, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_state_id_emissive, state_id_emissive, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_state_id_random_offset, state_id_random_offset, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_state_id_random_offset_xy, state_id_random_offset_xy, VARIANT_t);
		DefineObjectMember(ID_obj_block, M_state_id_subsurface, state_id_subsurface, INTEGER_t);
	}
	
	void obj_block_load_element::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_load_element))
			return;
		
		DefineObjectMember(ID_obj_block_load_element, M_from, from, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_element, M_to, to, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_element, M_size, size, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_element, M_volume, volume, REAL_t);
		DefineObjectMember(ID_obj_block_load_element, M_matrix, matrix, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_element, M_rotated, rotated, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_load_element, M_face_render, face_render, ARRAY_t);
		DefineObjectMember(ID_obj_block_load_element, M_face_has_uv, face_has_uv, ARRAY_t);
		DefineObjectMember(ID_obj_block_load_element, M_face_uv_from, face_uv_from, ARRAY_t);
		DefineObjectMember(ID_obj_block_load_element, M_face_uv_to, face_uv_to, ARRAY_t);
		DefineObjectMember(ID_obj_block_load_element, M_face_texture, face_texture, ARRAY_t);
		DefineObjectMember(ID_obj_block_load_element, M_face_rotation, face_rotation, ARRAY_t);
		DefineObjectMember(ID_obj_block_load_element, M_id, id, VARIANT_t);
	}
	
	void obj_block_load_model_file::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_load_model_file))
			return;
		
		DefineObjectMember(ID_obj_block_load_model_file, M_texture_map, texture_map, INTEGER_t);
		DefineObjectMember(ID_obj_block_load_model_file, M_element_amount, element_amount, INTEGER_t);
		DefineObjectMember(ID_obj_block_load_model_file, M_element, element, ARRAY_t);
		DefineObjectMember(ID_obj_block_load_model_file, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_model_file, M_parent, parent, VARIANT_t);
	}
	
	void obj_block_load_multipart_case::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_load_multipart_case))
			return;
		
		DefineObjectMember(ID_obj_block_load_multipart_case, M_model_amount, model_amount, INTEGER_t);
		DefineObjectMember(ID_obj_block_load_multipart_case, M_total_weight, total_weight, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_multipart_case, M_model_state_obj, model_state_obj, INTEGER_t);
		DefineObjectMember(ID_obj_block_load_multipart_case, M_model, model, VARIANT_t);
	}
	
	void obj_block_load_state_file::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_load_state_file))
			return;
		
		DefineObjectMember(ID_obj_block_load_state_file, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_state_file, M_state_id_map, state_id_map, INTEGER_t);
		DefineObjectMember(ID_obj_block_load_state_file, M_state_default_variant_id, state_default_variant_id, REAL_t);
		DefineObjectMember(ID_obj_block_load_state_file, M_model_preview_color_yp, model_preview_color_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_state_file, M_model_preview_alpha_yp, model_preview_alpha_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_state_file, M_model_preview_color_zp, model_preview_color_zp, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_state_file, M_model_preview_alpha_zp, model_preview_alpha_zp, VARIANT_t);
	}
	
	void obj_block_load_variant::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_load_variant))
			return;
		
		DefineObjectMember(ID_obj_block_load_variant, M_model_amount, model_amount, INTEGER_t);
		DefineObjectMember(ID_obj_block_load_variant, M_total_weight, total_weight, VARIANT_t);
		DefineObjectMember(ID_obj_block_load_variant, M_model_state_obj, model_state_obj, INTEGER_t);
		DefineObjectMember(ID_obj_block_load_variant, M_model, model, VARIANT_t);
	}
	
	void obj_block_render_element::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_render_element))
			return;
		
		DefineObjectMember(ID_obj_block_render_element, M_from, from, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_to, to, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_rotated, rotated, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_element, M_matrix, matrix, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_render, face_render, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv, face_uv, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_texture_color, face_texture_color, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_depth, face_depth, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_block_vbuffer, face_block_vbuffer, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_vbuffer, face_vbuffer, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_edge, face_edge, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_element, M_from_x, from_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_from_y, from_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_from_z, from_z, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_to_x, to_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_to_y, to_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_to_z, to_z, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_render_xp, face_render_xp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_render_xn, face_render_xn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_render_yp, face_render_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_render_yn, face_render_yn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_render_zp, face_render_zp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_render_zn, face_render_zn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_texture_color_xp, face_texture_color_xp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_depth_xp, face_depth_xp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_block_vbuffer_xp, face_block_vbuffer_xp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_vbuffer_xp, face_vbuffer_xp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_edge_xp, face_edge_xp, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_0, face_uv_xp_0, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_0_x, face_uv_xp_0_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_0_y, face_uv_xp_0_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_1, face_uv_xp_1, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_1_x, face_uv_xp_1_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_1_y, face_uv_xp_1_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_2, face_uv_xp_2, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_2_x, face_uv_xp_2_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_2_y, face_uv_xp_2_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_3, face_uv_xp_3, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_3_x, face_uv_xp_3_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xp_3_y, face_uv_xp_3_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_texture_color_xn, face_texture_color_xn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_depth_xn, face_depth_xn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_block_vbuffer_xn, face_block_vbuffer_xn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_vbuffer_xn, face_vbuffer_xn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_edge_xn, face_edge_xn, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_0, face_uv_xn_0, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_0_x, face_uv_xn_0_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_0_y, face_uv_xn_0_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_1, face_uv_xn_1, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_1_x, face_uv_xn_1_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_1_y, face_uv_xn_1_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_2, face_uv_xn_2, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_2_x, face_uv_xn_2_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_2_y, face_uv_xn_2_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_3, face_uv_xn_3, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_3_x, face_uv_xn_3_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_xn_3_y, face_uv_xn_3_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_texture_color_yp, face_texture_color_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_depth_yp, face_depth_yp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_block_vbuffer_yp, face_block_vbuffer_yp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_vbuffer_yp, face_vbuffer_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_edge_yp, face_edge_yp, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_0, face_uv_yp_0, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_0_x, face_uv_yp_0_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_0_y, face_uv_yp_0_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_1, face_uv_yp_1, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_1_x, face_uv_yp_1_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_1_y, face_uv_yp_1_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_2, face_uv_yp_2, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_2_x, face_uv_yp_2_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_2_y, face_uv_yp_2_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_3, face_uv_yp_3, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_3_x, face_uv_yp_3_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yp_3_y, face_uv_yp_3_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_texture_color_yn, face_texture_color_yn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_depth_yn, face_depth_yn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_block_vbuffer_yn, face_block_vbuffer_yn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_vbuffer_yn, face_vbuffer_yn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_edge_yn, face_edge_yn, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_0, face_uv_yn_0, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_0_x, face_uv_yn_0_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_0_y, face_uv_yn_0_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_1, face_uv_yn_1, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_1_x, face_uv_yn_1_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_1_y, face_uv_yn_1_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_2, face_uv_yn_2, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_2_x, face_uv_yn_2_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_2_y, face_uv_yn_2_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_3, face_uv_yn_3, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_3_x, face_uv_yn_3_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_yn_3_y, face_uv_yn_3_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_texture_color_zp, face_texture_color_zp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_depth_zp, face_depth_zp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_block_vbuffer_zp, face_block_vbuffer_zp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_vbuffer_zp, face_vbuffer_zp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_edge_zp, face_edge_zp, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_0, face_uv_zp_0, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_0_x, face_uv_zp_0_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_0_y, face_uv_zp_0_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_1, face_uv_zp_1, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_1_x, face_uv_zp_1_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_1_y, face_uv_zp_1_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_2, face_uv_zp_2, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_2_x, face_uv_zp_2_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_2_y, face_uv_zp_2_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_3, face_uv_zp_3, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_3_x, face_uv_zp_3_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zp_3_y, face_uv_zp_3_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_texture_color_zn, face_texture_color_zn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_depth_zn, face_depth_zn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_block_vbuffer_zn, face_block_vbuffer_zn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_vbuffer_zn, face_vbuffer_zn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_edge_zn, face_edge_zn, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_0, face_uv_zn_0, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_0_x, face_uv_zn_0_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_0_y, face_uv_zn_0_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_1, face_uv_zn_1, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_1_x, face_uv_zn_1_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_1_y, face_uv_zn_1_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_2, face_uv_zn_2, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_2_x, face_uv_zn_2_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_2_y, face_uv_zn_2_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_3, face_uv_zn_3, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_3_x, face_uv_zn_3_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_element, M_face_uv_zn_3_y, face_uv_zn_3_y, REAL_t);
	}
	
	void obj_block_render_model::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_render_model))
			return;
		
		DefineObjectMember(ID_obj_block_render_model, M_rendermodel_id, rendermodel_id, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_model, M_emissive, emissive, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_random_offset, random_offset, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_random_offset_xy, random_offset_xy, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_offset_x, offset_x, REAL_t);
		DefineObjectMember(ID_obj_block_render_model, M_offset_y, offset_y, REAL_t);
		DefineObjectMember(ID_obj_block_render_model, M_offset_z, offset_z, REAL_t);
		DefineObjectMember(ID_obj_block_render_model, M_weight, weight, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_full, face_full, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min, face_min, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_max, face_max, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_depth, face_min_depth, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_model, M_preview_color_zp, preview_color_zp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_preview_alpha_zp, preview_alpha_zp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_preview_color_yp, preview_color_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_preview_alpha_yp, preview_alpha_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_preview_tint, preview_tint, STRING_t);
		DefineObjectMember(ID_obj_block_render_model, M_element_amount, element_amount, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_model, M_element, element, ARRAY_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_full_xp, face_full_xp, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_xp, face_min_xp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_max_xp, face_max_xp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_depth_xp, face_min_depth_xp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_full_xn, face_full_xn, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_xn, face_min_xn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_max_xn, face_max_xn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_depth_xn, face_min_depth_xn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_full_yp, face_full_yp, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_yp, face_min_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_max_yp, face_max_yp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_depth_yp, face_min_depth_yp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_full_yn, face_full_yn, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_yn, face_min_yn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_max_yn, face_max_yn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_depth_yn, face_min_depth_yn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_full_zp, face_full_zp, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_zp, face_min_zp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_max_zp, face_max_zp, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_depth_zp, face_min_depth_zp, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_full_zn, face_full_zn, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_zn, face_min_zn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_max_zn, face_max_zn, VARIANT_t);
		DefineObjectMember(ID_obj_block_render_model, M_face_min_depth_zn, face_min_depth_zn, INTEGER_t);
		DefineObjectMember(ID_obj_block_render_model, M_opaque, opaque, INTEGER_t);
	}
	
	void obj_block_state::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_state))
			return;
		
		DefineObjectMember(ID_obj_block_state, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_block_state, M_value_amount, value_amount, REAL_t);
		DefineObjectMember(ID_obj_block_state, M_value_map, value_map, INTEGER_t);
		DefineObjectMember(ID_obj_block_state, M_value_id, value_id, REAL_t);
		DefineObjectMember(ID_obj_block_state, M_value_name, value_name, VARIANT_t);
		DefineObjectMember(ID_obj_block_state, M_value_filename, value_filename, ARRAY_t);
		DefineObjectMember(ID_obj_block_state, M_value_file, value_file, ARRAY_t);
		DefineObjectMember(ID_obj_block_state, M_value_emissive, value_emissive, ARRAY_t);
		DefineObjectMember(ID_obj_block_state, M_value_random_offset, value_random_offset, ARRAY_t);
		DefineObjectMember(ID_obj_block_state, M_value_random_offset_xy, value_random_offset_xy, ARRAY_t);
	}
	
	void obj_block_tl::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_tl))
			return;
		
		DefineObjectMember(ID_obj_block_tl, M_block, block, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_model_name, model_name, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_model_state, model_state, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_has_text, has_text, BOOLEAN_t);
		DefineObjectMember(ID_obj_block_tl, M_text_front, text_front, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_front_color, text_front_color, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_front_glow_color, text_front_glow_color, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_front_emissive, text_front_emissive, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_back, text_back, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_back_color, text_back_color, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_back_glow_color, text_back_glow_color, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_back_emissive, text_back_emissive, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_front_position, text_front_position, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_front_rotation, text_front_rotation, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_front_scale, text_front_scale, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_back_position, text_back_position, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_back_rotation, text_back_rotation, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_text_back_scale, text_back_scale, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_pattern_type, pattern_type, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_banner_color, banner_color, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_banner_patterns, banner_patterns, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_banner_pattern_colors, banner_pattern_colors, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_texture, texture, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_rot_point, rot_point, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_position, position, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_rotation, rotation, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl, M_variant, variant, VARIANT_t);
	}
	
	void obj_block_tl_state::InitMembers()
	{
		if (memberMap.contains(ID_obj_block_tl_state))
			return;
		
		DefineObjectMember(ID_obj_block_tl_state, M_vars, vars, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl_state, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_block_tl_state, M_state_id, state_id, ARRAY_t);
	}
	
	void obj_builder::InitMembers()
	{
		if (memberMap.contains(ID_obj_builder))
			return;
		
		DefineObjectMember(ID_obj_builder, M_sch_palette_blocks, sch_palette_blocks, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_sch_palette_stateids, sch_palette_stateids, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_sch_palette_waterlogged, sch_palette_waterlogged, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_sch_blockdata_array, sch_blockdata_array, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_sch_blockdata_ints, sch_blockdata_ints, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_sch_legacy_blocksarray, sch_legacy_blocksarray, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_sch_legacy_dataarray, sch_legacy_dataarray, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_sch_timeline_amount, sch_timeline_amount, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_sch_tileentity_list, sch_tileentity_list, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_build_size, build_size, VECTOR_t);
		DefineObjectMember(ID_obj_builder, M_build_size_x, build_size_x, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_size_y, build_size_y, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_size_xy, build_size_xy, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_size_z, build_size_z, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_size_total, build_size_total, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_size_sqrt, build_size_sqrt, REAL_t);
		DefineObjectMember(ID_obj_builder, M_build_pos_x, build_pos_x, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_pos_y, build_pos_y, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_pos_z, build_pos_z, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_edge_xp, build_edge_xp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_build_edge_xn, build_edge_xn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_build_edge_yp, build_edge_yp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_build_edge_yn, build_edge_yn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_build_edge_zp, build_edge_zp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_build_edge_zn, build_edge_zn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_build_edges, build_edges, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_build_single_block, build_single_block, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_single_stateid, build_single_stateid, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_build_multithreaded, build_multithreaded, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_build_randomize, build_randomize, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_block_obj, block_obj, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_waterlogged, block_waterlogged, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_current, block_current, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_state_id, block_state_id, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_state_id_current, block_state_id_current, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_render_model, block_render_model, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_text_front_map, block_text_front_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_text_front_color_map, block_text_front_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_text_front_glow_color_map, block_text_front_glow_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_text_front_glowing_map, block_text_front_glowing_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_text_back_map, block_text_back_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_text_back_color_map, block_text_back_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_text_back_glow_color_map, block_text_back_glow_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_text_back_glowing_map, block_text_back_glowing_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_banner_color_map, block_banner_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_banner_patterns_map, block_banner_patterns_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_banner_pattern_colors_map, block_banner_pattern_colors_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_map, block_skull_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_res_map, block_skull_res_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_texture_map, block_skull_texture_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_texture_fail, block_skull_texture_fail, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_texture_name, block_skull_texture_name, STRING_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_texture, block_skull_texture, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_download_time, block_skull_download_time, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_download_wait, block_skull_download_wait, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_texture_count, block_skull_texture_count, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_finish_count, block_skull_finish_count, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_skull_fail_count, block_skull_fail_count, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_decorated_pot_sherds_map, block_decorated_pot_sherds_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_multithreaded_skip, block_multithreaded_skip, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_block_tl_add, block_tl_add, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_block_tl_list, block_tl_list, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_color, block_color, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_file_map, file_map, VARIANT_t);
		DefineObjectMember(ID_obj_builder, M_builder_scenery, builder_scenery, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_builder_scenery_legacy, builder_scenery_legacy, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder, M_thread_list, thread_list, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_vbuffer, vbuffer, ARRAY_t);
		DefineObjectMember(ID_obj_builder, M_build_pos, build_pos, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_block_render_model_multipart, block_render_model_multipart, INTEGER_t);
		DefineObjectMember(ID_obj_builder, M_script, script, VARIANT_t);
	}
	
	void obj_builder_thread::InitMembers()
	{
		if (memberMap.contains(ID_obj_builder_thread))
			return;
		
		DefineObjectMember(ID_obj_builder_thread, M_threadid, threadid, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_size_x, build_size_x, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_size_y, build_size_y, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_size_z, build_size_z, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_size_total, build_size_total, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_size_sqrt, build_size_sqrt, REAL_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_pos, build_pos, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_pos_x, build_pos_x, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_pos_y, build_pos_y, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_pos_z, build_pos_z, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_edge_xp, build_edge_xp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_edge_xn, build_edge_xn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_edge_yp, build_edge_yp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_edge_yn, build_edge_yn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_edge_zp, build_edge_zp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_edge_zn, build_edge_zn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_builder_scenery, builder_scenery, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_builder_scenery_legacy, builder_scenery_legacy, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_pos_x, block_pos_x, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_pos_y, block_pos_y, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_pos_z, block_pos_z, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_color, block_color, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_depth_xp, block_face_min_depth_xp, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_depth_xn, block_face_min_depth_xn, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_depth_yp, block_face_min_depth_yp, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_depth_yn, block_face_min_depth_yn, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_depth_zp, block_face_min_depth_zp, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_depth_zn, block_face_min_depth_zn, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_obj, block_obj, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_waterlogged, block_waterlogged, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_current, block_current, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_state_id, block_state_id, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_state_id_current, block_state_id_current, REAL_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_render_model, block_render_model, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_render_model_multipart_map, block_render_model_multipart_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_tl_map, block_tl_map, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_vbuffer_current, block_vbuffer_current, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_vertex_wave, block_vertex_wave, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_vertex_wave_zmin, block_vertex_wave_zmin, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_vertex_wave_zmax, block_vertex_wave_zmax, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_vertex_emissive, block_vertex_emissive, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_vertex_subsurface, block_vertex_subsurface, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_vertex_rgb, block_vertex_rgb, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_vertex_alpha, block_vertex_alpha, REAL_t);
		DefineObjectMember(ID_obj_builder_thread, M_build_size_xy, build_size_xy, INTEGER_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_multithreaded_skip, block_multithreaded_skip, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_full_xp, block_face_full_xp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_xp, block_face_min_xp, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_max_xp, block_face_max_xp, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_full_xn, block_face_full_xn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_xn, block_face_min_xn, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_max_xn, block_face_max_xn, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_full_yp, block_face_full_yp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_yp, block_face_min_yp, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_max_yp, block_face_max_yp, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_full_yn, block_face_full_yn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_yn, block_face_min_yn, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_max_yn, block_face_max_yn, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_full_zp, block_face_full_zp, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_zp, block_face_min_zp, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_max_zp, block_face_max_zp, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_full_zn, block_face_full_zn, BOOLEAN_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_min_zn, block_face_min_zn, VARIANT_t);
		DefineObjectMember(ID_obj_builder_thread, M_block_face_max_zn, block_face_max_zn, VARIANT_t);
	}
	
	void obj_category::InitMembers()
	{
		if (memberMap.contains(ID_obj_category))
			return;
		
		DefineObjectMember(ID_obj_category, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_category, M_icon, icon, VARIANT_t);
		DefineObjectMember(ID_obj_category, M_script, script, VARIANT_t);
		DefineObjectMember(ID_obj_category, M_show, show, REAL_t);
		DefineObjectMember(ID_obj_category, M_enabled, enabled, BOOLEAN_t);
		DefineObjectMember(ID_obj_category, M_tbx_name, tbx_name, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_author, tbx_author, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_description, tbx_description, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_video_size_custom_width, tbx_video_size_custom_width, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_video_size_custom_height, tbx_video_size_custom_height, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_tempo, tbx_tempo, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ssao_radius, tbx_ssao_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ssao_power, tbx_ssao_power, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_samples, tbx_samples, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_render_distance, tbx_render_distance, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_subsurface_samples, tbx_subsurface_samples, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_subsurface_highlight, tbx_subsurface_highlight, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_subsurface_highlight_strength, tbx_subsurface_highlight_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_indirect_precision, tbx_indirect_precision, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_indirect_blur_radius, tbx_indirect_blur_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_indirect_strength, tbx_indirect_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_reflections_precision, tbx_reflections_precision, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_reflections_thickness, tbx_reflections_thickness, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_reflections_fade_amount, tbx_reflections_fade_amount, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_glow_radius, tbx_glow_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_glow_intensity, tbx_glow_intensity, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_glow_falloff_radius, tbx_glow_falloff_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_glow_falloff_intensity, tbx_glow_falloff_intensity, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_aa_power, tbx_aa_power, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_block_emissive, tbx_block_emissive, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_glint_speed, tbx_glint_speed, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_glint_strength, tbx_glint_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_block_subsurface_radius, tbx_block_subsurface_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_texture_filtering_level, tbx_texture_filtering_level, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_exposure, tbx_exposure, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_gamma, tbx_gamma, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_preview, preview, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_list, list, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_repeat_x, tbx_repeat_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_repeat_y, tbx_repeat_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_repeat_z, tbx_repeat_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shape_detail, tbx_shape_detail, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shape_tex_hoffset, tbx_shape_tex_hoffset, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shape_tex_voffset, tbx_shape_tex_voffset, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shape_tex_hrepeat, tbx_shape_tex_hrepeat, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shape_tex_vrepeat, tbx_shape_tex_vrepeat, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_background_rotation, tbx_background_rotation, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_time, tbx_sky_time, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_rotation, tbx_sky_rotation, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_sun_angle, tbx_sky_sun_angle, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_sun_scale, tbx_sky_sun_scale, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_moon_angle, tbx_sky_moon_angle, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_moon_scale, tbx_sky_moon_scale, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sunlight_strength, tbx_sunlight_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sunlight_angle, tbx_sunlight_angle, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_clouds_height, tbx_sky_clouds_height, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_clouds_size, tbx_sky_clouds_size, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_clouds_thickness, tbx_sky_clouds_thickness, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_clouds_speed, tbx_sky_clouds_speed, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sky_clouds_offset, tbx_sky_clouds_offset, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_fog_distance, tbx_fog_distance, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_fog_size, tbx_fog_size, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_fog_height, tbx_fog_height, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_wind_speed, tbx_wind_speed, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_wind_strength, tbx_wind_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_wind_direction, tbx_wind_direction, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_wind_directional_speed, tbx_wind_directional_speed, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_wind_directional_strength, tbx_wind_directional_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_texture_animation_speed, tbx_texture_animation_speed, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_item_sheet_width, tbx_item_sheet_width, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_item_sheet_height, tbx_item_sheet_height, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_scenery_integrity, tbx_scenery_integrity, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_text, tbx_text, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rot_point_x, tbx_rot_point_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rot_point_y, tbx_rot_point_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rot_point_z, tbx_rot_point_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_glint_scale, tbx_glint_scale, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_depth, tbx_depth, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_detail, tbx_detail, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_radius, tbx_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_tex_length, tbx_tex_length, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_pos_x, tbx_pos_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_pos_y, tbx_pos_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_pos_z, tbx_pos_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rot_x, tbx_rot_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rot_y, tbx_rot_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rot_z, tbx_rot_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_scale_all, scale_all, REAL_t);
		DefineObjectMember(ID_obj_category, M_tbx_sca_x, tbx_sca_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sca_y, tbx_sca_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_sca_z, tbx_sca_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_bend_sliders, bend_sliders, REAL_t);
		DefineObjectMember(ID_obj_category, M_tbx_bend, tbx_bend, ARRAY_t);
		DefineObjectMember(ID_obj_category, M_tbx_path_point_angle, tbx_path_point_angle, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_path_point_scale, tbx_path_point_scale, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_path_offset, tbx_path_offset, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_follow_pos_offset_x, tbx_follow_pos_offset_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_follow_pos_offset_y, tbx_follow_pos_offset_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_follow_pos_offset_z, tbx_follow_pos_offset_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ik_blend, tbx_ik_blend, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ik_angle_offset, tbx_ik_angle_offset, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_alpha, tbx_alpha, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_mix_percent, tbx_mix_percent, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_emissive, tbx_emissive, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_metallic, tbx_metallic, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_roughness, tbx_roughness, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_subsurface, tbx_subsurface, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_subsurface_radius, tbx_subsurface_radius, VECTOR_t);
		DefineObjectMember(ID_obj_category, M_tbx_wind_influence, tbx_wind_influence, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_seed, tbx_seed, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_force, tbx_force, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_force_directional, tbx_force_directional, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_force_vortex, tbx_force_vortex, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_has_spotlight, has_spotlight, BOOLEAN_t);
		DefineObjectMember(ID_obj_category, M_tbx_size, tbx_size, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_range, tbx_range, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_strength, tbx_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_specular_strength, tbx_specular_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_fade_size, tbx_fade_size, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_spot_radius, tbx_spot_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_spot_sharpness, tbx_spot_sharpness, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_video_template, video_template, VARIANT_t);
		DefineObjectMember(ID_obj_category, M_look_at_rotate, look_at_rotate, BOOLEAN_t);
		DefineObjectMember(ID_obj_category, M_tbx_fov, tbx_fov, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_clip_near, tbx_clip_near, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_clip_far, tbx_clip_far, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_blade_amount, tbx_blade_amount, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_blade_angle, tbx_blade_angle, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rotate_distance, tbx_rotate_distance, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rotate_angle_xy, tbx_rotate_angle_xy, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_rotate_angle_z, tbx_rotate_angle_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shake_strength_x, tbx_shake_strength_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shake_strength_y, tbx_shake_strength_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shake_strength_z, tbx_shake_strength_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shake_speed_x, tbx_shake_speed_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shake_speed_y, tbx_shake_speed_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_shake_speed_z, tbx_shake_speed_z, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_depth, tbx_dof_depth, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_range, tbx_dof_range, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_fade_size, tbx_dof_fade_size, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_blur_size, tbx_dof_blur_size, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_blur_ratio, tbx_dof_blur_ratio, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_bias, tbx_dof_bias, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_threshold, tbx_dof_threshold, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_gain, tbx_dof_gain, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_fringe_angle_red, tbx_dof_fringe_angle_red, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_fringe_angle_green, tbx_dof_fringe_angle_green, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_fringe_angle_blue, tbx_dof_fringe_angle_blue, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_fringe_red, tbx_dof_fringe_red, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_fringe_green, tbx_dof_fringe_green, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_dof_fringe_blue, tbx_dof_fringe_blue, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_bloom_threshold, tbx_bloom_threshold, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_bloom_intensity, tbx_bloom_intensity, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_bloom_radius, tbx_bloom_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_bloom_ratio, tbx_bloom_ratio, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_lens_dirt_radius, tbx_lens_dirt_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_lens_dirt_intensity, tbx_lens_dirt_intensity, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_lens_dirt_power, tbx_lens_dirt_power, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_contrast, tbx_contrast, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_brightness, tbx_brightness, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_saturation, tbx_saturation, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_vibrance, tbx_vibrance, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_grain_strength, tbx_grain_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_grain_saturation, tbx_grain_saturation, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_grain_size, tbx_grain_size, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_vignette_radius, tbx_vignette_radius, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_vignette_softness, tbx_vignette_softness, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_vignette_strength, tbx_vignette_strength, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ca_blur_amount, tbx_ca_blur_amount, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ca_red_offset, tbx_ca_red_offset, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ca_green_offset, tbx_ca_green_offset, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ca_blue_offset, tbx_ca_blue_offset, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_distort_zoom_amount, tbx_distort_zoom_amount, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_distort_amount, tbx_distort_amount, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_volume, tbx_volume, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_pitch, tbx_pitch, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_start, tbx_start, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_end, tbx_end, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_item_scroll, item_scroll, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_item_slot, item_slot, VARIANT_t);
		DefineObjectMember(ID_obj_category, M_tbx_ease_in_x, tbx_ease_in_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ease_in_y, tbx_ease_in_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ease_out_x, tbx_ease_out_x, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_ease_out_y, tbx_ease_out_y, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_ease_link, ease_link, BOOLEAN_t);
		DefineObjectMember(ID_obj_category, M_tbx_backup_time, tbx_backup_time, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_backup_amount, tbx_backup_amount, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_watermark_padding, tbx_watermark_padding, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_watermark_scale, tbx_watermark_scale, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_watermark_opacity, tbx_watermark_opacity, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_move_speed, tbx_move_speed, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_look_sensitivity, tbx_look_sensitivity, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_fast_modifier, tbx_fast_modifier, INTEGER_t);
		DefineObjectMember(ID_obj_category, M_tbx_slow_modifier, tbx_slow_modifier, INTEGER_t);
	}
	
	void obj_colorpicker::InitMembers()
	{
		if (memberMap.contains(ID_obj_colorpicker))
			return;
		
		DefineObjectMember(ID_obj_colorpicker, M_value_name, value_name, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_value_script, value_script, INTEGER_t);
		DefineObjectMember(ID_obj_colorpicker, M_color, color, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_def, def, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_hue, hue, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_saturation, saturation, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_tbx_red, tbx_red, INTEGER_t);
		DefineObjectMember(ID_obj_colorpicker, M_tbx_green, tbx_green, INTEGER_t);
		DefineObjectMember(ID_obj_colorpicker, M_tbx_blue, tbx_blue, INTEGER_t);
		DefineObjectMember(ID_obj_colorpicker, M_tbx_hue, tbx_hue, INTEGER_t);
		DefineObjectMember(ID_obj_colorpicker, M_tbx_saturation, tbx_saturation, INTEGER_t);
		DefineObjectMember(ID_obj_colorpicker, M_tbx_brightness, tbx_brightness, INTEGER_t);
		DefineObjectMember(ID_obj_colorpicker, M_tbx_hexadecimal, tbx_hexadecimal, INTEGER_t);
		DefineObjectMember(ID_obj_colorpicker, M_mode, mode, STRING_t);
		DefineObjectMember(ID_obj_colorpicker, M_red, red, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_green, green, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_blue, blue, VARIANT_t);
		DefineObjectMember(ID_obj_colorpicker, M_brightness, brightness, VARIANT_t);
	}
	
	void obj_context_menu_level::InitMembers()
	{
		if (memberMap.contains(ID_obj_context_menu_level))
			return;
		
		DefineObjectMember(ID_obj_context_menu_level, M_level_list, level_list, INTEGER_t);
		DefineObjectMember(ID_obj_context_menu_level, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_context_menu_level, M_level_x, level_x, VARIANT_t);
		DefineObjectMember(ID_obj_context_menu_level, M_level_y, level_y, VARIANT_t);
		DefineObjectMember(ID_obj_context_menu_level, M_level, level, VARIANT_t);
		DefineObjectMember(ID_obj_context_menu_level, M_ani, ani, VARIANT_t);
		DefineObjectMember(ID_obj_context_menu_level, M_flip, flip, REAL_t);
		DefineObjectMember(ID_obj_context_menu_level, M_level_width, level_width, VARIANT_t);
		DefineObjectMember(ID_obj_context_menu_level, M_level_height, level_height, REAL_t);
		DefineObjectMember(ID_obj_context_menu_level, M_script, script, VARIANT_t);
		DefineObjectMember(ID_obj_context_menu_level, M_level_script, level_script, INTEGER_t);
	}
	
	void obj_data::InitMembers()
	{
		if (memberMap.contains(ID_obj_data))
			return;
		
		DefineObjectMember(ID_obj_data, M_lib_amount, lib_amount, REAL_t);
		DefineObjectMember(ID_obj_data, M_lib_type, lib_type, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_name, lib_name, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_char_skin, lib_char_skin, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_char_model_legacy_name, lib_char_model_legacy_name, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_char_model_name, lib_char_model_name, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_char_model_state, lib_char_model_state, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_item_type, lib_item_type, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_item_bounce, lib_item_bounce, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_item_face, lib_item_face, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_item_tex, lib_item_tex, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_item_x, lib_item_x, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_item_y, lib_item_y, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_block_id, lib_block_id, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_block_data, lib_block_data, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_block_tex, lib_block_tex, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_scenery_source, lib_scenery_source, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_scenery_tex, lib_scenery_tex, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_rotx, lib_rotx, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_roty, lib_roty, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_rotz, lib_rotz, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_rotpoint, lib_rotpoint, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_amount, tl_amount, REAL_t);
		DefineObjectMember(ID_obj_data, M_tl_type, tl_type, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_lib, tl_lib, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_visible, tl_visible, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_show, tl_show, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_lock, tl_lock, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_lock_parent, tl_lock_parent, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_lock_part, tl_lock_part, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_lock_part_bend, tl_lock_part_bend, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_color, tl_color, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_parts, tl_parts, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_values, tl_values, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_acts, tl_acts, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_keyframes, tl_keyframes, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_pos, pos, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_set, set, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_keyframe, tl_keyframe, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_tl_tl, tl_tl, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_skin_amount, skin_amount, REAL_t);
		DefineObjectMember(ID_obj_data, M_skin_name, skin_name, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_item_amount, item_amount, REAL_t);
		DefineObjectMember(ID_obj_data, M_item_name, item_name, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_ter_amount, ter_amount, REAL_t);
		DefineObjectMember(ID_obj_data, M_ter_name, ter_name, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_bg_select, bg_select, REAL_t);
		DefineObjectMember(ID_obj_data, M_bg_amount, bg_amount, REAL_t);
		DefineObjectMember(ID_obj_data, M_bg_name, bg_name, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_bg_show, bg_show, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_bg_stretch, bg_stretch, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_bg_box, bg_box, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_bg_ground_show, bg_ground_show, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_bg_ground_tex, bg_ground_tex, REAL_t);
		DefineObjectMember(ID_obj_data, M_bg_ground_x, bg_ground_x, REAL_t);
		DefineObjectMember(ID_obj_data, M_bg_ground_y, bg_ground_y, REAL_t);
		DefineObjectMember(ID_obj_data, M_sky_color, sky_color, REAL_t);
		DefineObjectMember(ID_obj_data, M_sky_time, sky_time, REAL_t);
		DefineObjectMember(ID_obj_data, M_sky_light, sky_light, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_lights_enable, lights_enable, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_lights_amount, lights_amount, REAL_t);
		DefineObjectMember(ID_obj_data, M_light_x, light_x, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_light_y, light_y, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_light_z, light_z, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_light_r, light_r, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_light_c, light_c, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_camfrom, camfrom, VECTOR_t);
		DefineObjectMember(ID_obj_data, M_camto, camto, VECTOR_t);
		DefineObjectMember(ID_obj_data, M_camanglexy, camanglexy, REAL_t);
		DefineObjectMember(ID_obj_data, M_camanglez, camanglez, REAL_t);
		DefineObjectMember(ID_obj_data, M_camzoom, camzoom, REAL_t);
		DefineObjectMember(ID_obj_data, M_tempo, tempo, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_loop, loop, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_timelinepos, timelinepos, REAL_t);
		DefineObjectMember(ID_obj_data, M_timelinescrollh, timelinescrollh, REAL_t);
		DefineObjectMember(ID_obj_data, M_timelinezoom, timelinezoom, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_skin_res, skin_res, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_item_res, item_res, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_ter_res, ter_res, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_bg_res, bg_res, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_lib_temp, lib_temp, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_value_type, value_type, ARRAY_t);
		DefineObjectMember(ID_obj_data, M_project_name, project_name, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_project_author, project_author, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_project_description, project_description, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_project_video_width, project_video_width, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_project_video_height, project_video_height, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_project_video_template, project_video_template, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_project_video_keep_aspect_ratio, project_video_keep_aspect_ratio, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_project_tempo, project_tempo, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_timeline_repeat, timeline_repeat, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_timeline_marker, timeline_marker, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_timeline, timeline, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_timeline_zoom, timeline_zoom, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_timeline_zoom_goal, timeline_zoom_goal, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_timeline_region_start, timeline_region_start, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_timeline_region_end, timeline_region_end, VARIANT_t);
		DefineObjectMember(ID_obj_data, M_tree_list, tree_list, INTEGER_t);
		DefineObjectMember(ID_obj_data, M_tree_list_filter, tree_list_filter, INTEGER_t);
	}
	
	void obj_deactivate::InitMembers()
	{
		if (memberMap.contains(ID_obj_deactivate))
			return;
		
	}
	
	void obj_history::InitMembers()
	{
		if (memberMap.contains(ID_obj_history))
			return;
		
		DefineObjectMember(ID_obj_history, M_script, script, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_par_script, par_script, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_save_temp_edit, save_temp_edit, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_ptype_edit, save_ptype_edit, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_tl_edit, save_tl_edit, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_res_edit, save_res_edit, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_axis_edit, save_axis_edit, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_save_id_seed, save_save_id_seed, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_scale_link_drag, scale_link_drag, BOOLEAN_t);
		DefineObjectMember(ID_obj_history, M_scale_link_drag_val, scale_link_drag_val, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_set_var, save_set_var, BOOLEAN_t);
		DefineObjectMember(ID_obj_history, M_par_set_amount, par_set_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_kf_add_amount, kf_add_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_kf_set_amount, kf_set_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_kf_add_tl_save_id, kf_add_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_add_index, kf_add_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_add_pos, kf_add_pos, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_set_tl_save_id, kf_set_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_set_index, kf_set_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_par_set_n, par_set_n, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_tl_set_old_value, tl_set_old_value, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_tl_save_id, tl_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_tl_sel_amount, tl_sel_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_tl_sel_save_id, tl_sel_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_extend_amount, extend_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_extend_save_id, extend_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_shift, shift, BOOLEAN_t);
		DefineObjectMember(ID_obj_history, M_tl_sel_kf_amount, tl_sel_kf_amount, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_sel_kf_index, tl_sel_kf_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_extend_value, extend_value, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_scale_oldval, scale_oldval, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_spawn_amount, spawn_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_spawn_save_id, spawn_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_bench_save_obj, bench_save_obj, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_open_editor, open_editor, BOOLEAN_t);
		DefineObjectMember(ID_obj_history, M_value_default, value_default, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_parent, parent, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_temp_save_id, temp_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_loaded_amount, loaded_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_loaded_save_id, loaded_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_constant, pc_spawn_constant, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_amount, pc_spawn_amount, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_region_use, pc_spawn_region_use, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_region_type, pc_spawn_region_type, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_region_path, pc_spawn_region_path, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_region_sphere_radius, pc_spawn_region_sphere_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_region_cube_size, pc_spawn_region_cube_size, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_region_box_size, pc_spawn_region_box_size, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_spawn_region_path_radius, pc_spawn_region_path_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_bounding_box_type, pc_bounding_box_type, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_bounding_box_ground_z, pc_bounding_box_ground_z, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_bounding_box_custom_start, pc_bounding_box_custom_start, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_bounding_box_custom_end, pc_bounding_box_custom_end, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_bounding_box_relative, pc_bounding_box_relative, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_animation_finish, pc_destroy_at_animation_finish, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_amount, pc_destroy_at_amount, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_amount_val, pc_destroy_at_amount_val, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_time, pc_destroy_at_time, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_time_seconds, pc_destroy_at_time_seconds, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_time_israndom, pc_destroy_at_time_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_time_random_min, pc_destroy_at_time_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_time_random_max, pc_destroy_at_time_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_pc_destroy_at_bounding_box, pc_destroy_at_bounding_box, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_filename, filename, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_insert_pos, insert_pos, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_part_amount, part_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_part_child_amount, part_child_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_attractor_amount, usage_tl_attractor_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_ik_target_amount, usage_tl_ik_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_ik_target_angle_amount, usage_tl_ik_target_angle_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_flw_rot_target_amount, usage_tl_flw_rot_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_ik_target_amount, usage_kf_ik_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_ik_target_angle_amount, usage_kf_ik_target_angle_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_attractor_amount, usage_kf_attractor_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_part_save_obj, part_save_obj, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_part_child_save_id, part_child_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_attractor_save_id, usage_tl_attractor_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_attractor_part_save_id, usage_tl_attractor_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_ik_target_save_id, usage_tl_ik_target_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_ik_target_part_save_id, usage_tl_ik_target_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_flw_rot_target_save_id, usage_tl_flw_rot_target_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_flw_rot_target_part_save_id, usage_tl_flw_rot_target_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_ik_target_angle_save_id, usage_tl_ik_target_angle_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_tl_ik_target_angle_part_save_id, usage_tl_ik_target_angle_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_attractor_tl_save_id, usage_kf_attractor_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_attractor_index, usage_kf_attractor_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_attractor_tl_part_save_id, usage_kf_attractor_tl_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_ik_target_tl_save_id, usage_kf_ik_target_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_ik_target_index, usage_kf_ik_target_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_ik_target_tl_part_save_id, usage_kf_ik_target_tl_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_rot_target_amount, usage_kf_flw_rot_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_rot_target_tl_save_id, usage_kf_flw_rot_target_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_rot_target_index, usage_kf_flw_rot_target_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_rot_target_tl_part_save_id, usage_kf_flw_rot_target_tl_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_pos_target_amount, usage_kf_flw_pos_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_pos_target_tl_save_id, usage_kf_flw_pos_target_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_pos_target_index, usage_kf_flw_pos_target_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_pos_target_tl_part_save_id, usage_kf_flw_pos_target_tl_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_scale_target_amount, usage_kf_flw_scale_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_scale_target_tl_save_id, usage_kf_flw_scale_target_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_scale_target_index, usage_kf_flw_scale_target_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_flw_scale_target_tl_part_save_id, usage_kf_flw_scale_target_tl_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_ik_target_angle_tl_save_id, usage_kf_ik_target_angle_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_ik_target_angle_index, usage_kf_ik_target_angle_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_old_value, old_value, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_new_value, new_value, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_tl_amount, tl_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_new_parent, new_parent, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_new_index, new_index, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_save_var_amount, save_var_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_save_var_save_id, save_var_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_first, first, BOOLEAN_t);
		DefineObjectMember(ID_obj_history, M_save_var_old_value, save_var_old_value, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_save_var_new_value, save_var_new_value, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_context_save_id, tl_context_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_tl_context_selected, tl_context_selected, REAL_t);
		DefineObjectMember(ID_obj_history, M_tl_save_amount, tl_save_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_tl_save_obj, tl_save_obj, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_create_amount, tl_create_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_tl_create_save_id, tl_create_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_marker_pos, marker_pos, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_tl_create_index, tl_create_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_save_kf_amount, save_kf_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_save_kf_tl_save_id, save_kf_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_save_kf_pos, save_kf_pos, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_save_kf_value, save_kf_value, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_paste_pos, paste_pos, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_copy_kf_amount, copy_kf_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_copy_kf_tl_save_id, copy_kf_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_copy_kf_pos, copy_kf_pos, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_copy_kf_value, copy_kf_value, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_copy_kf_tl_part_of_save_id, copy_kf_tl_part_of_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_copy_kf_tl_model_part_name, copy_kf_tl_model_part_name, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_pc_type_amount, pc_type_amount, REAL_t);
		DefineObjectMember(ID_obj_history, M_pc_type_save_obj, pc_type_save_obj, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_part_child_parent_save_id, part_child_parent_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_part_child_parent_tree_index, part_child_parent_tree_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_usage_kf_ik_target_angle_tl_part_save_id, usage_kf_ik_target_angle_tl_part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_set_new_value, kf_set_new_value, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_set_old_value, kf_set_old_value, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_old_parent_save_id, tl_old_parent_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_old_parent_tree_index, tl_old_parent_tree_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_old_x, tl_old_x, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_old_y, tl_old_y, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_old_z, tl_old_z, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_marker_save_id, marker_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_marker_color, marker_color, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_marker_name, marker_name, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_item_sheet_size, item_sheet_size, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_marker_color_prev, marker_color_prev, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_marker_name_prev, marker_name_prev, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_marker_name_new, marker_name_new, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_marker_color_new, marker_color_new, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_tl_sel_new_amount, tl_sel_new_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_tl_sel_new_save_id, tl_sel_new_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_sel_new_kf_amount, tl_sel_new_kf_amount, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_sel_new_kf_index, tl_sel_new_kf_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_oldtemplate, oldtemplate, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_oldwidth, oldwidth, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_oldheight, oldheight, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_newtemplate, newtemplate, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_old_width, old_width, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_old_height, old_height, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_new_width, new_width, REAL_t);
		DefineObjectMember(ID_obj_history, M_new_height, new_height, REAL_t);
		DefineObjectMember(ID_obj_history, M_oldval, oldval, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_obj_old, save_obj_old, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_newval, newval, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_obj_new, save_obj_new, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_fn, fn, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_old_pattern_color, old_pattern_color, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_old_pattern_patterns, old_pattern_patterns, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_old_pattern_colors, old_pattern_colors, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_new_pattern_color, new_pattern_color, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_new_pattern_patterns, new_pattern_patterns, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_new_pattern_colors, new_pattern_colors, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_old_armor, old_armor, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_temp, temp, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_new_armor, new_armor, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_state, state, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_tl_part_old_save_id, tl_part_old_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_tl_part_new_save_id, tl_part_new_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_temp_save_obj, temp_save_obj, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_child_amount, child_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_child_save_id, child_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_child_parent_save_id, child_parent_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_child_parent_tree_index, child_parent_tree_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_replaced, replaced, BOOLEAN_t);
		DefineObjectMember(ID_obj_history, M_copied, copied, BOOLEAN_t);
		DefineObjectMember(ID_obj_history, M_new_res_save_id, new_res_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_old_res_save_id, old_res_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_player_skin, player_skin, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_old_model_save_id, old_model_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_new_model_save_id, new_model_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_res, save_res, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_ptype_save_id, ptype_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_copy_save_id, copy_save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_save_ptype, save_ptype, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_old_name, old_name, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_old_state, old_state, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_new_name, new_name, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_marker_pos_prev, marker_pos_prev, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_marker_pos_new, marker_pos_new, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_kf_index, kf_index, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_kf_resize_amount, kf_resize_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_kf_resize_tl_save_id, kf_resize_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_resize_new_index, kf_resize_new_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_resize_old_pos, kf_resize_old_pos, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_resize_old_start, kf_resize_old_start, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_resize_old_index, kf_resize_old_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_resize_new_pos, kf_resize_new_pos, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_resize_new_start, kf_resize_new_start, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_move_new_index, kf_move_new_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_move_amount, kf_move_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history, M_kf_move_tl_save_id, kf_move_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_move_old_pos, kf_move_old_pos, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_move_old_index, kf_move_old_index, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_kf_move_new_pos, kf_move_new_pos, ARRAY_t);
		DefineObjectMember(ID_obj_history, M_position, position, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_regionsdir, regionsdir, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_boxstart, boxstart, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_boxend, boxend, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_filtermode, filtermode, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_filterarray, filterarray, VARIANT_t);
		DefineObjectMember(ID_obj_history, M_res, res, VARIANT_t);
	}
	
	void obj_history_save::InitMembers()
	{
		if (memberMap.contains(ID_obj_history_save))
			return;
		
		DefineObjectMember(ID_obj_history_save, M_hobj, hobj, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model, model, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_tex, model_tex, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_tex_material, model_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_tex_normal, model_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_item_tex, item_tex, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_item_tex_material, item_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_item_tex_normal, item_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_block_tex, block_tex, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_block_tex_material, block_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_block_tex_normal, block_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scenery, scenery, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex, shape_tex, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_material, shape_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_normal, shape_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_text_font, text_font, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_type_amount, pc_type_amount, REAL_t);
		DefineObjectMember(ID_obj_history_save, M_pc_type_save_obj, pc_type_save_obj, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_save_id, save_id, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_creator, creator, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_temp, temp, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_tex, sprite_tex, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_template_tex, sprite_template_tex, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_temp_amount, temp_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_temp_save_obj, temp_save_obj, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_parent, parent, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_part_of, part_of, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_glint_tex, glint_tex, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_value_default, value_default, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_kf_amount, kf_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_temp_shape_tex_amount, usage_temp_shape_tex_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_temp_path_amount, usage_temp_path_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_temp_shape_tex_save_id, usage_temp_shape_tex_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_temp_path_save_id, usage_temp_path_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_texture_amount, usage_tl_texture_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_path_amount, usage_tl_path_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_attractor_amount, usage_tl_attractor_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_ik_target_amount, usage_tl_ik_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_flw_rot_target_amount, usage_tl_flw_rot_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_flw_pos_target_amount, usage_tl_flw_pos_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_flw_scale_target_amount, usage_tl_flw_scale_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_ik_target_angle_amount, usage_tl_ik_target_angle_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_texture_save_id, usage_tl_texture_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_path_save_id, usage_tl_path_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_attractor_save_id, usage_tl_attractor_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_ik_target_save_id, usage_tl_ik_target_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_flw_rot_target_save_id, usage_tl_flw_rot_target_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_flw_pos_target_save_id, usage_tl_flw_pos_target_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_flw_scale_target_save_id, usage_tl_flw_scale_target_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_ik_target_angle_save_id, usage_tl_ik_target_angle_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_texture_amount, usage_kf_texture_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_path_amount, usage_kf_path_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_ik_target_amount, usage_kf_ik_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_rot_target_amount, usage_kf_flw_rot_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_pos_target_amount, usage_kf_flw_pos_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_scale_target_amount, usage_kf_flw_scale_target_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_ik_target_angle_amount, usage_kf_ik_target_angle_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_attractor_amount, usage_kf_attractor_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_texture_tl_save_id, usage_kf_texture_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_texture_index, usage_kf_texture_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_path_tl_save_id, usage_kf_path_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_path_index, usage_kf_path_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_ik_target_tl_save_id, usage_kf_ik_target_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_ik_target_index, usage_kf_ik_target_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_rot_target_tl_save_id, usage_kf_flw_rot_target_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_rot_target_index, usage_kf_flw_rot_target_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_pos_target_tl_save_id, usage_kf_flw_pos_target_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_pos_target_index, usage_kf_flw_pos_target_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_scale_target_tl_save_id, usage_kf_flw_scale_target_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_flw_scale_target_index, usage_kf_flw_scale_target_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_ik_target_angle_tl_save_id, usage_kf_ik_target_angle_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_ik_target_angle_index, usage_kf_ik_target_angle_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_attractor_tl_save_id, usage_kf_attractor_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_attractor_index, usage_kf_attractor_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_pattern_type, pattern_type, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pattern_base_color, pattern_base_color, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pattern_pattern_list, pattern_pattern_list, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pattern_color_list, pattern_color_list, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_tree_amount, tree_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_tree_save_obj, tree_save_obj, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_part_amount, part_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_part_save_id, part_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_shape_type, shape_type, REAL_t);
		DefineObjectMember(ID_obj_history_save, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_file, model_file, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_name, model_name, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_state, model_state, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_part_name, model_part_name, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_use_blend_color, model_use_blend_color, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_blend_color, model_blend_color, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_blend_color_default, model_blend_color_default, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pattern_skin, pattern_skin, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_armor_array, armor_array, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_armor_skin_array, armor_skin_array, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_item_slot, item_slot, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_item_3d, item_3d, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_item_face_camera, item_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_item_bounce, item_bounce, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_item_spin, item_spin, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_block_name, block_name, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_block_state, block_state, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_block_repeat_enable, block_repeat_enable, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_block_repeat, block_repeat, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_block_randomize, block_randomize, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_mapped, shape_tex_mapped, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_hoffset, shape_tex_hoffset, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_voffset, shape_tex_voffset, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_hrepeat, shape_tex_hrepeat, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_vrepeat, shape_tex_vrepeat, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_hmirror, shape_tex_hmirror, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_tex_vmirror, shape_tex_vmirror, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_closed, shape_closed, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_invert, shape_invert, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_detail, shape_detail, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shape_face_camera, shape_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_text_3d, text_3d, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_text_face_camera, text_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_constant, pc_spawn_constant, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_amount, pc_spawn_amount, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_region_use, pc_spawn_region_use, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_region_type, pc_spawn_region_type, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_region_path, pc_spawn_region_path, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_region_sphere_radius, pc_spawn_region_sphere_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_region_cube_size, pc_spawn_region_cube_size, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_region_box_size, pc_spawn_region_box_size, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_spawn_region_path_radius, pc_spawn_region_path_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_bounding_box_type, pc_bounding_box_type, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_bounding_box_ground_z, pc_bounding_box_ground_z, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_bounding_box_custom_start, pc_bounding_box_custom_start, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_bounding_box_custom_end, pc_bounding_box_custom_end, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_bounding_box_relative, pc_bounding_box_relative, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_animation_finish, pc_destroy_at_animation_finish, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_amount, pc_destroy_at_amount, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_amount_val, pc_destroy_at_amount_val, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_time, pc_destroy_at_time, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_time_seconds, pc_destroy_at_time_seconds, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_time_israndom, pc_destroy_at_time_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_time_random_min, pc_destroy_at_time_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_time_random_max, pc_destroy_at_time_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_pc_destroy_at_bounding_box, pc_destroy_at_bounding_box, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_creator_index, creator_index, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_text, text, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spawn_rate, spawn_rate, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_tex_image, sprite_tex_image, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_template, sprite_template, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_template_reverse, sprite_template_reverse, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_template_still_frame, sprite_template_still_frame, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_template_random_frame, sprite_template_random_frame, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_frame_width, sprite_frame_width, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_frame_height, sprite_frame_height, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_frame_start, sprite_frame_start, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_frame_end, sprite_frame_end, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_animation_speed, sprite_animation_speed, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_animation_speed_israndom, sprite_animation_speed_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_animation_speed_random_min, sprite_animation_speed_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_animation_speed_random_max, sprite_animation_speed_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_animation_onend, sprite_animation_onend, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_extend, angle_extend, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_extend, rot_extend, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_extend, spd_extend, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_extend, rot_spd_extend, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle, angle, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_israndom, angle_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_random_min, angle_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_random_max, angle_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed, angle_speed, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_israndom, angle_speed_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_random_min, angle_speed_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_random_max, angle_speed_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_add, angle_speed_add, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_add_israndom, angle_speed_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_add_random_min, angle_speed_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_add_random_max, angle_speed_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_mul, angle_speed_mul, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_mul_israndom, angle_speed_mul_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_mul_random_min, angle_speed_mul_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_angle_speed_mul_random_max, angle_speed_mul_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd, spd, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_israndom, spd_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_random_min, spd_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_random_max, spd_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_add, spd_add, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_add_israndom, spd_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_add_random_min, spd_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_add_random_max, spd_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_mul, spd_mul, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_mul_israndom, spd_mul_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_mul_random_min, spd_mul_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spd_mul_random_max, spd_mul_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot, rot, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_israndom, rot_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_random_min, rot_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_random_max, rot_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd, rot_spd, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_israndom, rot_spd_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_random_min, rot_spd_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_random_max, rot_spd_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_add, rot_spd_add, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_add_israndom, rot_spd_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_add_random_min, rot_spd_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_add_random_max, rot_spd_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_mul, rot_spd_mul, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_mul_israndom, rot_spd_mul_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_mul_random_min, rot_spd_mul_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_spd_mul_random_max, rot_spd_mul_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_angle, sprite_angle, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_angle_israndom, sprite_angle_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_angle_random_min, sprite_angle_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_angle_random_max, sprite_angle_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_angle_add, sprite_angle_add, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_angle_add_israndom, sprite_angle_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_angle_add_random_min, sprite_angle_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_sprite_angle_add_random_max, sprite_angle_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale, scale, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale_israndom, scale_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale_random_min, scale_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale_random_max, scale_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale_add, scale_add, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale_add_israndom, scale_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale_add_random_min, scale_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale_add_random_max, scale_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha, alpha, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha_israndom, alpha_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha_random_min, alpha_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha_random_max, alpha_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha_add, alpha_add, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha_add_israndom, alpha_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha_add_random_min, alpha_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha_add_random_max, alpha_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color, color, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_israndom, color_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_random_start, color_random_start, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_random_end, color_random_end, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix_enabled, color_mix_enabled, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix, color_mix, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix_israndom, color_mix_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix_random_start, color_mix_random_start, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix_random_end, color_mix_random_end, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix_time, color_mix_time, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix_time_israndom, color_mix_time_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix_time_random_min, color_mix_time_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_mix_time_random_max, color_mix_time_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_spawn_region, spawn_region, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_bounding_box, bounding_box, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_bounce, bounce, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_bounce_factor, bounce_factor, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_orbit, orbit, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_color_tag, color_tag, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_lock, lock, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_hide, hide, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_ghost, ghost, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_depth, depth, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_lock_bend, lock_bend, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_part_mixing_shapes, part_mixing_shapes, BOOLEAN_t);
		DefineObjectMember(ID_obj_history_save, M_parent_tree_index, parent_tree_index, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_tree_extend, tree_extend, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_model_part, model_part, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_position, inherit_position, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_rotation, inherit_rotation, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_rot_point, inherit_rot_point, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_scale, inherit_scale, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_alpha, inherit_alpha, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_color, inherit_color, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_visibility, inherit_visibility, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_bend, inherit_bend, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_texture, inherit_texture, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_surface, inherit_surface, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_subsurface, inherit_subsurface, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_glow_color, inherit_glow_color, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_select, inherit_select, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_inherit_pose, inherit_pose, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scale_resize, scale_resize, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_point_custom, rot_point_custom, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_point, rot_point, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_rot_point_render, rot_point_render, VECTOR_t);
		DefineObjectMember(ID_obj_history_save, M_backfaces, backfaces, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_texture_blur, texture_blur, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_texture_filtering, texture_filtering, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_shadows, shadows, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_ssao, ssao, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_glow, glow, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_glow_texture, glow_texture, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_only_render_glow, only_render_glow, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_glint_mode, glint_mode, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_glint_scale, glint_scale, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_glint_speed, glint_speed, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_glint_strength, glint_strength, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_fog, fog, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_wind, wind, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_wind_terrain, wind_terrain, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_hq_hiding, hq_hiding, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_lq_hiding, lq_hiding, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_blend_mode, blend_mode, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_alpha_mode, alpha_mode, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_smooth, path_smooth, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_closed, path_closed, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_detail, path_detail, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_shape_generate, path_shape_generate, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_shape_radius, path_shape_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_shape_tex_length, path_shape_tex_length, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_shape_invert, path_shape_invert, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_shape_tube, path_shape_tube, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_shape_detail, path_shape_detail, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_shape_smooth_segments, path_shape_smooth_segments, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_path_shape_smooth_ring, path_shape_smooth_ring, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_kf_pos, kf_pos, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_kf_value, kf_value, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_samples, project_render_samples, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_ssao, project_render_ssao, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_ssao_radius, project_render_ssao_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_ssao_power, project_render_ssao_power, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_ssao_color, project_render_ssao_color, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_shadows, project_render_shadows, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_shadows_sun_buffer_size, project_render_shadows_sun_buffer_size, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_shadows_spot_buffer_size, project_render_shadows_spot_buffer_size, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_shadows_point_buffer_size, project_render_shadows_point_buffer_size, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_shadows_transparent, project_render_shadows_transparent, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_subsurface_samples, project_render_subsurface_samples, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_subsurface_highlight, project_render_subsurface_highlight, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_subsurface_highlight_strength, project_render_subsurface_highlight_strength, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_indirect, project_render_indirect, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_indirect_precision, project_render_indirect_precision, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_indirect_blur_radius, project_render_indirect_blur_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_indirect_strength, project_render_indirect_strength, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_reflections, project_render_reflections, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_reflections_precision, project_render_reflections_precision, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_reflections_thickness, project_render_reflections_thickness, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_reflections_fade_amount, project_render_reflections_fade_amount, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_glow, project_render_glow, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_glow_radius, project_render_glow_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_glow_intensity, project_render_glow_intensity, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_glow_falloff, project_render_glow_falloff, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_glow_falloff_radius, project_render_glow_falloff_radius, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_glow_falloff_intensity, project_render_glow_falloff_intensity, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_aa, project_render_aa, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_aa_power, project_render_aa_power, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_texture_filtering, project_render_texture_filtering, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_transparent_block_texture_filtering, project_render_transparent_block_texture_filtering, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_texture_filtering_level, project_render_texture_filtering_level, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_bend_style, project_bend_style, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_opaque_leaves, project_render_opaque_leaves, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_liquid_animation, project_render_liquid_animation, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_water_reflections, project_render_water_reflections, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_block_emissive, project_render_block_emissive, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_block_subsurface, project_render_block_subsurface, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_glint_speed, project_render_glint_speed, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_project_render_glint_strength, project_render_glint_strength, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_usage_ptype_temp_amount, usage_ptype_temp_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_ptype_temp_save_id, usage_ptype_temp_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_amount, usage_tl_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_save_obj, usage_tl_save_obj, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_model_amount, usage_model_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_model_tex_amount, usage_model_tex_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_model_tex_material_amount, usage_model_tex_material_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_model_tex_normal_amount, usage_model_tex_normal_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_item_tex_amount, usage_item_tex_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_item_tex_material_amount, usage_item_tex_material_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_item_tex_normal_amount, usage_item_tex_normal_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_block_tex_amount, usage_block_tex_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_block_tex_material_amount, usage_block_tex_material_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_block_tex_normal_amount, usage_block_tex_normal_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_scenery_amount, usage_scenery_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_shape_tex_amount, usage_shape_tex_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_shape_tex_material_amount, usage_shape_tex_material_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_shape_tex_normal_amount, usage_shape_tex_normal_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_text_font_amount, usage_text_font_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_sprite_tex_amount, usage_sprite_tex_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_sprite_template_tex_amount, usage_sprite_template_tex_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_sound_amount, usage_kf_sound_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_sound_amount, usage_tl_sound_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_text_font_amount, usage_kf_text_font_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_text_font_amount, usage_tl_text_font_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_glint_tex_amount, usage_tl_glint_tex_amount, INTEGER_t);
		DefineObjectMember(ID_obj_history_save, M_usage_background_image, usage_background_image, BOOLEAN_t);
		DefineObjectMember(ID_obj_history_save, M_usage_background_sky_sun_tex, usage_background_sky_sun_tex, BOOLEAN_t);
		DefineObjectMember(ID_obj_history_save, M_usage_background_sky_moon_tex, usage_background_sky_moon_tex, BOOLEAN_t);
		DefineObjectMember(ID_obj_history_save, M_usage_background_sky_clouds_tex, usage_background_sky_clouds_tex, BOOLEAN_t);
		DefineObjectMember(ID_obj_history_save, M_usage_background_ground_tex, usage_background_ground_tex, BOOLEAN_t);
		DefineObjectMember(ID_obj_history_save, M_usage_background_ground_tex_material, usage_background_ground_tex_material, BOOLEAN_t);
		DefineObjectMember(ID_obj_history_save, M_usage_background_ground_tex_normal, usage_background_ground_tex_normal, BOOLEAN_t);
		DefineObjectMember(ID_obj_history_save, M_usage_model_save_id, usage_model_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_model_tex_save_id, usage_model_tex_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_model_tex_material_save_id, usage_model_tex_material_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_model_tex_normal_save_id, usage_model_tex_normal_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_item_tex_save_id, usage_item_tex_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_item_tex_material_save_id, usage_item_tex_material_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_item_tex_normal_save_id, usage_item_tex_normal_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_block_tex_save_id, usage_block_tex_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_block_tex_material_save_id, usage_block_tex_material_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_block_tex_normal_save_id, usage_block_tex_normal_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_scenery_save_id, usage_scenery_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_shape_tex_save_id, usage_shape_tex_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_shape_tex_material_save_id, usage_shape_tex_material_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_shape_tex_normal_save_id, usage_shape_tex_normal_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_text_font_save_id, usage_text_font_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_sprite_tex_save_id, usage_sprite_tex_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_sprite_template_tex_save_id, usage_sprite_template_tex_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_sound_tl_save_id, usage_kf_sound_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_sound_index, usage_kf_sound_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_text_font_tl_save_id, usage_kf_text_font_tl_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_kf_text_font_index, usage_kf_text_font_index, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_sound_save_id, usage_tl_sound_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_text_font_save_id, usage_tl_text_font_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_usage_tl_glint_tex_save_id, usage_tl_glint_tex_save_id, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_filename, filename, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_display_name, display_name, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_player_skin, player_skin, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_item_sheet_size, item_sheet_size, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scenery_tl_add, scenery_tl_add, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scenery_download_skins, scenery_download_skins, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_world_regions_dir, world_regions_dir, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_world_box_start, world_box_start, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_world_box_end, world_box_end, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_world_filter_mode, world_filter_mode, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_world_filter_array, world_filter_array, ARRAY_t);
		DefineObjectMember(ID_obj_history_save, M_scenery_integrity, scenery_integrity, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scenery_integrity_invert, scenery_integrity_invert, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scenery_palette, scenery_palette, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_scenery_randomize, scenery_randomize, VARIANT_t);
		DefineObjectMember(ID_obj_history_save, M_material_format, material_format, VARIANT_t);
	}
	
	void obj_keybind::InitMembers()
	{
		if (memberMap.contains(ID_obj_keybind))
			return;
		
		DefineObjectMember(ID_obj_keybind, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_keybind, M_keybind_id, keybind_id, INTEGER_t);
		DefineObjectMember(ID_obj_keybind, M_keybind, keybind, VARIANT_t);
		DefineObjectMember(ID_obj_keybind, M_keybind_default, keybind_default, VARIANT_t);
		DefineObjectMember(ID_obj_keybind, M_pressed, pressed, BOOLEAN_t);
		DefineObjectMember(ID_obj_keybind, M_active, active, VARIANT_t);
		DefineObjectMember(ID_obj_keybind, M_released, released, BOOLEAN_t);
		DefineObjectMember(ID_obj_keybind, M_check_ctrl, check_ctrl, BOOLEAN_t);
		DefineObjectMember(ID_obj_keybind, M_check_shift, check_shift, BOOLEAN_t);
		DefineObjectMember(ID_obj_keybind, M_check_alt, check_alt, BOOLEAN_t);
		DefineObjectMember(ID_obj_keybind, M_match_error, match_error, REAL_t);
		DefineObjectMember(ID_obj_keybind, M_navigation, navigation, BOOLEAN_t);
	}
	
	void obj_keyframe::InitMembers()
	{
		if (memberMap.contains(ID_obj_keyframe))
			return;
		
		DefineObjectMember(ID_obj_keyframe, M_timeline, timeline, VARIANT_t);
		DefineObjectMember(ID_obj_keyframe, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_keyframe, M_sound_play_index, sound_play_index, INTEGER_t);
		DefineObjectMember(ID_obj_keyframe, M_loaded, loaded, BOOLEAN_t);
		DefineObjectMember(ID_obj_keyframe, M_position, position, VARIANT_t);
		DefineObjectMember(ID_obj_keyframe, M_selected, selected, REAL_t);
		DefineObjectMember(ID_obj_keyframe, M_edit, edit, REAL_t);
		DefineObjectMember(ID_obj_keyframe, M_created, created, BOOLEAN_t);
		DefineObjectMember(ID_obj_keyframe, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_keyframe, M_move_pos, move_pos, VARIANT_t);
		DefineObjectMember(ID_obj_keyframe, M_sound_resize_index, sound_resize_index, INTEGER_t);
		DefineObjectMember(ID_obj_keyframe, M_sound_resize_pos, sound_resize_pos, VARIANT_t);
		DefineObjectMember(ID_obj_keyframe, M_sound_resize_start, sound_resize_start, VARIANT_t);
		DefineObjectMember(ID_obj_keyframe, M_move_index, move_index, INTEGER_t);
		DefineObjectMember(ID_obj_keyframe, M_new_position, new_position, VARIANT_t);
		DefineObjectMember(ID_obj_keyframe, M_new_start, new_start, VARIANT_t);
	}
	
	void obj_language::InitMembers()
	{
		if (memberMap.contains(ID_obj_language))
			return;
		
		DefineObjectMember(ID_obj_language, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_language, M_filename, filename, VARIANT_t);
		DefineObjectMember(ID_obj_language, M_locale, locale, VARIANT_t);
	}
	
	void obj_list::InitMembers()
	{
		if (memberMap.contains(ID_obj_list))
			return;
		
		DefineObjectMember(ID_obj_list, M_item, item, INTEGER_t);
		DefineObjectMember(ID_obj_list, M_width, width, VARIANT_t);
		DefineObjectMember(ID_obj_list, M_update, update, BOOLEAN_t);
		DefineObjectMember(ID_obj_list, M_get_name, get_name, BOOLEAN_t);
		DefineObjectMember(ID_obj_list, M_toggled, toggled, REAL_t);
		DefineObjectMember(ID_obj_list, M_show_ticks, show_ticks, BOOLEAN_t);
	}
	
	void obj_list_item::InitMembers()
	{
		if (memberMap.contains(ID_obj_list_item))
			return;
		
		DefineObjectMember(ID_obj_list_item, M_actions_left, actions_left, INTEGER_t);
		DefineObjectMember(ID_obj_list_item, M_actions_right, actions_right, INTEGER_t);
		DefineObjectMember(ID_obj_list_item, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_caption, caption, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_thumbnail, thumbnail, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_thumbnail_backdrop, thumbnail_backdrop, BOOLEAN_t);
		DefineObjectMember(ID_obj_list_item, M_thumbnail_blend, thumbnail_blend, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_thumbnail_alpha, thumbnail_alpha, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_icon_left, icon_left, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_icon_right, icon_right, INTEGER_t);
		DefineObjectMember(ID_obj_list_item, M_script, script, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_hover, hover, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_divider, divider, BOOLEAN_t);
		DefineObjectMember(ID_obj_list_item, M_disabled, disabled, BOOLEAN_t);
		DefineObjectMember(ID_obj_list_item, M_hovertime, hovertime, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_context_menu_name, context_menu_name, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_context_menu_active, context_menu_active, BOOLEAN_t);
		DefineObjectMember(ID_obj_list_item, M_context_menu_script, context_menu_script, INTEGER_t);
		DefineObjectMember(ID_obj_list_item, M_context_menu_width, context_menu_width, REAL_t);
		DefineObjectMember(ID_obj_list_item, M_context_menu_height, context_menu_height, REAL_t);
		DefineObjectMember(ID_obj_list_item, M_draw_x, draw_x, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_draw_y, draw_y, VARIANT_t);
		DefineObjectMember(ID_obj_list_item, M_interact, interact, BOOLEAN_t);
		DefineObjectMember(ID_obj_list_item, M_indent, indent, REAL_t);
		DefineObjectMember(ID_obj_list_item, M_toggled, toggled, REAL_t);
		DefineObjectMember(ID_obj_list_item, M_list, list, INTEGER_t);
	}
	
	void obj_marker::InitMembers()
	{
		if (memberMap.contains(ID_obj_marker))
			return;
		
		DefineObjectMember(ID_obj_marker, M_pos, pos, VARIANT_t);
		DefineObjectMember(ID_obj_marker, M_color, color, VARIANT_t);
		DefineObjectMember(ID_obj_marker, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_marker, M_edit_pos, edit_pos, VARIANT_t);
		DefineObjectMember(ID_obj_marker, M_save_id, save_id, VARIANT_t);
		DefineObjectMember(ID_obj_marker, M_loaded, loaded, BOOLEAN_t);
		DefineObjectMember(ID_obj_marker, M_load_id, load_id, VARIANT_t);
	}
	
	void obj_menu::InitMembers()
	{
		if (memberMap.contains(ID_obj_menu))
			return;
		
		DefineObjectMember(ID_obj_menu, M_menu_name, menu_name, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_type, menu_type, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_window, menu_window, INTEGER_t);
		DefineObjectMember(ID_obj_menu, M_menu_temp_edit, menu_temp_edit, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_script, menu_script, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_value, menu_value, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_ani, menu_ani, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_ani_ease, menu_ani_ease, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_ani_type, menu_ani_type, STRING_t);
		DefineObjectMember(ID_obj_menu, M_menu_flip, menu_flip, REAL_t);
		DefineObjectMember(ID_obj_menu, M_menu_x, menu_x, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_x_start, menu_x_start, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_y, menu_y, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_w, menu_w, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_w_start, menu_w_start, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_button_h, menu_button_h, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_amount, menu_amount, INTEGER_t);
		DefineObjectMember(ID_obj_menu, M_menu_show_amount, menu_show_amount, REAL_t);
		DefineObjectMember(ID_obj_menu, M_menu_item, menu_item, ARRAY_t);
		DefineObjectMember(ID_obj_menu, M_menu_item_w, menu_item_w, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_item_h, menu_item_h, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_include_tl_edit, menu_include_tl_edit, BOOLEAN_t);
		DefineObjectMember(ID_obj_menu, M_menu_count, menu_count, REAL_t);
		DefineObjectMember(ID_obj_menu, M_menu_item_extend, menu_item_extend, INTEGER_t);
		DefineObjectMember(ID_obj_menu, M_menu_scroll_vertical, menu_scroll_vertical, INTEGER_t);
		DefineObjectMember(ID_obj_menu, M_menu_scroll_horizontal, menu_scroll_horizontal, INTEGER_t);
		DefineObjectMember(ID_obj_menu, M_menu_height, menu_height, REAL_t);
		DefineObjectMember(ID_obj_menu, M_menu_height_goal, menu_height_goal, REAL_t);
		DefineObjectMember(ID_obj_menu, M_menu_transition, menu_transition, INTEGER_t);
		DefineObjectMember(ID_obj_menu, M_menu_steps, menu_steps, INTEGER_t);
		DefineObjectMember(ID_obj_menu, M_menu_floating, menu_floating, BOOLEAN_t);
		DefineObjectMember(ID_obj_menu, M_menu_list, menu_list, INTEGER_t);
		DefineObjectMember(ID_obj_menu, M_menu_padding, menu_padding, REAL_t);
		DefineObjectMember(ID_obj_menu, M_menu_busy_prev, menu_busy_prev, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_nav_use, menu_nav_use, BOOLEAN_t);
		DefineObjectMember(ID_obj_menu, M_menu_nav_index, menu_nav_index, REAL_t);
		DefineObjectMember(ID_obj_menu, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_menu_margin, menu_margin, REAL_t);
		DefineObjectMember(ID_obj_menu, M_content_x, content_x, VARIANT_t);
		DefineObjectMember(ID_obj_menu, M_content_width, content_width, VARIANT_t);
	}
	
	void obj_micro_animation::InitMembers()
	{
		if (memberMap.contains(ID_obj_micro_animation))
			return;
		
	}
	
	void obj_minecraft_assets::InitMembers()
	{
		if (memberMap.contains(ID_obj_minecraft_assets))
			return;
		
		DefineObjectMember(ID_obj_minecraft_assets, M_version, version, STRING_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_model_name_map, model_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_char_list, char_list, INTEGER_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_special_block_list, special_block_list, INTEGER_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_block_list, block_list, INTEGER_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_block_name_map, block_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_block_id_map, block_id_map, INTEGER_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_block_liquid_slot_map, block_liquid_slot_map, INTEGER_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_model_texture_list, model_texture_list, VARIANT_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_block_texture_list, block_texture_list, VARIANT_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_block_texture_ani_list, block_texture_ani_list, VARIANT_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_block_texture_color_map, block_texture_color_map, VARIANT_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_item_texture_list, item_texture_list, VARIANT_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_particle_texture_list, particle_texture_list, VARIANT_t);
		DefineObjectMember(ID_obj_minecraft_assets, M_block_texture_preview_map, block_texture_preview_map, VARIANT_t);
	}
	
	void obj_model::InitMembers()
	{
		if (memberMap.contains(ID_obj_model))
			return;
		
		DefineObjectMember(ID_obj_model, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_model, M_file, file, INTEGER_t);
		DefineObjectMember(ID_obj_model, M_texture_name_map, texture_name_map, VARIANT_t);
		DefineObjectMember(ID_obj_model, M_version, version, VARIANT_t);
		DefineObjectMember(ID_obj_model, M_pattern_type, pattern_type, VARIANT_t);
		DefineObjectMember(ID_obj_model, M_states_map, states_map, INTEGER_t);
		DefineObjectMember(ID_obj_model, M_default_state, default_state, VARIANT_t);
	}
	
	void obj_model_file::InitMembers()
	{
		if (memberMap.contains(ID_obj_model_file))
			return;
		
		DefineObjectMember(ID_obj_model_file, M_part_list, part_list, INTEGER_t);
		DefineObjectMember(ID_obj_model_file, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_description, description, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_texture_name, texture_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_texture_inherit, texture_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_file, M_texture_material_inherit, texture_material_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_file, M_texture_normal_inherit, texture_normal_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_file, M_texture_material_name, texture_material_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_texture_normal_name, texture_normal_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_texture_size, texture_size, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_part_mixing_shapes, part_mixing_shapes, BOOLEAN_t);
		DefineObjectMember(ID_obj_model_file, M_color_inherit, color_inherit, BOOLEAN_t);
		DefineObjectMember(ID_obj_model_file, M_color_blend, color_blend, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_color_alpha, color_alpha, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_color_emissive, color_emissive, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_color_mix, color_mix, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_color_mix_percent, color_mix_percent, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_player_skin, player_skin, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_scale, scale, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_model_color, model_color, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_bounds_parts_start, bounds_parts_start, VECTOR_t);
		DefineObjectMember(ID_obj_model_file, M_bounds_parts_end, bounds_parts_end, VECTOR_t);
		DefineObjectMember(ID_obj_model_file, M_has_3d_plane, has_3d_plane, BOOLEAN_t);
		DefineObjectMember(ID_obj_model_file, M_floor_box_uvs, floor_box_uvs, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_render_part_list, render_part_list, INTEGER_t);
		DefineObjectMember(ID_obj_model_file, M_file_part_list, file_part_list, INTEGER_t);
		DefineObjectMember(ID_obj_model_file, M_locked, locked, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_bend_part, bend_part, INTEGER_t);
		DefineObjectMember(ID_obj_model_file, M_bend_offset, bend_offset, VARIANT_t);
		DefineObjectMember(ID_obj_model_file, M_bend_inherit_angle, bend_inherit_angle, VECTOR_t);
	}
	
	void obj_model_part::InitMembers()
	{
		if (memberMap.contains(ID_obj_model_part))
			return;
		
		DefineObjectMember(ID_obj_model_part, M_shape_list, shape_list, INTEGER_t);
		DefineObjectMember(ID_obj_model_part, M_part_list, part_list, INTEGER_t);
		DefineObjectMember(ID_obj_model_part, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_depth, depth, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_description, description, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_texture_name, texture_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_texture_inherit, texture_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_part, M_texture_material_inherit, texture_material_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_part, M_texture_normal_inherit, texture_normal_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_part, M_texture_material_name, texture_material_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_texture_normal_name, texture_normal_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_texture_size, texture_size, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_color_inherit, color_inherit, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_color_blend, color_blend, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_color_alpha, color_alpha, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_color_emissive, color_emissive, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_color_mix, color_mix, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_color_mix_percent, color_mix_percent, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_part_mixing_shapes, part_mixing_shapes, BOOLEAN_t);
		DefineObjectMember(ID_obj_model_part, M_position_noscale, position_noscale, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_position, position, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_rotation, rotation, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_scale, scale, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_floor_box_uvs, floor_box_uvs, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_show_position, show_position, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_locked, locked, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_lock_bend, lock_bend, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_backfaces, backfaces, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_bend_inherit, bend_inherit, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_bend_offset, bend_offset, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_bend_end_offset, bend_end_offset, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_bend_size, bend_size, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_bend_part, bend_part, INTEGER_t);
		DefineObjectMember(ID_obj_model_part, M_bend_pos_offset, bend_pos_offset, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bend_axis, bend_axis, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bend_direction_min, bend_direction_min, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bend_direction_max, bend_direction_max, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bend_direction, bend_direction, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bend_direction_legacy, bend_direction_legacy, BOOLEAN_t);
		DefineObjectMember(ID_obj_model_part, M_bend_invert, bend_invert, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bend_default_angle, bend_default_angle, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bend_inherit_angle, bend_inherit_angle, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_ik_supported, ik_supported, BOOLEAN_t);
		DefineObjectMember(ID_obj_model_part, M_matrix, matrix, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_default_matrix, default_matrix, MATRIX_t);
		DefineObjectMember(ID_obj_model_part, M_bounds_start, bounds_start, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bounds_end, bounds_end, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_has_3d_plane, has_3d_plane, BOOLEAN_t);
		DefineObjectMember(ID_obj_model_part, M_bounds_parts_start, bounds_parts_start, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_bounds_parts_end, bounds_parts_end, VECTOR_t);
		DefineObjectMember(ID_obj_model_part, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_model_part, M_model_part, model_part, VARIANT_t);
	}
	
	void obj_model_shape::InitMembers()
	{
		if (memberMap.contains(ID_obj_model_shape))
			return;
		
		DefineObjectMember(ID_obj_model_shape, M_vbuffer_default, vbuffer_default, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_description, description, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_use_model_color, use_model_color, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_texture_name, texture_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_texture_inherit, texture_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_shape, M_texture_material_inherit, texture_material_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_shape, M_texture_normal_inherit, texture_normal_inherit, INTEGER_t);
		DefineObjectMember(ID_obj_model_shape, M_texture_material_name, texture_material_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_texture_normal_name, texture_normal_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_texture_size, texture_size, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_color_inherit, color_inherit, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_color_blend, color_blend, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_color_alpha, color_alpha, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_color_emissive, color_emissive, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_color_mix, color_mix, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_color_mix_percent, color_mix_percent, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_minecraft_color, minecraft_color, INTEGER_t);
		DefineObjectMember(ID_obj_model_shape, M_texture_mirror, texture_mirror, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_invert, invert, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_hide_front, hide_front, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_hide_back, hide_back, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_face_camera, face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_item_bounce, item_bounce, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_move_required_array, move_required_array, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_move_required, move_required, BOOLEAN_t);
		DefineObjectMember(ID_obj_model_shape, M_floor_box_uvs, floor_box_uvs, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_from_noscale, from_noscale, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_to_noscale, to_noscale, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_inflate, inflate, VECTOR_t);
		DefineObjectMember(ID_obj_model_shape, M_is3d, is3d, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_position_noscale, position_noscale, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_position, position, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_rotation, rotation, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_scale, scale, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_from, from, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_to, to, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_locked, locked, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_shape, bend_shape, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_part, bend_part, INTEGER_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_axis, bend_axis, VECTOR_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_direction_min, bend_direction_min, VECTOR_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_direction_max, bend_direction_max, VECTOR_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_default_angle, bend_default_angle, VECTOR_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_offset, bend_offset, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_size, bend_size, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_bend_invert, bend_invert, VECTOR_t);
		DefineObjectMember(ID_obj_model_shape, M_matrix, matrix, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_uv, uv, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_wind_wave, wind_wave, INTEGER_t);
		DefineObjectMember(ID_obj_model_shape, M_wind_wave_zmin, wind_wave_zmin, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_wind_wave_zmax, wind_wave_zmax, VARIANT_t);
		DefineObjectMember(ID_obj_model_shape, M_startscale, startscale, VECTOR_t);
		DefineObjectMember(ID_obj_model_shape, M_bounds_start, bounds_start, VECTOR_t);
		DefineObjectMember(ID_obj_model_shape, M_bounds_end, bounds_end, VECTOR_t);
	}
	
	void obj_model_state::InitMembers()
	{
		if (memberMap.contains(ID_obj_model_state))
			return;
		
		DefineObjectMember(ID_obj_model_state, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_model_state, M_value_amount, value_amount, REAL_t);
		DefineObjectMember(ID_obj_model_state, M_value_name, value_name, VARIANT_t);
		DefineObjectMember(ID_obj_model_state, M_value_file, value_file, ARRAY_t);
		DefineObjectMember(ID_obj_model_state, M_value_texture_name_map, value_texture_name_map, ARRAY_t);
		DefineObjectMember(ID_obj_model_state, M_value_texture_material_name_map, value_texture_material_name_map, ARRAY_t);
		DefineObjectMember(ID_obj_model_state, M_value_tex_normal_name_map, value_tex_normal_name_map, ARRAY_t);
		DefineObjectMember(ID_obj_model_state, M_value_shape_texture_name_map, value_shape_texture_name_map, ARRAY_t);
		DefineObjectMember(ID_obj_model_state, M_value_shape_texture_material_name_map, value_shape_texture_material_name_map, VARIANT_t);
		DefineObjectMember(ID_obj_model_state, M_value_shape_tex_normal_name_map, value_shape_tex_normal_name_map, VARIANT_t);
		DefineObjectMember(ID_obj_model_state, M_value_hide_list, value_hide_list, ARRAY_t);
		DefineObjectMember(ID_obj_model_state, M_value_shape_hide_list, value_shape_hide_list, ARRAY_t);
		DefineObjectMember(ID_obj_model_state, M_value_color_name_map, value_color_name_map, ARRAY_t);
		DefineObjectMember(ID_obj_model_state, M_value_pattern_type, value_pattern_type, ARRAY_t);
	}
	
	void obj_panel::InitMembers()
	{
		if (memberMap.contains(ID_obj_panel))
			return;
		
		DefineObjectMember(ID_obj_panel, M_size, size, VARIANT_t);
		DefineObjectMember(ID_obj_panel, M_size_real, size_real, REAL_t);
		DefineObjectMember(ID_obj_panel, M_size_real_ani, size_real_ani, REAL_t);
		DefineObjectMember(ID_obj_panel, M_size_ani, size_ani, VARIANT_t);
		DefineObjectMember(ID_obj_panel, M_tab_selected, tab_selected, VARIANT_t);
		DefineObjectMember(ID_obj_panel, M_tab_list_selected, tab_list_selected, REAL_t);
		DefineObjectMember(ID_obj_panel, M_tab_list_amount, tab_list_amount, INTEGER_t);
		DefineObjectMember(ID_obj_panel, M_tab_list, tab_list, ARRAY_t);
		DefineObjectMember(ID_obj_panel, M_list_glow, list_glow, VARIANT_t);
		DefineObjectMember(ID_obj_panel, M_glow, glow, VARIANT_t);
		DefineObjectMember(ID_obj_panel, M_glow_ani, glow_ani, VARIANT_t);
		DefineObjectMember(ID_obj_panel, M_location, location, STRING_t);
		DefineObjectMember(ID_obj_panel, M_size_glow, size_glow, REAL_t);
	}
	
	void obj_particle::InitMembers()
	{
		if (memberMap.contains(ID_obj_particle))
			return;
		
		DefineObjectMember(ID_obj_particle, M_creator, creator, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_spawntime, spawntime, REAL_t);
		DefineObjectMember(ID_obj_particle, M_frame, frame, REAL_t);
		DefineObjectMember(ID_obj_particle, M_time, time, INTEGER_t);
		DefineObjectMember(ID_obj_particle, M_freezetime, freezetime, INTEGER_t);
		DefineObjectMember(ID_obj_particle, M_time_to_live, time_to_live, REAL_t);
		DefineObjectMember(ID_obj_particle, M_pos, pos, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_anispeed, anispeed, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_angle, angle, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_spd, spd, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_spd_add, spd_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_spd_mul, spd_mul, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_rot, rot, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_rot_spd, rot_spd, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_rot_spd_add, rot_spd_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_rot_spd_mul, rot_spd_mul, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_angle_speed, angle_speed, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_angle_speed_add, angle_speed_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_angle_speed_mul, angle_speed_mul, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_sprite_angle, sprite_angle, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_sprite_angle_add, sprite_angle_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_scale, scale, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_scale_add, scale_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_alpha, alpha, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_alpha_add, alpha_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_color, color, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_color_mix, color_mix, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_color_mix_start, color_mix_start, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_color_mix_time, color_mix_time, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_value_inherit, value_inherit, ARRAY_t);
		DefineObjectMember(ID_obj_particle, M_model_part_shape_tex, model_part_shape_tex, ARRAY_t);
		DefineObjectMember(ID_obj_particle, M_model_part_shape_material_res, model_part_shape_material_res, ARRAY_t);
		DefineObjectMember(ID_obj_particle, M_model_part_shape_tex_material, model_part_shape_tex_material, ARRAY_t);
		DefineObjectMember(ID_obj_particle, M_model_part_shape_tex_normal, model_part_shape_tex_normal, ARRAY_t);
		DefineObjectMember(ID_obj_particle, M_select, select, VARIANT_t);
		DefineObjectMember(ID_obj_particle, M_matrix_render, matrix_render, MATRIX_t);
	}
	
	void obj_particle_template::InitMembers()
	{
		if (memberMap.contains(ID_obj_particle_template))
			return;
		
		DefineObjectMember(ID_obj_particle_template, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_particle_template, M_texture_name, texture_name, VARIANT_t);
		DefineObjectMember(ID_obj_particle_template, M_frames, frames, VARIANT_t);
		DefineObjectMember(ID_obj_particle_template, M_animated, animated, BOOLEAN_t);
		DefineObjectMember(ID_obj_particle_template, M_size, size, VARIANT_t);
		DefineObjectMember(ID_obj_particle_template, M_letter_suffix, letter_suffix, VARIANT_t);
		DefineObjectMember(ID_obj_particle_template, M_texture_list, texture_list, INTEGER_t);
	}
	
	void obj_particle_type::InitMembers()
	{
		if (memberMap.contains(ID_obj_particle_type))
			return;
		
		DefineObjectMember(ID_obj_particle_type, M_save_id, save_id, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_creator, creator, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_temp, temp, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_text, text, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spawn_rate, spawn_rate, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_vbuffer_amount, sprite_vbuffer_amount, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_vbuffer, sprite_vbuffer, ARRAY_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_tex, sprite_tex, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_tex_image, sprite_tex_image, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_template, sprite_template, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_template_tex, sprite_template_tex, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_template_still_frame, sprite_template_still_frame, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_template_random_frame, sprite_template_random_frame, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_template_reverse, sprite_template_reverse, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_frame_width, sprite_frame_width, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_frame_height, sprite_frame_height, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_frame_start, sprite_frame_start, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_frame_end, sprite_frame_end, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_animation_speed, sprite_animation_speed, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_animation_speed_israndom, sprite_animation_speed_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_animation_speed_random_min, sprite_animation_speed_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_animation_speed_random_max, sprite_animation_speed_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_animation_onend, sprite_animation_onend, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_collapse, angle_collapse, BOOLEAN_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_collapse, spd_collapse, BOOLEAN_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_collapse, rot_collapse, BOOLEAN_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_collapse, rot_spd_collapse, BOOLEAN_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_extend, angle_extend, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_extend, spd_extend, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_extend, rot_extend, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_extend, rot_spd_extend, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle, angle, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_israndom, angle_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_random_min, angle_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_random_max, angle_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed, angle_speed, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_israndom, angle_speed_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_random_min, angle_speed_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_random_max, angle_speed_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_add, angle_speed_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_add_israndom, angle_speed_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_add_random_min, angle_speed_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_add_random_max, angle_speed_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_mul, angle_speed_mul, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_mul_israndom, angle_speed_mul_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_mul_random_min, angle_speed_mul_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_angle_speed_mul_random_max, angle_speed_mul_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd, spd, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_israndom, spd_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_random_min, spd_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_random_max, spd_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_add, spd_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_add_israndom, spd_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_add_random_min, spd_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_add_random_max, spd_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_mul, spd_mul, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_mul_israndom, spd_mul_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_mul_random_min, spd_mul_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spd_mul_random_max, spd_mul_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot, rot, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_israndom, rot_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_random_min, rot_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_random_max, rot_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd, rot_spd, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_israndom, rot_spd_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_random_min, rot_spd_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_random_max, rot_spd_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_add, rot_spd_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_add_israndom, rot_spd_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_add_random_min, rot_spd_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_add_random_max, rot_spd_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_mul, rot_spd_mul, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_mul_israndom, rot_spd_mul_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_mul_random_min, rot_spd_mul_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_rot_spd_mul_random_max, rot_spd_mul_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_angle, sprite_angle, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_angle_israndom, sprite_angle_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_angle_random_min, sprite_angle_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_angle_random_max, sprite_angle_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_angle_add, sprite_angle_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_angle_add_israndom, sprite_angle_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_angle_add_random_min, sprite_angle_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_sprite_angle_add_random_max, sprite_angle_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_scale, scale, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_scale_israndom, scale_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_scale_random_min, scale_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_scale_random_max, scale_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_scale_add, scale_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_scale_add_israndom, scale_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_scale_add_random_min, scale_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_scale_add_random_max, scale_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_alpha, alpha, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_alpha_israndom, alpha_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_alpha_random_min, alpha_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_alpha_random_max, alpha_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_alpha_add, alpha_add, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_alpha_add_israndom, alpha_add_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_alpha_add_random_min, alpha_add_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_alpha_add_random_max, alpha_add_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color, color, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_israndom, color_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_random_start, color_random_start, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_random_end, color_random_end, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix_enabled, color_mix_enabled, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix, color_mix, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix_israndom, color_mix_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix_random_start, color_mix_random_start, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix_random_end, color_mix_random_end, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix_time, color_mix_time, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix_time_israndom, color_mix_time_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix_time_random_min, color_mix_time_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_color_mix_time_random_max, color_mix_time_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_spawn_region, spawn_region, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_bounding_box, bounding_box, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_bounce, bounce, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_bounce_factor, bounce_factor, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_orbit, orbit, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_text_vbuffer, text_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_text_texture, text_texture, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_text_string, text_string, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_text_res, text_res, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_text_3d, text_3d, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_loaded, loaded, BOOLEAN_t);
		DefineObjectMember(ID_obj_particle_type, M_load_id, load_id, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_creator_index, creator_index, INTEGER_t);
		DefineObjectMember(ID_obj_particle_type, M_text_halign_prev, text_halign_prev, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_text_valign_prev, text_valign_prev, VARIANT_t);
		DefineObjectMember(ID_obj_particle_type, M_text_aa_prev, text_aa_prev, VARIANT_t);
	}
	
	void obj_popup::InitMembers()
	{
		if (memberMap.contains(ID_obj_popup))
			return;
		
		DefineObjectMember(ID_obj_popup, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_script, script, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_width, width, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_height, height, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_block, block, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_caption, caption, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_offset_x, offset_x, REAL_t);
		DefineObjectMember(ID_obj_popup, M_offset_y, offset_y, REAL_t);
		DefineObjectMember(ID_obj_popup, M_custom, custom, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_revert, revert, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_close_button, close_button, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_closescript, closescript, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_custom_height, custom_height, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_custom_height_goal, custom_height_goal, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_folder, folder, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_tbx_name, tbx_name, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_author, tbx_author, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_description, tbx_description, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_load_object, load_object, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_load_script, load_script, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_progress, progress, REAL_t);
		DefineObjectMember(ID_obj_popup, M_text, text, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_value_script, value_script, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_username, username, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_texture, texture, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_fail_message, fail_message, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_start_time, start_time, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_username, tbx_username, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_filename, filename, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_filenames, filenames, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_do_all, do_all, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_is_sheet, is_sheet, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_sheet_size, sheet_size, VECTOR_t);
		DefineObjectMember(ID_obj_popup, M_sheet_size_def, sheet_size_def, VECTOR_t);
		DefineObjectMember(ID_obj_popup, M_tbx_sheet_width, tbx_sheet_width, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_sheet_height, tbx_sheet_height, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_format, format, STRING_t);
		DefineObjectMember(ID_obj_popup, M_frame_rate, frame_rate, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_framespersecond, framespersecond, REAL_t);
		DefineObjectMember(ID_obj_popup, M_bit_rate, bit_rate, REAL_t);
		DefineObjectMember(ID_obj_popup, M_video_quality, video_quality, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_include_audio, include_audio, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_remove_background, remove_background, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_include_hidden, include_hidden, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_high_quality, high_quality, REAL_t);
		DefineObjectMember(ID_obj_popup, M_watermark, watermark, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_tbx_video_size_custom_width, tbx_video_size_custom_width, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_video_size_custom_height, tbx_video_size_custom_height, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_framespersecond, tbx_framespersecond, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_bit_rate, tbx_bit_rate, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_image_size_custom_width, tbx_image_size_custom_width, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_image_size_custom_height, tbx_image_size_custom_height, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_tbx_key, tbx_key, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_warntext, warntext, STRING_t);
		DefineObjectMember(ID_obj_popup, M_page, page, REAL_t);
		DefineObjectMember(ID_obj_popup, M_page_ani, page_ani, REAL_t);
		DefineObjectMember(ID_obj_popup, M_page_ani_type, page_ani_type, STRING_t);
		DefineObjectMember(ID_obj_popup, M_open_advanced, open_advanced, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_custom_rendering, custom_rendering, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_hidden, hidden, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_not_now, not_now, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_preview, preview, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_layer_scrollbar, layer_scrollbar, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_layer_remove, layer_remove, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_layer_edit, layer_edit, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_pattern_edit, pattern_edit, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_pattern_edit_preview, pattern_edit_preview, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_pattern_list_edit, pattern_list_edit, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_pattern_color_list_edit, pattern_color_list_edit, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_pattern_sprites, pattern_sprites, ARRAY_t);
		DefineObjectMember(ID_obj_popup, M_res_ratio, res_ratio, REAL_t);
		DefineObjectMember(ID_obj_popup, M_pattern_resource, pattern_resource, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_update, update, BOOLEAN_t);
		DefineObjectMember(ID_obj_popup, M_layer_move, layer_move, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_layer_move_x, layer_move_x, REAL_t);
		DefineObjectMember(ID_obj_popup, M_layer_move_y, layer_move_y, REAL_t);
		DefineObjectMember(ID_obj_popup, M_piece_current, piece_current, INTEGER_t);
		DefineObjectMember(ID_obj_popup, M_piece_data_id, piece_data_id, REAL_t);
		DefineObjectMember(ID_obj_popup, M_armor_edit, armor_edit, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_description, description, VARIANT_t);
		DefineObjectMember(ID_obj_popup, M_load_amount, load_amount, REAL_t);
	}
	
	void obj_preview::InitMembers()
	{
		if (memberMap.contains(ID_obj_preview))
			return;
		
		DefineObjectMember(ID_obj_preview, M_select, select, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_surface, surface, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_mouseon_prev, mouseon_prev, BOOLEAN_t);
		DefineObjectMember(ID_obj_preview, M_pack_image, pack_image, STRING_t);
		DefineObjectMember(ID_obj_preview, M_pack_image_material, pack_image_material, STRING_t);
		DefineObjectMember(ID_obj_preview, M_pack_model_texture, pack_model_texture, STRING_t);
		DefineObjectMember(ID_obj_preview, M_pack_block_sheet_ani, pack_block_sheet_ani, REAL_t);
		DefineObjectMember(ID_obj_preview, M_pack_colormap, pack_colormap, REAL_t);
		DefineObjectMember(ID_obj_preview, M_pack_particles, pack_particles, INTEGER_t);
		DefineObjectMember(ID_obj_preview, M_last_select, last_select, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_texture, texture, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_reset_view, reset_view, BOOLEAN_t);
		DefineObjectMember(ID_obj_preview, M_sound_play_index, sound_play_index, INTEGER_t);
		DefineObjectMember(ID_obj_preview, M_sound_playing, sound_playing, REAL_t);
		DefineObjectMember(ID_obj_preview, M_fov, fov, REAL_t);
		DefineObjectMember(ID_obj_preview, M_xy_lock, xy_lock, BOOLEAN_t);
		DefineObjectMember(ID_obj_preview, M_world_pos, world_pos, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_xyangle, xyangle, REAL_t);
		DefineObjectMember(ID_obj_preview, M_zangle, zangle, REAL_t);
		DefineObjectMember(ID_obj_preview, M_xoff, xoff, REAL_t);
		DefineObjectMember(ID_obj_preview, M_yoff, yoff, REAL_t);
		DefineObjectMember(ID_obj_preview, M_goalxoff, goalxoff, REAL_t);
		DefineObjectMember(ID_obj_preview, M_goalyoff, goalyoff, REAL_t);
		DefineObjectMember(ID_obj_preview, M_zoom, zoom, REAL_t);
		DefineObjectMember(ID_obj_preview, M_goalzoom, goalzoom, REAL_t);
		DefineObjectMember(ID_obj_preview, M_spawn_queue_amount, spawn_queue_amount, ARRAY_t);
		DefineObjectMember(ID_obj_preview, M_spawn_queue, spawn_queue, ARRAY_t);
		DefineObjectMember(ID_obj_preview, M_spawn_queue_start, spawn_queue_start, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_spawn_currentstep, spawn_currentstep, REAL_t);
		DefineObjectMember(ID_obj_preview, M_spawn_laststep, spawn_laststep, REAL_t);
		DefineObjectMember(ID_obj_preview, M_spawn_active, spawn_active, BOOLEAN_t);
		DefineObjectMember(ID_obj_preview, M_fire, fire, BOOLEAN_t);
		DefineObjectMember(ID_obj_preview, M_single_fire_count, single_fire_count, INTEGER_t);
		DefineObjectMember(ID_obj_preview, M_particle_list, particle_list, INTEGER_t);
		DefineObjectMember(ID_obj_preview, M_is_timeline, is_timeline, BOOLEAN_t);
		DefineObjectMember(ID_obj_preview, M_text_vbuffer, text_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_text_texture, text_texture, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_text_string, text_string, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_text_res, text_res, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_text_3d, text_3d, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_update, update, BOOLEAN_t);
		DefineObjectMember(ID_obj_preview, M_clickxyangle, clickxyangle, REAL_t);
		DefineObjectMember(ID_obj_preview, M_clickzangle, clickzangle, REAL_t);
		DefineObjectMember(ID_obj_preview, M_clickxoff, clickxoff, REAL_t);
		DefineObjectMember(ID_obj_preview, M_clickyoff, clickyoff, REAL_t);
		DefineObjectMember(ID_obj_preview, M_model_part_shape_tex, model_part_shape_tex, ARRAY_t);
		DefineObjectMember(ID_obj_preview, M_model_part_shape_material_res, model_part_shape_material_res, ARRAY_t);
		DefineObjectMember(ID_obj_preview, M_model_part_shape_tex_material, model_part_shape_tex_material, ARRAY_t);
		DefineObjectMember(ID_obj_preview, M_value_inherit, value_inherit, ARRAY_t);
		DefineObjectMember(ID_obj_preview, M_model_part_shape_tex_normal, model_part_shape_tex_normal, ARRAY_t);
		DefineObjectMember(ID_obj_preview, M_matrix_render, matrix_render, MATRIX_t);
		DefineObjectMember(ID_obj_preview, M_temp, temp, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_hide, hide, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_text_halign_prev, text_halign_prev, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_text_valign_prev, text_valign_prev, VARIANT_t);
		DefineObjectMember(ID_obj_preview, M_text_aa_prev, text_aa_prev, VARIANT_t);
	}
	
	void obj_recent::InitMembers()
	{
		if (memberMap.contains(ID_obj_recent))
			return;
		
		DefineObjectMember(ID_obj_recent, M_remove, remove, BOOLEAN_t);
		DefineObjectMember(ID_obj_recent, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_recent, M_author, author, VARIANT_t);
		DefineObjectMember(ID_obj_recent, M_description, description, VARIANT_t);
		DefineObjectMember(ID_obj_recent, M_thumbnail, thumbnail, VARIANT_t);
		DefineObjectMember(ID_obj_recent, M_filename, filename, VARIANT_t);
		DefineObjectMember(ID_obj_recent, M_last_opened, last_opened, VARIANT_t);
		DefineObjectMember(ID_obj_recent, M_pinned, pinned, VARIANT_t);
		DefineObjectMember(ID_obj_recent, M_id, id, VARIANT_t);
	}
	
	void obj_resource::InitMembers()
	{
		if (memberMap.contains(ID_obj_resource))
			return;
		
		DefineObjectMember(ID_obj_resource, M_save_id, save_id, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_loaded, loaded, BOOLEAN_t);
		DefineObjectMember(ID_obj_resource, M_creator, creator, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_replaced, replaced, BOOLEAN_t);
		DefineObjectMember(ID_obj_resource, M_ready, ready, BOOLEAN_t);
		DefineObjectMember(ID_obj_resource, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_filename, filename, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_display_name, display_name, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_count, count, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_copied, copied, BOOLEAN_t);
		DefineObjectMember(ID_obj_resource, M_pattern_type, pattern_type, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_model_file, model_file, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_model_format, model_format, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_texture, model_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_texture_map, model_texture_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_texture_material_map, model_texture_material_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_tex_normal_map, model_tex_normal_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_block_map, model_block_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_texture_name_map, model_texture_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_texture_material_name_map, model_texture_material_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_tex_normal_name_map, model_tex_normal_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_shape_texture_name_map, model_shape_texture_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_shape_texture_material_name_map, model_shape_texture_material_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_shape_tex_normal_name_map, model_shape_tex_normal_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_color_name_map, model_color_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_color_map, model_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_shape_hide_list, model_shape_hide_list, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_shape_vbuffer_map, model_shape_vbuffer_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_shape_alpha_map, model_shape_alpha_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_player_skin, player_skin, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_pack_format, pack_format, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_block_sheet_texture, block_sheet_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_block_sheet_texture_material, block_sheet_texture_material, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_block_sheet_tex_normal, block_sheet_tex_normal, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_block_sheet_ani_texture, block_sheet_ani_texture, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_block_sheet_ani_texture_material, block_sheet_ani_texture_material, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_block_sheet_ani_tex_normal, block_sheet_ani_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_block_sheet_depth_list, block_sheet_depth_list, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_block_sheet_ani_depth_list, block_sheet_ani_depth_list, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_block_preview_texture, block_preview_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_colormap_grass_texture, colormap_grass_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_colormap_foliage_texture, colormap_foliage_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_color_grass, color_grass, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_leaves_oak, color_leaves_oak, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_leaves_spruce, color_leaves_spruce, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_leaves_birch, color_leaves_birch, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_leaves_jungle, color_leaves_jungle, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_leaves_acacia, color_leaves_acacia, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_leaves_dark_oak, color_leaves_dark_oak, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_leaves_mangrove, color_leaves_mangrove, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_foliage, color_foliage, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_color_water, color_water, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_sun_texture, sun_texture, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_moonphases_texture, moonphases_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_moon_texture, moon_texture, ARRAY_t);
		DefineObjectMember(ID_obj_resource, M_clouds_texture, clouds_texture, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_glint_entity_texture, glint_entity_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_glint_item_texture, glint_item_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_item_sheet_texture, item_sheet_texture, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_item_sheet_texture_material, item_sheet_texture_material, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_item_sheet_tex_normal, item_sheet_tex_normal, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_item_sheet_size, item_sheet_size, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_particles_texture, particles_texture, ARRAY_t);
		DefineObjectMember(ID_obj_resource, M_particle_texture_atlas_map, particle_texture_atlas_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_particle_texture_uvs_map, particle_texture_uvs_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_particle_texture_pixeluvs_map, particle_texture_pixeluvs_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_block_vbuffer, block_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_scenery_tl_add, scenery_tl_add, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_scenery_tl_list, scenery_tl_list, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_scenery_size, scenery_size, VECTOR_t);
		DefineObjectMember(ID_obj_resource, M_world_regions_dir, world_regions_dir, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_world_box_start, world_box_start, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_world_box_end, world_box_end, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_world_filter_mode, world_filter_mode, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_world_filter_array, world_filter_array, ARRAY_t);
		DefineObjectMember(ID_obj_resource, M_scenery_download_skins, scenery_download_skins, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_scenery_structure, scenery_structure, BOOLEAN_t);
		DefineObjectMember(ID_obj_resource, M_scenery_integrity, scenery_integrity, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_scenery_integrity_invert, scenery_integrity_invert, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_scenery_palette, scenery_palette, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_scenery_palette_size, scenery_palette_size, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_scenery_randomize, scenery_randomize, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_texture, texture, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_font, font, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_font_preview, font_preview, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_font_no_aa, font_no_aa, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_font_minecraft, font_minecraft, BOOLEAN_t);
		DefineObjectMember(ID_obj_resource, M_sound_buffer, sound_buffer, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_sound_index, sound_index, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_sound_samples, sound_samples, REAL_t);
		DefineObjectMember(ID_obj_resource, M_sound_max_sample, sound_max_sample, ARRAY_t);
		DefineObjectMember(ID_obj_resource, M_sound_min_sample, sound_min_sample, ARRAY_t);
		DefineObjectMember(ID_obj_resource, M_load_stage, load_stage, STRING_t);
		DefineObjectMember(ID_obj_resource, M_load_audio_sample, load_audio_sample, REAL_t);
		DefineObjectMember(ID_obj_resource, M_material_format, material_format, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_save, save, BOOLEAN_t);
		DefineObjectMember(ID_obj_resource, M_load_id, load_id, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_spr_font, spr_font, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_model_state_obj, model_state_obj, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_fn, fn, VARIANT_t);
		DefineObjectMember(ID_obj_resource, M_spr_default_material, spr_default_material, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_spr_default_normal, spr_default_normal, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_particle_texture_map, particle_texture_map, INTEGER_t);
		DefineObjectMember(ID_obj_resource, M_sound_file_id, sound_file_id, VARIANT_t);
	}
	
	void obj_scrollbar::InitMembers()
	{
		if (memberMap.contains(ID_obj_scrollbar))
			return;
		
		DefineObjectMember(ID_obj_scrollbar, M_snap_value, snap_value, REAL_t);
		DefineObjectMember(ID_obj_scrollbar, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_scrollbar, M_value_goal, value_goal, VARIANT_t);
		DefineObjectMember(ID_obj_scrollbar, M_press, press, INTEGER_t);
		DefineObjectMember(ID_obj_scrollbar, M_needed, needed, BOOLEAN_t);
		DefineObjectMember(ID_obj_scrollbar, M_atend, atend, BOOLEAN_t);
		DefineObjectMember(ID_obj_scrollbar, M_value_ease, value_ease, BOOLEAN_t);
		DefineObjectMember(ID_obj_scrollbar, M_mouseon, mouseon, BOOLEAN_t);
		DefineObjectMember(ID_obj_scrollbar, M_zoomable, zoomable, BOOLEAN_t);
		DefineObjectMember(ID_obj_scrollbar, M_mousenear, mousenear, INTEGER_t);
	}
	
	void obj_shader::InitMembers()
	{
		if (memberMap.contains(ID_obj_shader))
			return;
		
		DefineObjectMember(ID_obj_shader, M_name, name, STRING_t);
		DefineObjectMember(ID_obj_shader, M_shader, shader, INTEGER_t);
		DefineObjectMember(ID_obj_shader, M_script, script, VARIANT_t);
		DefineObjectMember(ID_obj_shader, M_uniform_map, uniform_map, INTEGER_t);
		DefineObjectMember(ID_obj_shader, M_sampler_map, sampler_map, INTEGER_t);
	}
	
	void obj_sortlist::InitMembers()
	{
		if (memberMap.contains(ID_obj_sortlist))
			return;
		
		DefineObjectMember(ID_obj_sortlist, M_list, list, INTEGER_t);
		DefineObjectMember(ID_obj_sortlist, M_columns, columns, INTEGER_t);
		DefineObjectMember(ID_obj_sortlist, M_column_name, column_name, ARRAY_t);
		DefineObjectMember(ID_obj_sortlist, M_column_text, column_text, ARRAY_t);
		DefineObjectMember(ID_obj_sortlist, M_column_x, column_x, ARRAY_t);
		DefineObjectMember(ID_obj_sortlist, M_column_sort, column_sort, INTEGER_t);
		DefineObjectMember(ID_obj_sortlist, M_sort_asc, sort_asc, REAL_t);
		DefineObjectMember(ID_obj_sortlist, M_search, search, BOOLEAN_t);
		DefineObjectMember(ID_obj_sortlist, M_search_tbx, search_tbx, INTEGER_t);
		DefineObjectMember(ID_obj_sortlist, M_display_list, display_list, INTEGER_t);
		DefineObjectMember(ID_obj_sortlist, M_scroll, scroll, INTEGER_t);
		DefineObjectMember(ID_obj_sortlist, M_script, script, VARIANT_t);
		DefineObjectMember(ID_obj_sortlist, M_can_deselect, can_deselect, BOOLEAN_t);
		DefineObjectMember(ID_obj_sortlist, M_filter_list, filter_list, INTEGER_t);
		DefineObjectMember(ID_obj_sortlist, M_column_w, column_w, ARRAY_t);
		DefineObjectMember(ID_obj_sortlist, M_select, select, VARIANT_t);
	}
	
	void obj_swatch::InitMembers()
	{
		if (memberMap.contains(ID_obj_swatch))
			return;
		
		DefineObjectMember(ID_obj_swatch, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_swatch, M_colors, colors, ARRAY_t);
		DefineObjectMember(ID_obj_swatch, M_color_names, color_names, ARRAY_t);
		DefineObjectMember(ID_obj_swatch, M_map, map, INTEGER_t);
		DefineObjectMember(ID_obj_swatch, M_size, size, VARIANT_t);
	}
	
	void obj_tab::InitMembers()
	{
		if (memberMap.contains(ID_obj_tab))
			return;
		
		DefineObjectMember(ID_obj_tab, M_script, script, VARIANT_t);
		DefineObjectMember(ID_obj_tab, M_panel, panel, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_panel_last, panel_last, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_show, show, REAL_t);
		DefineObjectMember(ID_obj_tab, M_closeable, closeable, BOOLEAN_t);
		DefineObjectMember(ID_obj_tab, M_scroll, scroll, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_glow, glow, VARIANT_t);
		DefineObjectMember(ID_obj_tab, M_category_amount, category_amount, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_category, category, ARRAY_t);
		DefineObjectMember(ID_obj_tab, M_movable, movable, BOOLEAN_t);
		DefineObjectMember(ID_obj_tab, M_header_script, header_script, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_window, window, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_project, project, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_render, render, VARIANT_t);
		DefineObjectMember(ID_obj_tab, M_library, library, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_background, background, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_resources, resources, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_ground_scroll, ground_scroll, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_char_list, char_list, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_item_scroll, item_scroll, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_block_list, block_list, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_special_block_list, special_block_list, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_bodypart_model_list, bodypart_model_list, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_spawn_amount, tbx_spawn_amount, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_spawn_region_sphere_radius, tbx_spawn_region_sphere_radius, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_spawn_region_path_radius, tbx_spawn_region_path_radius, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_spawn_region_cube_size, tbx_spawn_region_cube_size, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_spawn_region_box_xsize, tbx_spawn_region_box_xsize, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_spawn_region_box_ysize, tbx_spawn_region_box_ysize, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_spawn_region_box_zsize, tbx_spawn_region_box_zsize, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_bounding_box_ground_z, tbx_bounding_box_ground_z, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_bounding_box_custom_xstart, tbx_bounding_box_custom_xstart, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_bounding_box_custom_ystart, tbx_bounding_box_custom_ystart, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_bounding_box_custom_zstart, tbx_bounding_box_custom_zstart, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_bounding_box_custom_xend, tbx_bounding_box_custom_xend, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_bounding_box_custom_yend, tbx_bounding_box_custom_yend, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_bounding_box_custom_zend, tbx_bounding_box_custom_zend, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_destroy_at_amount_val, tbx_destroy_at_amount_val, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_destroy_at_time_seconds, tbx_destroy_at_time_seconds, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_destroy_at_time_random, tbx_destroy_at_time_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_type_list, type_list, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_preview_start, preview_start, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_preview_speed, preview_speed, REAL_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_name, tbx_type_name, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_spawn_rate, tbx_type_spawn_rate, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_text, tbx_type_text, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_frame_width, tbx_type_sprite_frame_width, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_frame_height, tbx_type_sprite_frame_height, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_frame_start, tbx_type_sprite_frame_start, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_frame_end, tbx_type_sprite_frame_end, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_animation_speed, tbx_type_sprite_animation_speed, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_animation_speed_random, tbx_type_sprite_animation_speed_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xangle, tbx_type_xangle, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xangle_random, tbx_type_xangle_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yangle, tbx_type_yangle, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yangle_random, tbx_type_yangle_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zangle, tbx_type_zangle, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zangle_random, tbx_type_zangle_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_angle_speed, tbx_type_angle_speed, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_angle_speed_random, tbx_type_angle_speed_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_angle_speed_add, tbx_type_angle_speed_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_angle_speed_add_random, tbx_type_angle_speed_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_angle_speed_mul, tbx_type_angle_speed_mul, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_angle_speed_mul_random, tbx_type_angle_speed_mul_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xspd, tbx_type_xspd, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xspd_random, tbx_type_xspd_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yspd, tbx_type_yspd, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yspd_random, tbx_type_yspd_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zspd, tbx_type_zspd, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zspd_random, tbx_type_zspd_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xspd_add, tbx_type_xspd_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xspd_add_random, tbx_type_xspd_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yspd_add, tbx_type_yspd_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yspd_add_random, tbx_type_yspd_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zspd_add, tbx_type_zspd_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zspd_add_random, tbx_type_zspd_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xspd_mul, tbx_type_xspd_mul, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xspd_mul_random, tbx_type_xspd_mul_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yspd_mul, tbx_type_yspd_mul, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yspd_mul_random, tbx_type_yspd_mul_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zspd_mul, tbx_type_zspd_mul, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zspd_mul_random, tbx_type_zspd_mul_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xrot, tbx_type_xrot, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xrot_random, tbx_type_xrot_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yrot, tbx_type_yrot, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yrot_random, tbx_type_yrot_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zrot, tbx_type_zrot, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zrot_random, tbx_type_zrot_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xrot_spd, tbx_type_xrot_spd, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xrot_spd_random, tbx_type_xrot_spd_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yrot_spd, tbx_type_yrot_spd, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yrot_spd_random, tbx_type_yrot_spd_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zrot_spd, tbx_type_zrot_spd, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zrot_spd_random, tbx_type_zrot_spd_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xrot_spd_add, tbx_type_xrot_spd_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xrot_spd_add_random, tbx_type_xrot_spd_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yrot_spd_add, tbx_type_yrot_spd_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yrot_spd_add_random, tbx_type_yrot_spd_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zrot_spd_add, tbx_type_zrot_spd_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zrot_spd_add_random, tbx_type_zrot_spd_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xrot_spd_mul, tbx_type_xrot_spd_mul, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_xrot_spd_mul_random, tbx_type_xrot_spd_mul_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yrot_spd_mul, tbx_type_yrot_spd_mul, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_yrot_spd_mul_random, tbx_type_yrot_spd_mul_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zrot_spd_mul, tbx_type_zrot_spd_mul, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_zrot_spd_mul_random, tbx_type_zrot_spd_mul_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_angle, tbx_type_sprite_angle, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_angle_random, tbx_type_sprite_angle_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_angle_add, tbx_type_sprite_angle_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_sprite_angle_add_random, tbx_type_sprite_angle_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_scale, tbx_type_scale, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_scale_random, tbx_type_scale_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_scale_add, tbx_type_scale_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_scale_add_random, tbx_type_scale_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_alpha, tbx_type_alpha, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_alpha_random, tbx_type_alpha_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_alpha_add, tbx_type_alpha_add, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_alpha_add_random, tbx_type_alpha_add_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_color_mix_time, tbx_type_color_mix_time, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_color_mix_time_random, tbx_type_color_mix_time_random, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_type_bounce_factor, tbx_type_bounce_factor, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_interval_size, tbx_interval_size, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_interval_offset, tbx_interval_offset, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_marker_name, tbx_marker_name, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_search, tbx_search, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_tbx_rename, tbx_rename, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_list_width, list_width, VARIANT_t);
		DefineObjectMember(ID_obj_tab, M_hor_scroll, hor_scroll, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_hor_scroll_tl, hor_scroll_tl, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_ver_scroll, ver_scroll, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_info, info, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_hierarchy, hierarchy, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_appearance, appearance, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_audio, audio, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_path, path, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_transform, transform, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_constraints_path, constraints_path, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_constraints, constraints, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_material, material, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_particles, particles, VARIANT_t);
		DefineObjectMember(ID_obj_tab, M_light, light, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_camera, camera, VARIANT_t);
		DefineObjectMember(ID_obj_tab, M_sound, sound, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_text, text, VARIANT_t);
		DefineObjectMember(ID_obj_tab, M_item, item, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_keyframe, keyframe, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_program, program, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_interface_, interface_, INTEGER_t);
		DefineObjectMember(ID_obj_tab, M_controls, controls, INTEGER_t);
	}
	
	void obj_template::InitMembers()
	{
		if (memberMap.contains(ID_obj_template))
			return;
		
		DefineObjectMember(ID_obj_template, M_save_id, save_id, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model, model, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_tex, model_tex, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_tex_material, model_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_tex_normal, model_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_tex, item_tex, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_slot, item_slot, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_3d, item_3d, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_res, item_res, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_material_res, item_material_res, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_normal_res, item_normal_res, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_custom_slot, item_custom_slot, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_vbuffer, item_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_tex_material, item_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_tex_normal, item_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_block_tex, block_tex, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_block_tex_material, block_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_block_tex_normal, block_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_scenery, scenery, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex, shape_tex, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_material, shape_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_normal, shape_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_text_font, text_font, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_loaded, loaded, BOOLEAN_t);
		DefineObjectMember(ID_obj_template, M_creator, creator, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_display_name, display_name, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_count, count, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_rot_point, rot_point, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_name, model_name, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_texture_name_map, model_texture_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_texture_material_name_map, model_texture_material_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_tex_normal_name_map, model_tex_normal_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_shape_texture_name_map, model_shape_texture_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_shape_texture_material_name_map, model_shape_texture_material_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_shape_tex_normal_name_map, model_shape_tex_normal_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_color_name_map, model_color_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_color_map, model_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_shape_vbuffer_map, model_shape_vbuffer_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_shape_alpha_map, model_shape_alpha_map, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_hide_list, model_hide_list, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_shape_hide_list, model_shape_hide_list, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_model_file, model_file, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_state, model_state, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_part_name, model_part_name, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_part, model_part, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_use_blend_color, model_use_blend_color, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_blend_color, model_blend_color, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_blend_color_default, model_blend_color_default, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_load_update_tree, load_update_tree, BOOLEAN_t);
		DefineObjectMember(ID_obj_template, M_pattern_type, pattern_type, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pattern_base_color, pattern_base_color, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pattern_pattern_list, pattern_pattern_list, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pattern_color_list, pattern_color_list, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pattern_skin, pattern_skin, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_armor_array, armor_array, ARRAY_t);
		DefineObjectMember(ID_obj_template, M_armor_skin_array, armor_skin_array, ARRAY_t);
		DefineObjectMember(ID_obj_template, M_item_face_camera, item_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_bounce, item_bounce, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_item_spin, item_spin, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_legacy_item_sheet, legacy_item_sheet, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_block_name, block_name, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_block_state, block_state, ARRAY_t);
		DefineObjectMember(ID_obj_template, M_block_vbuffer, block_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_block_repeat_enable, block_repeat_enable, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_block_repeat, block_repeat, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_block_randomize, block_randomize, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_vbuffer, shape_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_mapped, shape_tex_mapped, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_hoffset, shape_tex_hoffset, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_voffset, shape_tex_voffset, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_hrepeat, shape_tex_hrepeat, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_vrepeat, shape_tex_vrepeat, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_hmirror, shape_tex_hmirror, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_tex_vmirror, shape_tex_vmirror, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_closed, shape_closed, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_invert, shape_invert, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_detail, shape_detail, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_shape_face_camera, shape_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_text_3d, text_3d, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_text_face_camera, text_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_type_list, pc_type_list, INTEGER_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_region_path, pc_spawn_region_path, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_save, save, BOOLEAN_t);
		DefineObjectMember(ID_obj_template, M_load_id, load_id, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_model_version, model_version, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_constant, pc_spawn_constant, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_amount, pc_spawn_amount, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_region_use, pc_spawn_region_use, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_region_type, pc_spawn_region_type, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_region_sphere_radius, pc_spawn_region_sphere_radius, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_region_cube_size, pc_spawn_region_cube_size, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_region_box_size, pc_spawn_region_box_size, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_spawn_region_path_radius, pc_spawn_region_path_radius, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_bounding_box_type, pc_bounding_box_type, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_bounding_box_ground_z, pc_bounding_box_ground_z, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_bounding_box_custom_start, pc_bounding_box_custom_start, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_bounding_box_custom_end, pc_bounding_box_custom_end, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_bounding_box_relative, pc_bounding_box_relative, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_animation_finish, pc_destroy_at_animation_finish, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_amount, pc_destroy_at_amount, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_amount_val, pc_destroy_at_amount_val, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_time, pc_destroy_at_time, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_time_seconds, pc_destroy_at_time_seconds, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_time_israndom, pc_destroy_at_time_israndom, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_time_random_min, pc_destroy_at_time_random_min, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_time_random_max, pc_destroy_at_time_random_max, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_pc_destroy_at_bounding_box, pc_destroy_at_bounding_box, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_legacy_model_name, legacy_model_name, VARIANT_t);
		DefineObjectMember(ID_obj_template, M_legacy_bodypart_id, legacy_bodypart_id, REAL_t);
		DefineObjectMember(ID_obj_template, M_pc_type_amount, pc_type_amount, REAL_t);
		DefineObjectMember(ID_obj_template, M_shape_type, shape_type, REAL_t);
		DefineObjectMember(ID_obj_template, M_part_of, part_of, VARIANT_t);
	}
	
	void obj_textbox::InitMembers()
	{
		if (memberMap.contains(ID_obj_textbox))
			return;
		
		DefineObjectMember(ID_obj_textbox, M_text, text, VARIANT_t);
		DefineObjectMember(ID_obj_textbox, M_single_line, single_line, REAL_t);
		DefineObjectMember(ID_obj_textbox, M_read_only, read_only, REAL_t);
		DefineObjectMember(ID_obj_textbox, M_max_chars, max_chars, INTEGER_t);
		DefineObjectMember(ID_obj_textbox, M_filter_chars, filter_chars, STRING_t);
		DefineObjectMember(ID_obj_textbox, M_replace_char, replace_char, STRING_t);
		DefineObjectMember(ID_obj_textbox, M_select_on_focus, select_on_focus, REAL_t);
		DefineObjectMember(ID_obj_textbox, M_color_selected, color_selected, REAL_t);
		DefineObjectMember(ID_obj_textbox, M_color_selection, color_selection, REAL_t);
		DefineObjectMember(ID_obj_textbox, M_suffix, suffix, VARIANT_t);
		DefineObjectMember(ID_obj_textbox, M_start, start, VARIANT_t);
		DefineObjectMember(ID_obj_textbox, M_lines, lines, VARIANT_t);
		DefineObjectMember(ID_obj_textbox, M_line, line, ARRAY_t);
		DefineObjectMember(ID_obj_textbox, M_line_wrap, line_wrap, ARRAY_t);
		DefineObjectMember(ID_obj_textbox, M_line_single, line_single, ARRAY_t);
		DefineObjectMember(ID_obj_textbox, M_chars, chars, INTEGER_t);
		DefineObjectMember(ID_obj_textbox, M_last_text, last_text, VARIANT_t);
		DefineObjectMember(ID_obj_textbox, M_last_width, last_width, VARIANT_t);
		DefineObjectMember(ID_obj_textbox, M_jumpto, jumpto, BOOLEAN_t);
	}
	
	void obj_theme::InitMembers()
	{
		if (memberMap.contains(ID_obj_theme))
			return;
		
		DefineObjectMember(ID_obj_theme, M_name, name, STRING_t);
		DefineObjectMember(ID_obj_theme, M_dark, dark, BOOLEAN_t);
		DefineObjectMember(ID_obj_theme, M_pattern, pattern, REAL_t);
		DefineObjectMember(ID_obj_theme, M_accent_list, accent_list, ARRAY_t);
		DefineObjectMember(ID_obj_theme, M_level_top, level_top, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_level_middle, level_middle, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_level_bottom, level_bottom, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_viewport_top, viewport_top, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_viewport_bottom, viewport_bottom, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_text_main, text_main, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_text_secondary, text_secondary, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_text_tertiary, text_tertiary, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_border, border, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_overlay, overlay, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_button_text, button_text, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_button_text_alpha, button_text_alpha, REAL_t);
		DefineObjectMember(ID_obj_theme, M_dark_overlay_alpha, dark_overlay_alpha, REAL_t);
		DefineObjectMember(ID_obj_theme, M_red_error, red_error, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_yellow_warning, yellow_warning, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_green_success, green_success, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_red, red, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_green, green, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_blue, blue, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_pink, pink, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_cyan, cyan, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_yellow, yellow, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_magenta, magenta, VARIANT_t);
		DefineObjectMember(ID_obj_theme, M_toast_color, toast_color, ARRAY_t);
	}
	
	void obj_timeline::InitMembers()
	{
		if (memberMap.contains(ID_obj_timeline))
			return;
		
		DefineObjectMember(ID_obj_timeline, M_save_id, save_id, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_value, value, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_value_inherit, value_inherit, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_update_matrix, update_matrix, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_glint_tex, glint_tex, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_temp, temp, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_part_of, part_of, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_delete_ready, delete_ready, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_id, id, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_selected, selected, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_select, keyframe_select, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_list, keyframe_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_select_amount, keyframe_select_amount, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_value_type_show, value_type_show, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_parent_is_selected, parent_is_selected, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_parent, parent, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_tree_list, tree_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_part_list, part_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_type, type, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_particle_list, particle_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_texture_name_map, model_texture_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_texture_material_name_map, model_texture_material_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_tex_normal_name_map, model_tex_normal_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_hide_list, model_hide_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_color_name_map, model_color_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_color_map, model_color_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_shape_vbuffer_map, model_shape_vbuffer_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_shape_alpha_map, model_shape_alpha_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_cam_surf, cam_surf, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_cam_surf_tmp, cam_surf_tmp, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_loaded, loaded, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_type_name, type_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_name, name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_display_name, display_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text, text, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_color_tag, color_tag, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_color_tag_inherit, color_tag_inherit, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_lock, lock, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_hide, hide, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ghost, ghost, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_depth, depth, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_part, model_part, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_part_name, model_part_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_part_root, part_root, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_scenery_animate, scenery_animate, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_value_default, value_default, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_value_type, value_type, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_show_tool_position, show_tool_position, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_prev, keyframe_prev, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_current, keyframe_current, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_next, keyframe_next, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_progress, keyframe_progress, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_animate, keyframe_animate, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_current_values, keyframe_current_values, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_next_values, keyframe_next_values, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_world_pos, world_pos, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_world_pos_rotate, world_pos_rotate, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_world_pos_2d, world_pos_2d, VECTOR_t);
		DefineObjectMember(ID_obj_timeline, M_world_pos_2d_error, world_pos_2d_error, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_colors_ext, colors_ext, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_part_mixing_shapes, part_mixing_shapes, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_level, level, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_level_display, level_display, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_parent_filter, parent_filter, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_lock_bend, lock_bend, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_tree_array, tree_array, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_tree_list_filter, tree_list_filter, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_tree_extend, tree_extend, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_tree_contents, tree_contents, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_list_mouseon, list_mouseon, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_position, inherit_position, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_rotation, inherit_rotation, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_rot_point, inherit_rot_point, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_scale, inherit_scale, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_alpha, inherit_alpha, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_color, inherit_color, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_visibility, inherit_visibility, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_bend, inherit_bend, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_texture, inherit_texture, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_surface, inherit_surface, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_subsurface, inherit_subsurface, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_glow_color, inherit_glow_color, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_select, inherit_select, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_inherit_pose, inherit_pose, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_scale_resize, scale_resize, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_rot_point_custom, rot_point_custom, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_rot_point, rot_point, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_rot_point_render, rot_point_render, VECTOR_t);
		DefineObjectMember(ID_obj_timeline, M_backfaces, backfaces, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_texture_blur, texture_blur, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_texture_filtering, texture_filtering, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_shadows, shadows, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ssao, ssao, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_glow, glow, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_glow_texture, glow_texture, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_only_render_glow, only_render_glow, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_fog, fog, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_wind, wind, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_wind_terrain, wind_terrain, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_hq_hiding, hq_hiding, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_lq_hiding, lq_hiding, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_blend_mode, blend_mode, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_alpha_mode, alpha_mode, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_glint_mode, glint_mode, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_glint_scale, glint_scale, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_glint_speed, glint_speed, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_glint_strength, glint_strength, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_cam_surf_required, cam_surf_required, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_cam_goalzoom, cam_goalzoom, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_matrix, matrix, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_matrix_render, matrix_render, MATRIX_t);
		DefineObjectMember(ID_obj_timeline, M_matrix_parent, matrix_parent, MATRIX_t);
		DefineObjectMember(ID_obj_timeline, M_matrix_parent_pre_ik, matrix_parent_pre_ik, MATRIX_t);
		DefineObjectMember(ID_obj_timeline, M_matrix_local, matrix_local, MATRIX_t);
		DefineObjectMember(ID_obj_timeline, M_bend_rot_last, bend_rot_last, VECTOR_t);
		DefineObjectMember(ID_obj_timeline, M_bend_model_part_last, bend_model_part_last, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_pattern_type, pattern_type, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_pattern_base_color, pattern_base_color, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_pattern_pattern_list, pattern_pattern_list, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_pattern_color_list, pattern_color_list, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_pattern_skin, pattern_skin, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_text_vbuffer, text_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_texture, text_texture, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_string, text_string, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_res, text_res, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_3d, text_3d, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_halign_prev, text_halign_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_valign_prev, text_valign_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_aa_prev, text_aa_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_item_vbuffer, item_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_item_slot, item_slot, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_item_res, item_res, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_item_material_res, item_material_res, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_item_normal_res, item_normal_res, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_item_3d, item_3d, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_item_custom_slot, item_custom_slot, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_render_res_diffuse, render_res_diffuse, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_render_res_material, render_res_material, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_render_res_normal, render_res_normal, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_tex_obj, tex_obj, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_tex_obj_prev, tex_obj_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_tex, model_tex, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_tex_material, model_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_tex_normal, model_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_render_visible, render_visible, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_placed, placed, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_parent_is_placed, parent_is_placed, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_path_update, path_update, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_path_points_list, path_points_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_path_smooth, path_smooth, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_closed, path_closed, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_detail, path_detail, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_table, path_table, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_path_table_matrix, path_table_matrix, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_path_length, path_length, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_path_shape_generate, path_shape_generate, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_shape_radius, path_shape_radius, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_shape_tex_length, path_shape_tex_length, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_shape_invert, path_shape_invert, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_shape_tube, path_shape_tube, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_shape_detail, path_shape_detail, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_shape_smooth_segments, path_shape_smooth_segments, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_shape_smooth_ring, path_shape_smooth_ring, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_vbuffer, path_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_path_select_vbuffer, path_select_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ik_target_prev, ik_target_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ik_target_pos, ik_target_pos, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ik_target_angle_prev, ik_target_angle_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ik_target_angle_pos, ik_target_angle_pos, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ik_matrix_prev, ik_matrix_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ik_angle_offset_prev, ik_angle_offset_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_ik_blend_prev, ik_blend_prev, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_part_matrix_update_ik, part_matrix_update_ik, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_part_joints_pos, part_joints_pos, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_part_joints_matrix, part_joints_matrix, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_part_joints_bone_matrix, part_joints_bone_matrix, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_part_joint_bend_angle, part_joint_bend_angle, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_bend_end_offset, bend_end_offset, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_bend_part, bend_part, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_bend_axis, bend_axis, VECTOR_t);
		DefineObjectMember(ID_obj_timeline, M_position, position, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_rotation, rotation, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_tree_visible_list, tree_visible_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_project_timeline_list, project_timeline_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_indent_level, indent_level, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_save, save, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_model_name, model_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_state, model_state, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_block_name, block_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_block_state, block_state, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_load_id, load_id, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_array, keyframe_array, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_parent_tree_index, parent_tree_index, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_legacy_bodypart_id, legacy_bodypart_id, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_part_amount, part_amount, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_amount, keyframe_amount, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_wind_amount, wind_amount, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_color, color, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_part_parent_save_id, part_parent_save_id, STRING_t);
		DefineObjectMember(ID_obj_timeline, M_model_file, model_file, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_shape_texture_name_map, model_shape_texture_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_shape_texture_material_name_map, model_shape_texture_material_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_shape_tex_normal_name_map, model_shape_tex_normal_name_map, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model_shape_hide_list, model_shape_hide_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_block_tex, block_tex, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_block_tex_material, block_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_block_tex_normal, block_tex_normal, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_block_repeat_enable, block_repeat_enable, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_block_repeat, block_repeat, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_block_vbuffer, block_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_block_randomize, block_randomize, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_font, text_font, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_text_face_camera, text_face_camera, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_progress_ease, keyframe_progress_ease, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_keyframe_transition, keyframe_transition, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_fire, fire, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_spawn_queue_start, spawn_queue_start, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_part_tex_name, model_part_tex_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_part_tex_material_name, model_part_tex_material_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_part_tex_normal_name, model_part_tex_normal_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_part_shape_tex, model_part_shape_tex, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_model_part_shape_tex_material, model_part_shape_tex_material, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_model_part_shape_tex_normal, model_part_shape_tex_normal, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_model_part_shape_material_res, model_part_shape_material_res, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_is_timeline, is_timeline, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_spawn_currentstep, spawn_currentstep, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_select, select, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_spawn_laststep, spawn_laststep, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_spawn_active, spawn_active, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_spawn_queue_amount, spawn_queue_amount, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_spawn_queue, spawn_queue, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_single_fire_count, single_fire_count, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_moved, moved, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_root_copy, root_copy, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_copy, copy, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_tl, tl, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_i, i, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_model, model, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_use_blend_color, model_use_blend_color, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_blend_color, model_blend_color, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_model_blend_color_default, model_blend_color_default, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_move_parent, move_parent, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_move_parent_tree_index, move_parent_tree_index, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_default_matrix, default_matrix, MATRIX_t);
		DefineObjectMember(ID_obj_timeline, M_shape_list, shape_list, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_update_values, update_values, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_item_tex, item_tex, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_show, background_ground_show, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_name, background_ground_name, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_tex, background_ground_tex, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_tex_material, background_ground_tex_material, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_ani, background_ground_ani, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_ani_texture, background_ground_ani_texture, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_texture, background_ground_texture, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_material_ani, background_ground_material_ani, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_ani_texture_material, background_ground_ani_texture_material, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_texture_material, background_ground_texture_material, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_normal_ani, background_ground_normal_ani, BOOLEAN_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_ani_texture_normal, background_ground_ani_texture_normal, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_texture_normal, background_ground_texture_normal, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_background_ground_vbuffer, background_ground_vbuffer, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_sky_clouds_show, background_sky_clouds_show, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_sky_clouds_tex, background_sky_clouds_tex, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_sky_clouds_final, background_sky_clouds_final, INTEGER_t);
		DefineObjectMember(ID_obj_timeline, M_background_clouds_alpha, background_clouds_alpha, REAL_t);
		DefineObjectMember(ID_obj_timeline, M_background_fog_show, background_fog_show, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_fog_sky, background_fog_sky, VARIANT_t);
		DefineObjectMember(ID_obj_timeline, M_background_sky_clouds_vbuffer_pos, background_sky_clouds_vbuffer_pos, ARRAY_t);
		DefineObjectMember(ID_obj_timeline, M_background_sky_clouds_vbuffer, background_sky_clouds_vbuffer, VARIANT_t);
	}
	
	void obj_toast::InitMembers()
	{
		if (memberMap.contains(ID_obj_toast))
			return;
		
		DefineObjectMember(ID_obj_toast, M_toast_y, toast_y, REAL_t);
		DefineObjectMember(ID_obj_toast, M_toast_goal_y, toast_goal_y, REAL_t);
		DefineObjectMember(ID_obj_toast, M_toast_width, toast_width, REAL_t);
		DefineObjectMember(ID_obj_toast, M_toast_height, toast_height, REAL_t);
		DefineObjectMember(ID_obj_toast, M_remove, remove, BOOLEAN_t);
		DefineObjectMember(ID_obj_toast, M_mouseon, mouseon, BOOLEAN_t);
		DefineObjectMember(ID_obj_toast, M_text, text, VARIANT_t);
		DefineObjectMember(ID_obj_toast, M_icon, icon, VARIANT_t);
		DefineObjectMember(ID_obj_toast, M_variant, variant, VARIANT_t);
		DefineObjectMember(ID_obj_toast, M_actions, actions, INTEGER_t);
		DefineObjectMember(ID_obj_toast, M_remove_alpha, remove_alpha, REAL_t);
		DefineObjectMember(ID_obj_toast, M_time_created, time_created, INTEGER_t);
		DefineObjectMember(ID_obj_toast, M_dismiss_time, dismiss_time, REAL_t);
		DefineObjectMember(ID_obj_toast, M_iid, iid, VARIANT_t);
	}
	
	void obj_videoquality::InitMembers()
	{
		if (memberMap.contains(ID_obj_videoquality))
			return;
		
		DefineObjectMember(ID_obj_videoquality, M_bit_rate, bit_rate, REAL_t);
		DefineObjectMember(ID_obj_videoquality, M_name, name, VARIANT_t);
	}
	
	void obj_videotemplate::InitMembers()
	{
		if (memberMap.contains(ID_obj_videotemplate))
			return;
		
		DefineObjectMember(ID_obj_videotemplate, M_width, width, VARIANT_t);
		DefineObjectMember(ID_obj_videotemplate, M_height, height, VARIANT_t);
		DefineObjectMember(ID_obj_videotemplate, M_name, name, VARIANT_t);
	}
	
	void obj_view::InitMembers()
	{
		if (memberMap.contains(ID_obj_view))
			return;
		
		DefineObjectMember(ID_obj_view, M_show, show, REAL_t);
		DefineObjectMember(ID_obj_view, M_location, location, STRING_t);
		DefineObjectMember(ID_obj_view, M_location_last, location_last, STRING_t);
		DefineObjectMember(ID_obj_view, M_surface, surface, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_surface_depth, surface_depth, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_surface_depth_value, surface_depth_value, REAL_t);
		DefineObjectMember(ID_obj_view, M_surface_select, surface_select, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_surface_camera, surface_camera, INTEGER_t);
		DefineObjectMember(ID_obj_view, M_mouseon, mouseon, BOOLEAN_t);
		DefineObjectMember(ID_obj_view, M_control_mouseon, control_mouseon, INTEGER_t);
		DefineObjectMember(ID_obj_view, M_control_mouseon_last, control_mouseon_last, INTEGER_t);
		DefineObjectMember(ID_obj_view, M_render, render, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_width, width, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_height, height, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_toolbar_height, toolbar_height, REAL_t);
		DefineObjectMember(ID_obj_view, M_toolbar_mouseon, toolbar_mouseon, BOOLEAN_t);
		DefineObjectMember(ID_obj_view, M_toolbar_alpha, toolbar_alpha, REAL_t);
		DefineObjectMember(ID_obj_view, M_toolbar_alpha_goal, toolbar_alpha_goal, REAL_t);
		DefineObjectMember(ID_obj_view, M_overlays, overlays, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_aspect_ratio, aspect_ratio, REAL_t);
		DefineObjectMember(ID_obj_view, M_grid, grid, REAL_t);
		DefineObjectMember(ID_obj_view, M_gizmos, gizmos, REAL_t);
		DefineObjectMember(ID_obj_view, M_effects, effects, REAL_t);
		DefineObjectMember(ID_obj_view, M_particles, particles, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_quality, quality, INTEGER_t);
		DefineObjectMember(ID_obj_view, M_camera, camera, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_title, title, VARIANT_t);
		DefineObjectMember(ID_obj_view, M_lights, lights, INTEGER_t);
		DefineObjectMember(ID_obj_view, M_update_depth, update_depth, BOOLEAN_t);
	}
	
	void micro_animation::InitMembers()
	{
		DefineObjectFunction(ID_micro_animation, M_update, { update(a[0]); return VarType(); })
		
		if (memberMap.contains(ID_micro_animation))
			return;
		
		DefineObjectMember(ID_micro_animation, M_key, key, STRING_t);
		DefineObjectMember(ID_micro_animation, M_steps_alive, steps_alive, INTEGER_t);
		DefineObjectMember(ID_micro_animation, M_steps_hidden, steps_hidden, INTEGER_t);
		DefineObjectMember(ID_micro_animation, M_active, active, VARIANT_t);
		DefineObjectMember(ID_micro_animation, M_hover, hover, VARIANT_t);
		DefineObjectMember(ID_micro_animation, M_holding, holding, INTEGER_t);
		DefineObjectMember(ID_micro_animation, M_disable, disable, INTEGER_t);
		DefineObjectMember(ID_micro_animation, M_custom, custom, VARIANT_t);
		DefineObjectMember(ID_micro_animation, M_fade, fade, INTEGER_t);
		DefineObjectMember(ID_micro_animation, M_goal_value, goal_value, VARIANT_t);
		DefineObjectMember(ID_micro_animation, M_goal_ease, goal_ease, VARIANT_t);
	}
	
	void value_animation::InitMembers()
	{
		DefineObjectFunction(ID_value_animation, M_init, { init(a[0]); return VarType(); })
		DefineObjectFunction(ID_value_animation, M_update, { return update(a[0]); })
		
		if (memberMap.contains(ID_value_animation))
			return;
		
		DefineObjectMember(ID_value_animation, M_value, value, VARIANT_t);
		DefineObjectMember(ID_value_animation, M_value_prev, value_prev, VARIANT_t);
		DefineObjectMember(ID_value_animation, M_value_ani_linear, value_ani_linear, VARIANT_t);
		DefineObjectMember(ID_value_animation, M_value_ani_ease, value_ani_ease, VARIANT_t);
		DefineObjectMember(ID_value_animation, M_value_base, value_base, VARIANT_t);
		DefineObjectMember(ID_value_animation, M_value_offset, value_offset, VARIANT_t);
		DefineObjectMember(ID_value_animation, M_value_ani_offset, value_ani_offset, VARIANT_t);
		DefineObjectMember(ID_value_animation, M_value_ani_offset_ease, value_ani_offset_ease, VARIANT_t);
		DefineObjectMember(ID_value_animation, M_value_goal, value_goal, VARIANT_t);
	}
	
	void frustum::InitMembers()
	{
		DefineObjectFunction(ID_frustum, M_reset, { reset(); return VarType(); })
		DefineObjectFunction(ID_frustum, M_build, { build(a[0], a.Size() > 1 ? a[1] : VarType(false)); return VarType(); })
		DefineObjectFunction(ID_frustum, M_add_triangle, { add_triangle(a[0], a[1], a[2]); return VarType(); })
		DefineObjectFunction(ID_frustum, M_build_vbuffer, { build_vbuffer(a.Size() > 0 ? a[0] : VarType(c_white)); return VarType(); })
		
		if (memberMap.contains(ID_frustum))
			return;
		
		DefineObjectMember(ID_frustum, M_active, active, VARIANT_t);
		DefineObjectMember(ID_frustum, M_vbuffer, vbuffer, VARIANT_t);
		DefineObjectMember(ID_frustum, M_corners, corners, ARRAY_t);
		DefineObjectMember(ID_frustum, M_near_, near_, REAL_t);
		DefineObjectMember(ID_frustum, M_far_, far_, REAL_t);
		DefineObjectMember(ID_frustum, M_matView, matView, VARIANT_t);
		DefineObjectMember(ID_frustum, M_matProj, matProj, VARIANT_t);
		DefineObjectMember(ID_frustum, M_matBias, matBias, VARIANT_t);
		DefineObjectMember(ID_frustum, M_clipEndDepth, clipEndDepth, REAL_t);
		DefineObjectMember(ID_frustum, M_p, p, ARRAY_t);
	}
	
	void StringType::AddGMLStrings()
	{
		Add("");
		Add("There was an error with the Mine-imator startup.\n");
		Add("Make sure you have administrative rights (Right click->Run as administrator) or try re-installing the program in a different location.");
		Add("cube");
		Add("block");
		Add("blockstatevalue");
		Add("Created");
		Add(".zip");
		Add("model");
		Add("modelstatevalue");
		Add(".png");
		Add("Saved render settings");
		Add("alertrendersaved");
		Add("render");
		Add("Loaded render settings");
		Add("alertreloadobjects");
		Add("questionresetrender");
		Add(".mirender");
		Add("questionbuffersizewarning");
		Add("questionrestorecontrols");
		Add("/");
		Add(" ");
		Add("settingscameralockmousemessage");
		Add("Mine-imator");
		Add("questionconfirmopen");
		Add("questionsave");
		Add("questiondontsave");
		Add("questioncancel");
		Add("Returning to home screen");
		Add("startup");
		Add("caption");
		Add("alertrestartprogram");
		Add("questionunlimitedvalues");
		Add("watermark");
		Add("drag");
		Add("rendercontrol");
		Add("erroropenkeyframes");
		Add(".miframes");
		Add("Opening keyframes");
		Add("Opening legacy keyframes");
		Add("is_model");
		Add("tempo");
		Add("keyframes");
		Add("length");
		Add("position");
		Add("part_name");
		Add("values");
		Add("Loaded ");
		Add(" keyframes");
		Add("timelinemovekeyframes");
		Add("timelineresizesounds");
		Add("timelinemarkernew");
		Add("timelinemove");
		Add("export_movie");
		Add("Export image");
		Add("Hidden");
		Add("Render background");
		Add("Watermark");
		Add("High Quality");
		Add("Size");
		Add("export_image");
		Add("mp4");
		Add("mov");
		Add("wmv");
		Add("png");
		Add("asf");
		Add("Export movie");
		Add("Format");
		Add("Bitrate");
		Add("Framerate");
		Add("Audio");
		Add("Error when exporting, error code");
		Add("errorexportmovie");
		Add("Error adding audio file, error code");
		Add("Error adding sound, error code");
		Add("Export image sequence");
		Add("\n");
		Add("questionconfirmnew");
		Add("erroropenprojectexists");
		Add(".backup1");
		Add("Redo");
		Add("alertprojectsaved");
		Add("Undo");
		Add("new_assets");
		Add("load_assets");
		Add("questionconfirmexit");
		Add("Closing...");
		Add("id");
		Add("status");
		Add("http_status");
		Add("result");
		Add("versions");
		Add("version");
		Add("format");
		Add("changes");
		Add("image");
		Add("alertnewassets");
		Add("New assets found");
		Add("Using the latest assets");
		Add("sizeDownloaded");
		Add("contentLength");
		Add(".midata");
		Add("errorloadassets");
		Add("default");
		Add("title");
		Add("text");
		Add("icon");
		Add("website");
		Add("forums");
		Add("save");
		Add("download");
		Add("cake");
		Add("upgrade");
		Add("button");
		Add("buttonurl");
		Add("saveclose");
		Add("alertclose");
		Add("Failed to decode");
		Add("errordownloadskininternet");
		Add("errordownloadskinuser");
		Add("place");
		Add("backup");
		Add("file");
		Add("edit");
		Add("tools");
		Add("viewport");
		Add("timeline");
		Add("camera");
		Add("texfilter");
		Add("ssao");
		Add("shadows");
		Add("subsurface");
		Add("indirect");
		Add("reflections");
		Add("glow");
		Add("glow_falloff");
		Add("aa");
		Add("light_management");
		Add("models_scenery");
		Add("glint");
		Add("sunlight");
		Add("sky");
		Add("clouds");
		Add("ground");
		Add("fog");
		Add("wind");
		Add("follow_path");
		Add("rotatepoint");
		Add("ik");
		Add("followrot");
		Add("followpos");
		Add("followscale");
		Add("path_shape");
		Add("path_shape_tube");
		Add("light_management_cam");
		Add("aperture");
		Add("camshake");
		Add("dof");
		Add("dof_fringe");
		Add("bloom");
		Add("lensdirt");
		Add("clrcor");
		Add("grain");
		Add("vignette");
		Add("ca");
		Add("distort");
		Add("itemslot");
		Add("material_color");
		Add("material_surface");
		Add("material_subsurface");
		Add("textoutline");
		Add("tl_glint");
		Add("rubik_medium.ttf");
		Add("noto_bold.ttf");
		Add("noto_regular.ttf");
		Add("notomono_regular.ttf");
		Add("rubik_semibold.ttf");
		Add("/New Project.miproject");
		Add("typechar");
		Add("typebodypart");
		Add("typemodel");
		Add("typeitem");
		Add("typescenery");
		Add("typeblock");
		Add("typespblock");
		Add("typeshape");
		Add("typetext");
		Add("typepath");
		Add("typecamera");
		Add("typeparticles");
		Add("typelightsource");
		Add("typeaudio");
		Add("typebackground");
		Add("charname");
		Add("blockname");
		Add("spblockname");
		Add("bodypartmodelname");
		Add("particlepresetname");
		Add("left_secondary");
		Add("right_secondary");
		Add("bottom");
		Add("top");
		Add("left");
		Add("right");
		Add("welcome");
		Add("about");
		Add("newproject");
		Add("saveas");
		Add("loading");
		Add("downloadskin");
		Add("importimage");
		Add("importitemsheet");
		Add("exportmovie");
		Add("exportimage");
		Add("advanced");
		Add("modelbench");
		Add("patterneditor");
		Add("armoreditor");
		Add("project");
		Add("%");
		Add("library");
		Add("libname");
		Add("libtype");
		Add("libinstances");
		Add("background");
		Add("°");
		Add("-:0123456789");
		Add("resources");
		Add("resname");
		Add("restype");
		Add("rescount");
		Add("particleeditortypename");
		Add("particleeditortypekind");
		Add("particleeditortyperate");
		Add("timelineeditorinfo");
		Add("timelineeditorhierarchy");
		Add("timelineeditorappearance");
		Add("timelineeditoraudio");
		Add("timelineeditorpath");
		Add("frameeditortransform");
		Add("frameeditorconstraintspath");
		Add("frameeditorconstraints");
		Add("frameeditormaterial");
		Add("frameeditorparticles");
		Add("frameeditorlight");
		Add("frameeditorcamera");
		Add("frameeditorsound");
		Add("frameeditortext");
		Add("frameeditoritem");
		Add("frameeditorkeyframe");
		Add("settingsprogram");
		Add("settingsinterface");
		Add("settingscontrols");
		Add("projectnew");
		Add("N");
		Add("projectopen");
		Add("O");
		Add("projectsave");
		Add("S");
		Add("projectsaveas");
		Add("importasset");
		Add("I");
		Add("undo");
		Add("Z");
		Add("redo");
		Add("Y");
		Add("timelinedelete");
		Add("R");
		Add("timelineduplicate");
		Add("D");
		Add("timelineselect");
		Add("A");
		Add("timelinehide");
		Add("H");
		Add("timelineshowhidden");
		Add("createfolder");
		Add("F");
		Add("keyframescreate");
		Add("Q");
		Add("keyframescopy");
		Add("C");
		Add("keyframescut");
		Add("X");
		Add("keyframespaste");
		Add("V");
		Add("keyframesdelete");
		Add("play");
		Add("playbeginning");
		Add("markerleft");
		Add("markerright");
		Add("rendermode");
		Add("particlesspawn");
		Add("particlesclear");
		Add("secondaryview");
		Add("toolselect");
		Add("W");
		Add("toolmove");
		Add("G");
		Add("toolrotate");
		Add("toolscale");
		Add("toolbend");
		Add("B");
		Add("tooltransform");
		Add("T");
		Add("snap");
		Add("camforward");
		Add("camleft");
		Add("camback");
		Add("camright");
		Add("camascend");
		Add("E");
		Add("camdescend");
		Add("camrollforward");
		Add("camrollback");
		Add("camrollreset");
		Add("camreset");
		Add("camfast");
		Add("camslow");
		Add("camviewtimeline");
		Add("POS_X");
		Add("POS_Y");
		Add("POS_Z");
		Add("ROT_X");
		Add("ROT_Y");
		Add("ROT_Z");
		Add("SCA_X");
		Add("SCA_Y");
		Add("SCA_Z");
		Add("BEND_ANGLE");
		Add("BEND_ANGLE_X");
		Add("BEND_ANGLE_Y");
		Add("BEND_ANGLE_Z");
		Add("ALPHA");
		Add("RGB_ADD");
		Add("RGB_SUB");
		Add("RGB_MUL");
		Add("HSB_ADD");
		Add("HSB_SUB");
		Add("HSB_MUL");
		Add("MIX_COLOR");
		Add("GLOW_COLOR");
		Add("MIX_PERCENT");
		Add("EMISSIVE");
		Add("METALLIC");
		Add("ROUGHNESS");
		Add("SUBSURFACE");
		Add("SUBSURFACE_RADIUS_RED");
		Add("SUBSURFACE_RADIUS_GREEN");
		Add("SUBSURFACE_RADIUS_BLUE");
		Add("SUBSURFACE_COLOR");
		Add("WIND_INFLUENCE");
		Add("SPAWN");
		Add("FREEZE");
		Add("CLEAR");
		Add("CUSTOM_SEED");
		Add("SEED");
		Add("ATTRACTOR");
		Add("FORCE");
		Add("FORCE_DIRECTIONAL");
		Add("FORCE_VORTEX");
		Add("LIGHT_COLOR");
		Add("LIGHT_STRENGTH");
		Add("LIGHT_SPECULAR_STRENGTH");
		Add("LIGHT_SIZE");
		Add("LIGHT_RANGE");
		Add("LIGHT_FADE_SIZE");
		Add("LIGHT_SPOT_RADIUS");
		Add("LIGHT_SPOT_SHARPNESS");
		Add("CAM_FOV");
		Add("CAM_CLIP_NEAR");
		Add("CAM_CLIP_FAR");
		Add("CAM_BLADE_AMOUNT");
		Add("CAM_BLADE_ANGLE");
		Add("CAM_LIGHT_MANAGEMENT");
		Add("CAM_TONEMAPPER");
		Add("CAM_EXPOSURE");
		Add("CAM_GAMMA");
		Add("CAM_ROTATE");
		Add("CAM_ROTATE_DISTANCE");
		Add("CAM_ROTATE_ANGLE_XY");
		Add("CAM_ROTATE_ANGLE_Z");
		Add("CAM_SHAKE");
		Add("CAM_SHAKE_MODE");
		Add("CAM_SHAKE_STRENGTH_X");
		Add("CAM_SHAKE_STRENGTH_Y");
		Add("CAM_SHAKE_STRENGTH_Z");
		Add("CAM_SHAKE_SPEED_X");
		Add("CAM_SHAKE_SPEED_Y");
		Add("CAM_SHAKE_SPEED_Z");
		Add("CAM_DOF");
		Add("CAM_DOF_DEPTH");
		Add("CAM_DOF_RANGE");
		Add("CAM_DOF_FADE_SIZE");
		Add("CAM_DOF_BLUR_SIZE");
		Add("CAM_DOF_BLUR_RATIO");
		Add("CAM_DOF_BIAS");
		Add("CAM_DOF_THRESHOLD");
		Add("CAM_DOF_GAIN");
		Add("CAM_DOF_FRINGE");
		Add("CAM_DOF_FRINGE_ANGLE_RED");
		Add("CAM_DOF_FRINGE_ANGLE_GREEN");
		Add("CAM_DOF_FRINGE_ANGLE_BLUE");
		Add("CAM_DOF_FRINGE_RED");
		Add("CAM_DOF_FRINGE_GREEN");
		Add("CAM_DOF_FRINGE_BLUE");
		Add("CAM_BLOOM");
		Add("CAM_BLOOM_THRESHOLD");
		Add("CAM_BLOOM_INTENSITY");
		Add("CAM_BLOOM_RADIUS");
		Add("CAM_BLOOM_RATIO");
		Add("CAM_BLOOM_BLEND");
		Add("CAM_LENS_DIRT");
		Add("CAM_LENS_DIRT_BLOOM");
		Add("CAM_LENS_DIRT_GLOW");
		Add("CAM_LENS_DIRT_RADIUS");
		Add("CAM_LENS_DIRT_INTENSITY");
		Add("CAM_LENS_DIRT_POWER");
		Add("CAM_COLOR_CORRECTION");
		Add("CAM_CONTRAST");
		Add("CAM_BRIGHTNESS");
		Add("CAM_SATURATION");
		Add("CAM_VIBRANCE");
		Add("CAM_COLOR_BURN");
		Add("CAM_GRAIN");
		Add("CAM_GRAIN_STRENGTH");
		Add("CAM_GRAIN_SATURATION");
		Add("CAM_GRAIN_SIZE");
		Add("CAM_VIGNETTE");
		Add("CAM_VIGNETTE_RADIUS");
		Add("CAM_VIGNETTE_SOFTNESS");
		Add("CAM_VIGNETTE_STRENGTH");
		Add("CAM_VIGNETTE_COLOR");
		Add("CAM_CA");
		Add("CAM_CA_BLUR_AMOUNT");
		Add("CAM_CA_DISTORT_CHANNELS");
		Add("CAM_CA_RED_OFFSET");
		Add("CAM_CA_GREEN_OFFSET");
		Add("CAM_CA_BLUE_OFFSET");
		Add("CAM_DISTORT");
		Add("CAM_DISTORT_REPEAT");
		Add("CAM_DISTORT_ZOOM_AMOUNT");
		Add("CAM_DISTORT_AMOUNT");
		Add("CAM_SIZE_USE_PROJECT");
		Add("CAM_SIZE_KEEP_ASPECT_RATIO");
		Add("CAM_WIDTH");
		Add("CAM_HEIGHT");
		Add("BG_IMAGE_SHOW");
		Add("BG_IMAGE_ROTATION");
		Add("BG_SKY_MOON_PHASE");
		Add("BG_SKY_TIME");
		Add("BG_SKY_ROTATION");
		Add("BG_SUNLIGHT_STRENGTH");
		Add("BG_SUNLIGHT_ANGLE");
		Add("BG_SKY_SUN_ANGLE");
		Add("BG_SKY_SUN_SCALE");
		Add("BG_SKY_MOON_ANGLE");
		Add("BG_SKY_MOON_SCALE");
		Add("BG_TWILIGHT");
		Add("BG_SKY_CLOUDS_SHOW");
		Add("BG_SKY_CLOUDS_SPEED");
		Add("BG_SKY_CLOUDS_HEIGHT");
		Add("BG_SKY_CLOUDS_OFFSET");
		Add("BG_GROUND_SHOW");
		Add("BG_GROUND_SLOT");
		Add("BG_BIOME");
		Add("BG_SKY_COLOR");
		Add("BG_SKY_CLOUDS_COLOR");
		Add("BG_SUNLIGHT_COLOR");
		Add("BG_AMBIENT_COLOR");
		Add("BG_NIGHT_COLOR");
		Add("BG_GRASS_COLOR");
		Add("BG_FOLIAGE_COLOR");
		Add("BG_WATER_COLOR");
		Add("BG_LEAVES_OAK_COLOR");
		Add("BG_LEAVES_SPRUCE_COLOR");
		Add("BG_LEAVES_BIRCH_COLOR");
		Add("BG_LEAVES_JUNGLE_COLOR");
		Add("BG_LEAVES_ACACIA_COLOR");
		Add("BG_LEAVES_DARK_OAK_COLOR");
		Add("BG_LEAVES_MANGROVE_COLOR");
		Add("BG_FOG_SHOW");
		Add("BG_FOG_SKY");
		Add("BG_FOG_CUSTOM_COLOR");
		Add("BG_FOG_COLOR");
		Add("BG_FOG_CUSTOM_OBJECT_COLOR");
		Add("BG_FOG_OBJECT_COLOR");
		Add("BG_FOG_DISTANCE");
		Add("BG_FOG_SIZE");
		Add("BG_FOG_HEIGHT");
		Add("BG_WIND");
		Add("BG_WIND_SPEED");
		Add("BG_WIND_STRENGTH");
		Add("BG_WIND_DIRECTION");
		Add("BG_WIND_DIRECTIONAL_SPEED");
		Add("BG_WIND_DIRECTIONAL_STRENGTH");
		Add("BG_TEXTURE_ANI_SPEED");
		Add("TEXTURE_OBJ");
		Add("TEXTURE_MATERIAL_OBJ");
		Add("TEXTURE_NORMAL_OBJ");
		Add("SOUND_OBJ");
		Add("SOUND_VOLUME");
		Add("SOUND_PITCH");
		Add("SOUND_START");
		Add("SOUND_END");
		Add("TEXT");
		Add("TEXT_FONT");
		Add("TEXT_HALIGN");
		Add("TEXT_VALIGN");
		Add("TEXT_AA");
		Add("TEXT_OUTLINE");
		Add("TEXT_OUTLINE_COLOR");
		Add("CUSTOM_ITEM_SLOT");
		Add("ITEM_SLOT");
		Add("ITEM_NAME");
		Add("PATH_OBJ");
		Add("PATH_OFFSET");
		Add("PATH_POINT_ANGLE");
		Add("PATH_POINT_SCALE");
		Add("IK_TARGET");
		Add("IK_BLEND");
		Add("IK_TARGET_ANGLE");
		Add("IK_ANGLE_OFFSET");
		Add("ROT_TARGET");
		Add("POS_TARGET");
		Add("SCALE_TARGET");
		Add("FLW_ROT_X");
		Add("FLW_ROT_Y");
		Add("FLW_ROT_Z");
		Add("FLW_POS_X");
		Add("FLW_POS_Y");
		Add("FLW_POS_Z");
		Add("FLW_SCALE_X");
		Add("FLW_SCALE_Y");
		Add("FLW_SCALE_Z");
		Add("FLW_POS_OFFSET_X");
		Add("FLW_POS_OFFSET_Y");
		Add("FLW_POS_OFFSET_Z");
		Add("FLW_SCALE_MULT");
		Add("VISIBLE");
		Add("TRANSITION");
		Add("EASE_IN_X");
		Add("EASE_IN_Y");
		Add("EASE_OUT_X");
		Add("EASE_OUT_Y");
		Add("char");
		Add("spblock");
		Add("scenery");
		Add("item");
		Add("bodypart");
		Add("particles");
		Add("cone");
		Add("cylinder");
		Add("sphere");
		Add("surface");
		Add("spotlight");
		Add("pointlight");
		Add("folder");
		Add("audio");
		Add("path");
		Add("pathpoint");
		Add("shape");
		Add("lightsource");
		Add("pack");
		Add("packunzipped");
		Add("skin");
		Add("itemsheet");
		Add("legacyblocksheet");
		Add("blocksheet");
		Add("fromworld");
		Add("particlesheet");
		Add("texture");
		Add("font");
		Add("sound");
		Add("linear");
		Add("instant");
		Add("bezier");
		Add("easeinquad");
		Add("easeoutquad");
		Add("easeinoutquad");
		Add("easeincubic");
		Add("easeoutcubic");
		Add("easeinoutcubic");
		Add("easeinquart");
		Add("easeoutquart");
		Add("easeinoutquart");
		Add("easeinquint");
		Add("easeoutquint");
		Add("easeinoutquint");
		Add("easeinsine");
		Add("easeoutsine");
		Add("easeinoutsine");
		Add("easeinexpo");
		Add("easeoutexpo");
		Add("easeinoutexpo");
		Add("easeincirc");
		Add("easeoutcirc");
		Add("easeinoutcirc");
		Add("easeinelastic");
		Add("easeoutelastic");
		Add("easeinoutelastic");
		Add("easeinback");
		Add("easeoutback");
		Add("easeinoutback");
		Add("easeinbounce");
		Add("easeoutbounce");
		Add("easeinoutbounce");
		Add("ease");
		Add("easein");
		Add("easeinout");
		Add("easeout");
		Add("Make transitions");
		Add("Transitions OK");
		Add("avatar");
		Add("hd_720p");
		Add("fhd_1080p");
		Add("qhd_1440p");
		Add("uhd_4k");
		Add("hd_720p_cinematic");
		Add("fhd_1080p_cinematic");
		Add("qhd_1440p_cinematic");
		Add("uhd_4k_cinematic");
		Add("best");
		Add("high");
		Add("medium");
		Add("low");
		Add("verylow");
		Add("custom");
		Add("normal");
		Add("add");
		Add("subtract");
		Add("multiply");
		Add("screen");
		Add("combined");
		Add("diffuse");
		Add("specular");
		Add("ao");
		Add("indirectshadows");
		Add("depth");
		Add("material");
		Add("grid");
		Add("light");
		Add("DB3030");
		Add("D85B00");
		Add("D68E02");
		Add("34A100");
		Add("0D8E41");
		Add("048E8E");
		Add("2144F1");
		Add("982BCB");
		Add("E93983");
		Add("F7FAFC");
		Add("ECEFF1");
		Add("D7DFE2");
		Add("F0FFFF");
		Add("B5E8F2");
		Add("0D1214");
		Add("FFFFFF");
		Add("FF1D0F");
		Add("FFC01E");
		Add("61C159");
		Add("FF5656");
		Add("4AB758");
		Add("1370FB");
		Add("FF5FFF");
		Add("51C2FF");
		Add("F4CC5D");
		Add("FF37E8");
		Add("158AF5");
		Add("64A56B");
		Add("D09522");
		Add("dark");
		Add("FF7E76");
		Add("FFA360");
		Add("FFF065");
		Add("8BFF6D");
		Add("4EF390");
		Add("49EED9");
		Add("98BBFF");
		Add("DF9CFF");
		Add("FF9BC5");
		Add("37444A");
		Add("2B373D");
		Add("18242A");
		Add("839096");
		Add("000000");
		Add("FF7A72");
		Add("FFEB36");
		Add("64E879");
		Add("23FF88");
		Add("FFD969");
		Add("7EC1FF");
		Add("darker");
		Add("1C1C1C");
		Add("101010");
		Add("050505");
		Add("484848");
		Add("2B2B2B");
		Add("Windows startup");
		Add("020204");
		Add(" * ");
		Add(" - Mine-imator");
		Add("keyboard_check");
		Add("keyboard_check_released");
		Add("keyboard_check_pressed");
		Add("colorpicker");
		Add("_walk.miframes");
		Add("_run.miframes");
		Add("forceinline");
		Add("assets");
		Add("erroropenassetzip");
		Add(".miobject");
		Add(".miparticles");
		Add(".miproject");
		Add(".object");
		Add(".particles");
		Add(".mproj");
		Add(".mani");
		Add(".keyframes");
		Add(".schematic");
		Add(".nbt");
		Add(".blocks");
		Add("Opening scenery");
		Add(".mimodel");
		Add(".json");
		Add("Opening model");
		Add(".mp3");
		Add(".wav");
		Add(".ogg");
		Add(".flac");
		Add(".wma");
		Add(".m4a");
		Add("Opening audio");
		Add(".ttf");
		Add("Adding font");
		Add(".jpg");
		Add(".jpeg");
		Add(".dat");
		Add("Opening image");
		Add("Opening asset");
		Add("Opening legacy asset");
		Add("save_folder");
		Add("load_folder");
		Add("Asset loaded");
		Add("Ground vbuffer init");
		Add("faded");
		Add("flat");
		Add("hide");
		Add("show");
		Add("bench");
		Add("typepointlight");
		Add("typespotlight");
		Add("benchlighttype");
		Add("benchpointlighttip");
		Add("benchspotlighttip");
		Add("benchcameratip");
		Add("benchbackgroundtip");
		Add("benchaudiotip");
		Add("benchpathtip");
		Add("benchpathpointtip");
		Add("benchmodel");
		Add("benchskin");
		Add("benchskinmaterial");
		Add("benchskinnormal");
		Add("benchblock");
		Add("benchspblocktex");
		Add("benchspblocktexmaterial");
		Add("benchspblocktexnormal");
		Add("benchbodypartskin");
		Add("benchbodypartskinmaterial");
		Add("benchbodypartskinnormal");
		Add("benchbodypart");
		Add("modelstate");
		Add("true");
		Add("false");
		Add("modelpart");
		Add("benchmodelcolor");
		Add("benchpatterneditor");
		Add("armor");
		Add("bencharmoreditor");
		Add("benchscenery");
		Add("benchblocktex");
		Add("benchblocktexmaterial");
		Add("benchblocktexnormal");
		Add("listnone");
		Add(":");
		Add("benchitem3d");
		Add("benchitemfacecamera");
		Add("benchitembounce");
		Add("benchitemspin");
		Add("benchitemtex");
		Add("benchitemtexmaterial");
		Add("benchitemtexnormal");
		Add("blockstate");
		Add("benchparticlespreset");
		Add("benchtextfont");
		Add("benchtext3d");
		Add("benchtextfacecamera");
		Add("benchshapetype");
		Add("benchshapetex");
		Add("benchshapetexmaterial");
		Add("benchshapetexnormal");
		Add("type");
		Add("benchshapetexmap");
		Add("benchshapetexmaptip");
		Add("benchshapefacecamera");
		Add("benchmodeltex");
		Add("benchmodeltexmaterial");
		Add("benchmodeltexnormal");
		Add("listdefault");
		Add("benchcreate");
		Add("benchcreateedit");
		Add("variant");
		Add("banner");
		Add("water");
		Add("flowing_");
		Add("name");
		Add("Missing parameter \"name\"");
		Add("block/");
		Add("block_set_");
		Add("block_generate_");
		Add("emissive");
		Add("random_offset");
		Add("random_offset_xz");
		Add("states");
		Add("block/state/");
		Add("value");
		Add("block/state/value/");
		Add("default_state");
		Add("axis");
		Add("y");
		Add("ymin");
		Add("waterlogged");
		Add("require_models");
		Add("multithreaded");
		Add("minecraft:");
		Add("Could not find model file");
		Add("Could not parse model file");
		Add("parent");
		Add("textures");
		Add("elements");
		Add("from");
		Add("to");
		Add("rotation");
		Add("origin");
		Add("angle");
		Add("rescale");
		Add("x");
		Add("z");
		Add("faces");
		Add("uv");
		Add("assets/minecraft_");
		Add("blocks/");
		Add("/../../textures/");
		Add("/../../textures/item/");
		Add("/../../textures/block/");
		Add("#");
		Add("Could not find block texture");
		Add(" opaque");
		Add(" noalpha");
		Add("grass");
		Add("foliage");
		Add("oak_leaves");
		Add("spruce_leaves");
		Add("birch_leaves");
		Add("jungle_leaves");
		Add("acacia_leaves");
		Add("dark_oak_leaves");
		Add("mangrove_leaves");
		Add("Could not find state file");
		Add("Could not parse state file");
		Add("variants");
		Add("multipart");
		Add("No models in the states file");
		Add("colorZ");
		Add("alphaZ");
		Add("colorY");
		Add("alphaY");
		Add("when");
		Add("OR");
		Add("AND");
		Add("|");
		Add("apply");
		Add("model_state");
		Add("model_double");
		Add("front");
		Add("scale");
		Add("back");
		Add("pattern_type");
		Add("rotation_point");
		Add("Missing parameter \"model\"");
		Add("uvlock");
		Add("weight");
		Add("leaves");
		Add("bars");
		Add("colored_bars");
		Add("east");
		Add("west");
		Add("south");
		Add("north");
		Add("part");
		Add("head");
		Add("big_dripleaf_stem");
		Add("facing");
		Add("tilt");
		Add("none");
		Add("cave_vines");
		Add("cave_vines_plant");
		Add("berries");
		Add("single");
		Add("legacy");
		Add("ender_chest");
		Add("double");
		Add("chorus_plant_connect");
		Add("end_stone");
		Add("up");
		Add("down");
		Add("color");
		Add("half");
		Add("upper");
		Add("hinge");
		Add("open");
		Add("south_west");
		Add("north_west");
		Add("north_east");
		Add("south_east");
		Add("location");
		Add("direction");
		Add("thickness");
		Add("base");
		Add("vertical_direction");
		Add("frustum");
		Add("middle");
		Add("fence_gate");
		Add("wall");
		Add("in_wall");
		Add("kelp");
		Add("kelp_plant");
		Add("locked");
		Add("powered_repeater");
		Add("power");
		Add("redstone_connect");
		Add("side");
		Add("redstone_repeater");
		Add("redstone_comparator");
		Add("snowy");
		Add("snow");
		Add("straight");
		Add("stairs");
		Add("outer_right");
		Add("outer_left");
		Add("inner_left");
		Add("inner_right");
		Add("tripwire");
		Add("tripwire_hook");
		Add("twisting_vines");
		Add("twisting_vines_plant");
		Add("tall");
		Add("weeping_vines");
		Add("weeping_vines_plant");
		Add("Patterns");
		Add("Base");
		Add("Pattern");
		Add("Color");
		Add("sherds");
		Add("sherd_front");
		Add("sherd_left");
		Add("sherd_right");
		Add("sherd_back");
		Add("messages");
		Add("front_text");
		Add("back_text");
		Add("black");
		Add("has_glowing_text");
		Add("text_glow:");
		Add("dye:");
		Add("text_glow:outline_");
		Add("GlowingText");
		Add("Text");
		Add("extra");
		Add("Owner");
		Add("SkullOwner");
		Add("Id");
		Add("Properties");
		Add("Value");
		Add("SKIN");
		Add("url");
		Add("Schematic error");
		Add("Not a schematic file");
		Add("Palette");
		Add("Width");
		Add("Length");
		Add("Height");
		Add(" x ");
		Add("Size not fully defined");
		Add("Size cannot be 0");
		Add("Version");
		Add("Version not available");
		Add("Unsupported format, version too high");
		Add("Palette not found");
		Add("_NBT_");
		Add("[");
		Add("BlockData");
		Add("BlockData array not found");
		Add("BlockData_NBT_type");
		Add("blockdataints");
		Add("Metadata");
		Add("FromMap");
		Add("Blocks");
		Add("Blocks array not found");
		Add("Data");
		Add("Data array not found");
		Add("TileEntities");
		Add("DataVersion");
		Add("Structure error");
		Add("Unsupported format, version too low");
		Add("size");
		Add("palettes");
		Add("palette");
		Add("Name");
		Add("blocks");
		Add("Block list not found");
		Add("pos");
		Add("state");
		Add("nbt");
		Add("final_state");
		Add("block_tile_entity_");
		Add("res_load_scenery, Parse blocks");
		Add("Parse blocks");
		Add("Pos");
		Add("Parse Tile Entities");
		Add("Loaded .blocks");
		Add("colorpickersatbripick");
		Add("colorpickerhuepick");
		Add("colorpickerrgb");
		Add("rgb");
		Add("colorpickerhsv");
		Add("hsv");
		Add("colorpickerhex");
		Add("hex");
		Add("colorpickermode");
		Add("colorpickerr");
		Add("colorpickerg");
		Add("colorpickerb");
		Add("colorpickerh");
		Add("colorpickers");
		Add("colorpickerv");
		Add("settingsmenu");
		Add("0123456789");
		Add("0123456789ABCDEF");
		Add("contextmenu");
		Add("\t");
		Add(": ");
		Add(", ");
		Add("Elements");
		Add("    ");
		Add("   ");
		Add(" => ");
		Add("DEBUG INFO:\n");
		Add("fps: ");
		Add(" \n");
		Add("fps_real: ");
		Add("delta: ");
		Add("DPI: ");
		Add(",");
		Add("instance_count: ");
		Add("render_world() calls: ");
		Add("Vertex buffer triangles: ");
		Add("Vertex buffer render calls: ");
		Add("Primitive lines: ");
		Add("Primitive triangles: ");
		Add("Primitive render calls: ");
		Add("Window busy: ");
		Add("Window focus: ");
		Add("[F12 to disable]");
		Add(" msec");
		Add("0");
		Add(".ext");
		Add("beziereasein");
		Add("beziereaseout");
		Add("accentlistitem");
		Add("tooltipcustomaccentcolor");
		Add("collapse");
		Add("contextmenuvalue");
		Add("menu");
		Add("timelineeditorparent");
		Add("transition");
		Add("press");
		Add("click");
		Add("search");
		Add("contextmenutextbox");
		Add("settingskey");
		Add("keybind");
		Add("tooltipeditkeybind");
		Add("input");
		Add("inputpress");
		Add("mininput");
		Add("maxinput");
		Add("min");
		Add("max");
		Add("simple");
		Add("recentdelete");
		Add("tooltipremove");
		Add("recent");
		Add("list");
		Add("recentfilename");
		Add("recentlastopened");
		Add("recentpin");
		Add("tooltippin");
		Add("close");
		Add("(");
		Add("--");
		Add("-(");
		Add(".");
		Add(")");
		Add("-");
		Add("+");
		Add("*");
		Add("^");
		Add("1");
		Add("2");
		Add("3");
		Add("4");
		Add("5");
		Add("6");
		Add("7");
		Add("8");
		Add("9");
		Add("execute");
		Add("alertexportimage");
		Add("alertexportimageview");
		Add("_1.png");
		Add("alertexportmovie");
		Add("alertexportmovieview");
		Add("questionstoprender");
		Add("movie");
		Add("_");
		Add("Error when adding frame, error code");
		Add(" (");
		Add("\\");
		Add("?");
		Add("\"");
		Add("<");
		Add(">");
		Add("filedialogopenasset");
		Add("filedialogopenassetcaption");
		Add("filedialogopenfont");
		Add(" (*.ttf)|*.ttf");
		Add("filedialogopenfontcaption");
		Add("filedialogopenimage");
		Add(" (*.png; *.jpg; *.dat)|*.png;*.jpg;*.jpeg;*.dat;");
		Add("filedialogopenimagecaption");
		Add("filedialogopenimageorpack");
		Add(" (*.png; *.jpg; *.zip)|*.png;*.jpg;*.jpeg;*.zip");
		Add("filedialogopenimageorpackcaption");
		Add("filedialogopenlanguage");
		Add(" (*.milanguage;*.txt)|*.milanguage;*.txt");
		Add("filedialogopenlanguagecaption");
		Add("filedialogopenmodel");
		Add(" (*.mimodel;*.json;*.zip)|*.mimodel;*.json;*.zip");
		Add("filedialogopenmodelcaption");
		Add("filedialogopenpack");
		Add(" (*.zip)|*.zip");
		Add("filedialogopenpackcaption");
		Add("filedialogopenparticles");
		Add(" (*.miparticles; *.zip; *.particles)|*miparticles;*.zip;*.particles;");
		Add("filedialogopenparticlecaption");
		Add("filedialogopenproject");
		Add(" (*.miproject; *.zip; *.mproj; *.mani)|*miproject;*.zip;*.mproj;*.mani|");
		Add("filedialogopenbackup");
		Add(" (*.backup*; *.mbackup*)|*.backup*;*.mbackup*");
		Add("filedialogopenprojectcaption");
		Add("filedialogopenrender");
		Add(" (*.mirender)|*mirender");
		Add("filedialogopenrendercaption");
		Add("filedialogopenscenery");
		Add(" (*.schematic; *.nbt; *.blocks)|*.schematic;*.nbt;*.blocks");
		Add("filedialogopenscenerycaption");
		Add("filedialogopensound");
		Add(" (*.mp3; *.wav; *.ogg; *.flac; *.wma; *.m4a)|*.mp3;*.wav;*.ogg;*.flac;*.wma;*.m4a;");
		Add("filedialogopensoundcaption");
		Add("filedialogsaveimage");
		Add(" (*.png)|*.png");
		Add("filedialogsaveimagecaption");
		Add("filedialogsavekeyframes");
		Add(" (*.miframes)|*.miframes");
		Add("filedialogsavekeyframescaption");
		Add("filedialogsavemoviemov");
		Add(" (*.mov)|*.mov");
		Add("filedialogsavemoviecaption");
		Add("filedialogsavemoviemp4");
		Add(" (*.mp4)|*.mp4");
		Add("filedialogsavemoviepng");
		Add("filedialogsavemoviewmv");
		Add(" (*.wmv)|*.wmv");
		Add("filedialogsaveobject");
		Add(" (*.miobject)|*.miobject");
		Add("filedialogsaveobjectcaption");
		Add("filedialogsaveparticles");
		Add(" (*.miparticles)|*.miparticles");
		Add("filedialogsaveparticlescaption");
		Add("filedialogsaveprojectcaption");
		Add("filedialogsaverender");
		Add(" (*.mirender)|*.mirender");
		Add("filedialogsaverendercaption");
		Add("|*");
		Add("filedialogsaveresourcecaption");
		Add("working_directory");
		Add("directory broken");
		Add("tmp.png");
		Add("Trying to save files");
		Add("Couldn't save to file_directory");
		Add("Couldn't save to data_directory");
		Add("surface_save OK");
		Add("Couldn't load texture from file_directory");
		Add("Couldn't load texture from data_directory");
		Add("texture_create OK");
		Add("Couldn't delete from file_directory");
		Add("Couldn't delete from data_directory");
		Add("file_delete_lib OK");
		Add("tmp.ttf");
		Add("history_save_var_start(");
		Add("Action");
		Add("Action Load resource");
		Add("Action Set variable");
		Add("No root object found");
		Add("JSON ERROR: ");
		Add(" on line ");
		Add(", column ");
		Add("Expected \",\"");
		Add("Unexpected end of file");
		Add("Unexpected symbol");
		Add("Invalid number \"");
		Add("Expected \":\"");
		Add("Unexpected linebreak in string");
		Add("Unrecognized word");
		Add("null");
		Add("{");
		Add("}");
		Add("]");
		Add("\r");
		Add("e");
		Add("f");
		Add("n");
		Add("t");
		Add("u");
		Add("\\n");
		Add("\\t");
		Add("\\\"");
		Add("\\\\");
		Add("\\u");
		Add("Saving keyframes");
		Add("Keyframes saved");
		Add("ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
		Add("filelanguage");
		Add("filelocale");
		Add("Loading languages");
		Add("load_format");
		Add("languages");
		Add("locale");
		Add("filename");
		Add("Saving languages");
		Add("Saved languges");
		Add("This file already exists the language file directory. Do you want to replace the file?");
		Add("Loading language file");
		Add(".milanguage");
		Add("conv.tmp");
		Add("An error occurred while reading the language file:\nCould not convert.");
		Add("Error");
		Add("An error occured while reading the language file:\n");
		Add("The following texts are missing in the translation and will display as English:\n");
		Add("Some texts are missing in the translation and will display as English. See the log for details:\n");
		Add("Loading legacy file");
		Add("Error loading legacy.midata");
		Add("legacy_model_id_05");
		Add("legacy_model_id_06");
		Add("legacy_model_id_100_demo");
		Add("legacy_model_id");
		Add("legacy_model_part");
		Add("legacy_model_name");
		Add("legacy_block_id");
		Add("legacy_block_texture_name");
		Add("legacy_block_05_textures");
		Add("legacy_block_07_demo_textures");
		Add("legacy_block_100_textures");
		Add("legacy_item_texture_name");
		Add("legacy_biomes");
		Add("legacy_biome_ids");
		Add("biome_ids");
		Add("legacy_model_names");
		Add("legacy_model_states");
		Add("legacy_model_state_values");
		Add("legacy_block_names");
		Add("legacy_particles");
		Add("External library init");
		Add("Data/Libraries/");
		Add("file.dll");
		Add("movie.dll");
		Add("window.dll");
		Add("External library");
		Add("window_maximize");
		Add("window_set_focus");
		Add("open_url");
		Add("unzip");
		Add("gzunzip");
		Add("file_rename");
		Add("file_copy");
		Add("file_delete");
		Add("file_exists");
		Add("directory_create");
		Add("directory_delete");
		Add("directory_exists");
		Add("json_file_convert_unicode");
		Add("movie_init");
		Add("movie_set");
		Add("movie_start");
		Add("movie_audio_file_decode");
		Add("movie_audio_file_add");
		Add("movie_audio_sound_add");
		Add("movie_frame");
		Add("movie_done");
		Add("movie init");
		Add("libraryskin");
		Add("libraryskinmaterial");
		Add("libraryskinnormal");
		Add("libraryspblocktex");
		Add("libraryspblocktexmaterial");
		Add("libraryspblocktexnormal");
		Add("librarybodypartskin");
		Add("librarybodypartskinmaterial");
		Add("librarybodypartskinnormal");
		Add("listbrowse");
		Add("libraryskindownload");
		Add("librarymodeltex");
		Add("librarymodeltexmaterial");
		Add("librarymodeltexnormal");
		Add("libraryscenery");
		Add("librarysceneryimport");
		Add("libraryblocktex");
		Add("libraryblocktexmaterial");
		Add("libraryblocktexnormal");
		Add("libraryitemtex");
		Add("libraryitemtexmaterial");
		Add("libraryitemtexnormal");
		Add("templateeditorbodypart");
		Add("librarytextfont");
		Add("libraryshapetex");
		Add("libraryshapetexmaterial");
		Add("libraryshapetexnormal");
		Add("librarymodel");
		Add("particleeditorspawnregiontype");
		Add("particleeditorspawnregiontypesphere");
		Add("particleeditorspawnregiontypecube");
		Add("box");
		Add("particleeditorspawnregiontypebox");
		Add("particleeditorspawnregiontypepath");
		Add("particleeditorspawnregionpath");
		Add("particleeditorboundingbox");
		Add("particleeditorboundingboxtypenone");
		Add("spawn");
		Add("particleeditorboundingboxtypespawn");
		Add("particleeditorboundingboxtypeground");
		Add("particleeditorboundingboxtypecustom");
		Add("particleeditortypetemp");
		Add("particleeditortypetemplate");
		Add("particleeditortypespritesheet");
		Add("particleeditortypespritetex");
		Add("particleeditortypespritetemplatepack");
		Add("particleeditortypespritetemplate");
		Add("particleeditortypespritetemplateframes");
		Add("backgroundimage");
		Add("backgroundimagetype");
		Add("backgroundimagetypeimage");
		Add("backgroundimagetypesphere");
		Add("backgroundimagetypebox");
		Add("backgroundskysuntex");
		Add("backgroundskymoontex");
		Add("backgroundskymoonphase");
		Add("backgroundskycloudstex");
		Add("backgroundgroundtex");
		Add("backgroundgroundtexmaterial");
		Add("backgroundgroundtexnormal");
		Add("resourcespackimage");
		Add("preview");
		Add("resourcespackpreview");
		Add("modeltextures");
		Add("resourcespackmodeltextures");
		Add("resourcespackblocksheet");
		Add("colormap");
		Add("resourcespackcolormap");
		Add("resourcespackitemsheet");
		Add("resourcespackparticlesheet");
		Add("suntexture");
		Add("resourcespacksuntexture");
		Add("moontexture");
		Add("resourcespackmoontexture");
		Add("cloudtexture");
		Add("resourcespackcloudtexture");
		Add("resourcespackmaterial");
		Add("resourcespackmaterialdiffuse");
		Add("resourcespackmaterialmaterial");
		Add("resourcespackmaterialnormal");
		Add("resourcespackimagemodeltexture");
		Add("resourcesscenerystructurepalette");
		Add("resourcesscenerystructurepalettenumber");
		Add("frameeditorpath");
		Add("frameeditorchartex");
		Add("frameeditorspblocktex");
		Add("frameeditorbodyparttex");
		Add("frameeditormodeltex");
		Add("frameeditorchartexmaterial");
		Add("frameeditorspblocktexmaterial");
		Add("frameeditorbodyparttexmaterial");
		Add("frameeditormodeltexmaterial");
		Add("frameeditorchartexnormal");
		Add("frameeditorspblocktexnormal");
		Add("frameeditorbodyparttexnormal");
		Add("frameeditormodeltexnormal");
		Add("frameeditorblocktex");
		Add("frameeditorblocktexmaterial");
		Add("frameeditorblocktexnormal");
		Add("frameeditoritemtex");
		Add("frameeditoritemtexmaterial");
		Add("frameeditoritemtexnormal");
		Add("frameeditorshapetex");
		Add("frameeditorshapetexmaterial");
		Add("frameeditorshapetexnormal");
		Add("frameeditorcameralensdirttexture");
		Add("frameeditorlightgobotexture");
		Add("frameeditorsoundfile");
		Add("frameeditortextfont");
		Add("settingsminecraftversion");
		Add("rendershadowssunbuffersize");
		Add("rendershadowsspotbuffersize");
		Add("rendershadowspointbuffersize");
		Add("rendershadowsbuffersize256");
		Add(" (256x256)");
		Add("rendershadowsbuffersize512");
		Add(" (512x512)");
		Add("rendershadowsbuffersize1024");
		Add(" (1024x1024)");
		Add("rendershadowsbuffersize2048");
		Add(" (2048x2048)");
		Add("rendershadowsbuffersize4096");
		Add(" (4096x4096)");
		Add("rendershadowsbuffersize8192");
		Add(" (8192x8192)");
		Add("settingswatermarkpositionx");
		Add("settingswatermarkleft");
		Add("center");
		Add("settingswatermarkcenter");
		Add("settingswatermarkright");
		Add("settingswatermarkpositiony");
		Add("settingswatermarktop");
		Add("settingswatermarkbottom");
		Add("projectvideosize");
		Add("exportmovievideosize");
		Add("exportimageimagesize");
		Add("frameeditorcameravideosize");
		Add("frameeditorcameravideosizeuseproject");
		Add("projectvideosizetemplate");
		Add("projectvideosizecustom");
		Add("exportmovieformat");
		Add("exportmovieformatmp4");
		Add("exportmovieformatmov");
		Add("exportmovieformatwmv");
		Add("exportmovieformatpng");
		Add("exportmovievideoquality");
		Add("exportmovievideoqualitycustom");
		Add("exportmovieframerate");
		Add("24");
		Add("30");
		Add("60");
		Add("exportmovieframeratecustom");
		Add("projectrendersettings");
		Add("projectrendersettingscustom");
		Add("performance");
		Add("projectrendersettingsperformance");
		Add("balanced");
		Add("projectrendersettingsbalanced");
		Add("extreme");
		Add("projectrendersettingsextreme");
		Add("*.mirender");
		Add("performance.mirender");
		Add("balanced.mirender");
		Add("extreme.mirender");
		Add("timelineeditorblendmode");
		Add("startupsortby");
		Add("recentsortdatenewest");
		Add("recentsortdateoldest");
		Add("recentsortnameaz");
		Add("recentsortnameza");
		Add("timelinemarkercolor");
		Add("settingslanguage");
		Add("viewmodepass");
		Add("viewcameramain");
		Add("viewcamerasecond");
		Add("viewcamerawork");
		Add("viewcameraactive");
		Add("worldimportworld");
		Add("worldimportdimension");
		Add("settingsinterfacescale");
		Add("100%");
		Add("200%");
		Add("300%");
		Add("renderalphamode");
		Add("timelineeditoralphamode");
		Add("renderalphamodedefault");
		Add("renderalphamodehashed");
		Add("renderalphamodeblend");
		Add("rendertonemapper");
		Add("frameeditorcameratonemapper");
		Add("rendertonemappernone");
		Add("rendertonemapperreinhard");
		Add("rendertonemapperaces");
		Add("armoreditorpatternhelmet");
		Add("armoreditorpatternchestplate");
		Add("armoreditorpatternleggings");
		Add("armoreditorpatternboots");
		Add("armoreditorpattern");
		Add("armoreditormaterialhelmet");
		Add("armoreditormaterialchestplate");
		Add("armoreditormaterialleggings");
		Add("armoreditormaterialboots");
		Add("armoreditormaterial");
		Add("timelineeditorglinttex");
		Add("frameeditortransition");
		Add("pathoffset");
		Add("contextmenupathsetlength");
		Add("contextmenucategory");
		Add("contextmenuscaleseparate");
		Add("contextmenuscalecombine");
		Add("contextmenuvaluecut");
		Add("contextmenuvaluecopy");
		Add("contextmenuvaluepaste");
		Add("contextmenuvaluereset");
		Add("contextmenugroupcopy");
		Add("contextmenugrouppaste");
		Add("contextmenugroupreset");
		Add("contextmenugroupcopyglobalposition");
		Add("contextmenusetcolor");
		Add("contextmenuswatchset");
		Add("contextmenumixcolor");
		Add("contextmenuswatchmix");
		Add("contextmenutextboxcut");
		Add("contextmenutextboxcopy");
		Add("contextmenutextboxpaste");
		Add("contextmenutextboxselectall");
		Add("timelinelist");
		Add("contextmenutladdfolder");
		Add("contextmenutlselectkeyframes");
		Add("contextmenutlcolortag");
		Add("colortag");
		Add("contextmenutlexpandchildren");
		Add("contextmenutlcollapsechildren");
		Add("contextmenutlduplicate");
		Add("contextmenutldelete");
		Add("contextmenutlexport");
		Add("contextmenutlselectall");
		Add("contextmenutlexpandall");
		Add("contextmenutlcollapseall");
		Add("contextmenutlkeyframestransition");
		Add("timelinelkeyframetransitions");
		Add("contextmenutlkeyframescut");
		Add("contextmenutlkeyframescopy");
		Add("contextmenutlkeyframespaste");
		Add("contextmenutlkeyframesdelete");
		Add("contextmenutlkeyframesexport");
		Add("contextmenutlkeyframesselect");
		Add("timelinelkeyframesselect");
		Add("contextmenutlkeyframeswalk");
		Add("contextmenutlkeyframesrun");
		Add("contextmenutlmarkeradd");
		Add("contextmenutlkeyframesselectbefore");
		Add("contextmenutlkeyframesselectafter");
		Add("contextmenutlkeyframesselectfirst");
		Add("contextmenutlkeyframesselectlast");
		Add("contextmenutlkeyframesselectregion");
		Add("timelinemarker");
		Add("contextmenutlmarkeredit");
		Add("contextmenutlmarkerdelete");
		Add("contextmenucolornone");
		Add("contextmenucolor");
		Add("toolbarfile");
		Add("toolbarfilenew");
		Add("toolbarfileopen");
		Add("toolbarfilerecent");
		Add("toolbarfilelastbackup");
		Add("toolbarfilesave");
		Add("toolbarfilesaveas");
		Add("toolbarfileimport");
		Add("toolbarfileworldimport");
		Add("toolbaredit");
		Add("toolbareditundo");
		Add("toolbareditredo");
		Add("toolbareditselectall");
		Add("toolbareditduplicate");
		Add("toolbareditdelete");
		Add("toolbaredithide");
		Add("toolbareditshowhidden");
		Add("toolbareditpreferences");
		Add("toolbarrender");
		Add("toolbarrenderimage");
		Add("toolbarrenderanimation");
		Add("toolbarview");
		Add("toolbarviewreset");
		Add("toolbarviewsecondaryview");
		Add("toolbarviewtimelineshowmarkers");
		Add("toolbarviewtimelineplayback");
		Add("toolbarviewshortcutsbar");
		Add("toolbarviewhome");
		Add("toolbarviewtimelineplaybacktimeseconds");
		Add("toolbarviewtimelineplaybacktimeframes");
		Add("toolbarhelp");
		Add("toolbarhelpabout");
		Add("toolbarhelpupgrade");
		Add("toolbarhelptutorials");
		Add("toolbarhelpreport");
		Add("toolbarhelpforums");
		Add("contextmenurestorekeybind");
		Add("popup");
		Add("//dev_project//dev_project.miproject");
		Add(" is not defined in the translation, the key will be formatted");
		Add("2.0.2");
		Add("Community Build 1.0.0");
		Add("Alpha 6");
		Add("2023.11.15");
		Add("1.20.2");
		Add("Data/");
		Add("Projects/");
		Add("Schematics/");
		Add("Particles/");
		Add("Fonts/");
		Add("Languages/");
		Add("Minecraft/");
		Add("Render/");
		Add("Splashes/");
		Add("english.milanguage");
		Add("languages.midata");
		Add("legacy.midata");
		Add("settings.midata");
		Add("recent.midata");
		Add("key.midata");
		Add("log.txt");
		Add("tmp.file");
		Add("download.png");
		Add("unzip/");
		Add("*.miobject;*.miframes;*.zip;*.schematic;*.miproject;*.miparticles;*.mimodel;*.png;*.jpg;*.json;*.ttf;*.mp3;*.wav;*.ogg;*.flac;*.wma;*.m4a;*.object;*.keyframes;*.particles;*.mproj;*.mani;*.blocks;*.nbt;*.dat;");
		Add("Minecraft_unzip/");
		Add("assets/minecraft/");
		Add("models/");
		Add("blockstates/");
		Add("textures/");
		Add("character/");
		Add("special_block/");
		Add("loops/");
		Add("pack.png");
		Add("colormap/grass.png");
		Add("colormap/foliage.png");
		Add("particle/particles.png");
		Add("entity/explosion.png");
		Add("environment/sun.png");
		Add("environment/moon_phases.png");
		Add("environment/clouds.png");
		Add("misc/enchanted_glint_entity.png");
		Add("misc/enchanted_glint_item.png");
		Add("https://www.mineimator.com");
		Add("https://www.mineimator.com/tutorials2");
		Add("https://www.mineimator.com/download");
		Add("https://www.mineimator.com/upgrade");
		Add("https://www.mineimator.com/assets/");
		Add("versions.midata");
		Add("https://www.mineimator.com/news.php?version=");
		Add("&platform=");
		Add("&os=");
		Add("https://www.mineimator.com/skin?username=");
		Add("https://www.mineimatorforums.com");
		Add("https://www.mineimatorforums.com/index.php?/forum/51-issues-and-bugs/&do=add");
		Add("https://www.mineimatorforums.com/index.php?/topic/10-guide-how-to-post-a-mine-imator-project/");
		Add("https://www.minecraft.net");
		Add("https://www.stuffbydavid.com");
		Add("https://www.mineimator.com/modelbench");
		Add("https://www.mineimator.com/tweets");
		Add("https://www.mineimator.com/discord");
		Add("https://www.mineimator.com/donate");
		Add("https://www.thewindowsclub.com/how-to-update-graphics-drivers-windows");
		Add("B2353B");
		Add("C04E37");
		Add("human");
		Add("chest");
		Add("grass_block");
		Add("item/diamond_sword");
		Add("block/grass_block_top");
		Add("timelinemarkerlabel");
		Add("simplex1D");
		Add("simplex2D");
		Add("simplex3D");
		Add("simplex4D");
		Add("timelinenone");
		Add("/.../");
		Add("extend");
		Add("tooltiptlcollapse");
		Add("tooltiptlexpand");
		Add("biome");
		Add("viewgridrows");
		Add("viewgridcolumns");
		Add("viewsnapmove");
		Add("viewsnaprotate");
		Add("viewsnapscale");
		Add("viewsnapabsolute");
		Add("viewsnapabsolutetip");
		Add("swatch");
		Add("transitionmenuother");
		Add("transitionmenueasein");
		Add("transitionmenueaseout");
		Add("transitionmenueaseinout");
		Add("Could not unzip archive");
		Add("Unzip archive");
		Add("Archive already unzipped, re-using");
		Add("biomes");
		Add("model_textures");
		Add("No model textures found");
		Add("block_textures");
		Add("No block textures found");
		Add("block_textures_animated");
		Add("No animated block textures found");
		Add("block_textures_color");
		Add("No block texture colors found");
		Add("block_textures_preview");
		Add("item_textures");
		Add("No item textures found");
		Add("particle_textures");
		Add("No particle textures found");
		Add("No particle list found");
		Add("misc");
		Add("patterns");
		Add("No pattern designs list found");
		Add("No sherd keys found");
		Add("No armor data found");
		Add("pattern");
		Add("map_colors");
		Add("No map colors found");
		Add("models");
		Add("swatches");
		Add("No swatches found");
		Add("colors");
		Add("dye");
		Add("No dyes found");
		Add("characters");
		Add("No character list found");
		Add("Could not load model");
		Add("Load characters");
		Add("special_blocks");
		Add("No special block list found");
		Add("Load special blocks");
		Add("No block list found");
		Add("done");
		Add("Could not load block");
		Add("flowing_water");
		Add("flowing_lava");
		Add("lava");
		Add("block/water_still");
		Add("block/lava_still");
		Add("block/water_flow");
		Add("block/lava_flow");
		Add("minecraft:grass_path");
		Add("minecraft:dirt_path");
		Add("data");
		Add("Load blocks");
		Add("The following blockstates were unused:\n");
		Add("  ");
		Add("The following block models were unused:\n");
		Add("Loaded assets successfully");
		Add("group");
		Add("0x1");
		Add("0x2");
		Add("0x4");
		Add("0x8");
		Add("0x1+0x2");
		Add("0x1+0x2+0x4");
		Add("0x4+0x8");
		Add("a");
		Add("b");
		Add("c");
		Add("d");
		Add("g");
		Add("h");
		Add("i");
		Add("j");
		Add("k");
		Add("l");
		Add("m");
		Add("o");
		Add("p");
		Add("q");
		Add("r");
		Add("s");
		Add("v");
		Add("w");
		Add("frames");
		Add("letter_suffix");
		Add("Minecraft");
		Add("Could not load ");
		Add(" assets. Resetting to default");
		Add("splashes.json");
		Add("splashes");
		Add("credits");
		Add("Loading Minecraft assets version");
		Add("Could not find Minecraft assets file");
		Add("Could not find Minecraft assets archive");
		Add("Could not parse JSON");
		Add("Unsupported archive, format");
		Add("patch");
		Add("Reloading models");
		Add("?????? [");
		Add(" [");
		Add("models/armor/");
		Add("_layer_");
		Add("leather");
		Add("_overlay");
		Add("trims/color_palettes/");
		Add("_darker");
		Add("trims/color_palettes/trim_palette");
		Add("trims/models/armor/");
		Add("_leggings");
		Add("entity/banner_base");
		Add("entity/shield_base");
		Add("entity/banner/");
		Add("entity/shield/");
		Add("Missing file");
		Add("The file ");
		Add(" could not be found. If you are running from an archive, extract all the files and try again. If problems persist, re-install the program.");
		Add("Missing parameter \"texture\"");
		Add("texture_size");
		Add("Missing array \"texture_size\"");
		Add("parts");
		Add("Missing array \"parts\"");
		Add("model/");
		Add("description");
		Add("texture_material");
		Add("texture_normal");
		Add("player_skin");
		Add("model_color");
		Add("floor_box_uvs");
		Add("visible");
		Add("Missing array \"position\"");
		Add("Duplicate part name found");
		Add("model/part/");
		Add("color_inherit");
		Add("color_blend");
		Add("color_alpha");
		Add("color_emissive");
		Add("color_brightness");
		Add("color_mix");
		Add("color_mix_percent");
		Add("show_position");
		Add("lock_bend");
		Add("backfaces");
		Add("bend");
		Add("inherit_bend");
		Add("offset");
		Add("Missing parameter \"offset\"");
		Add("end_offset");
		Add("Missing parameter \"part\"");
		Add("lower");
		Add("Invalid parameter \"part\"");
		Add("Invalid parameter \"axis\"");
		Add("Missing parameter \"axis\"");
		Add("direction_min");
		Add("direction_max");
		Add("forward");
		Add("backward");
		Add("both");
		Add("Invalid parameter \"direction\"");
		Add("invert");
		Add("shapes");
		Add("Missing parameter \"type\"");
		Add("Missing array \"from\"");
		Add("Missing array \"to\"");
		Add("Missing array \"uv\"");
		Add("use_model_color");
		Add("texture_mirror");
		Add("hide_front");
		Add("hide_back");
		Add("hide_backface");
		Add("face_camera");
		Add("item_bounce");
		Add("move_required");
		Add("plane");
		Add("inflate");
		Add("3d");
		Add("ymax");
		Add("Invalid shape type");
		Add("Could not find name for model");
		Add("model/state/");
		Add("model/state/value/");
		Add("shape_texture");
		Add("shape_hide");
		Add("shape_color");
		Add("blocky");
		Add("realistic");
		Add("[TAG_Compound] ");
		Add("_NBT_type");
		Add("[TAG_Byte] ");
		Add("[TAG_Short] ");
		Add("[TAG_Int] ");
		Add("[TAG_Long] ");
		Add("[TAG_Float] ");
		Add("[TAG_Double] ");
		Add("[TAG_Byte_Array] ");
		Add("_NBT_length");
		Add("[TAG_String] ");
		Add("_NBT_listtype");
		Add("[TAG_Int_Array] ");
		Add("[TAG_Long_Array] ");
		Add("[TAG_Empty] ");
		Add("TAG_Byte");
		Add("TAG_Short");
		Add("TAG_Int");
		Add("TAG_Long");
		Add("TAG_Float");
		Add("TAG_Double");
		Add("TAG_Byte_Array");
		Add("TAG_String");
		Add("TAG_List");
		Add("TAG_Compound");
		Add("TAG_Int_Array");
		Add("TAG_Long_Array");
		Add("TAG_Empty");
		Add("[TAG_List of ");
		Add("] ");
		Add("TAG_Compound error");
		Add("Invalid tag");
		Add("TAG_List error");
		Add(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿỳ");
		Add("GZunzip error");
		Add("Minecraft map error");
		Add("Not a map file");
		Add("Data not available");
		Add("Colors not found");
		Add("questionreplace");
		Add("Add resource");
		Add("_set");
		Add("uTexture");
		Add("uTextureSize");
		Add("uBlendColor");
		Add("uTime");
		Add("uWindEnable");
		Add("uWindTerrain");
		Add("uWindSpeed");
		Add("uWindStrength");
		Add("uWindDirection");
		Add("uWindDirectionalSpeed");
		Add("uWindDirectionalStrength");
		Add("uFogShow");
		Add("uFogColor");
		Add("uFogDistance");
		Add("uFogSize");
		Add("uFogHeight");
		Add("uCameraPosition");
		Add("uTAAMatrix");
		Add("uSampleIndex");
		Add("uAlphaHash");
		Add("_top");
		Add("_bottom");
		Add("_secondary");
		Add(".0123456789");
		Add("+-/*^()");
		Add("0123456789ABCDEFabcdef");
		Add("-.0123456789");
		Add(" - 0123456789");
		Add("Saving object");
		Add("Object saved");
		Add("Open URL");
		Add("panelresize");
		Add("tabmove");
		Add("tabclose");
		Add("tabclick");
		Add(".miparticles;*.particles");
		Add("erroropenparticleszip");
		Add("Opening particles");
		Add("Opening legacy particles");
		Add("Particles loaded");
		Add("Saving particles");
		Add("Particles saved");
		Add("aboutversion");
		Add("aboutreleasedate");
		Add("startuptrial");
		Add("aboutminecraftpre");
		Add("aboutminecraft");
		Add("aboutsite");
		Add("aboutforums");
		Add("abouttwitter");
		Add("aboutdiscord");
		Add("aboutupgrade");
		Add("aboutdonate");
		Add("aboutdevelopment");
		Add("David");
		Add("Nimi");
		Add("Marvin");
		Add("mbanders");
		Add("aboutmoddevelopment");
		Add("Swooplezz");
		Add("SoundsDotZip");
		Add("Elkav");
		Add("aboutcreatedby");
		Add("David Andrei");
		Add("aboutuibranding");
		Add("Voxy");
		Add("aboutbetatesting");
		Add("9redwoods");
		Add("Alpha Toostrr");
		Add("AnxiousCynic");
		Add("Cade [CaZaKoJa]");
		Add("Hozq");
		Add("Jnick");
		Add("Jossamations");
		Add("KeepOnChucking");
		Add("Rollo");
		Add("SKIBBZ");
		Add("UpgradedMoon");
		Add("Vash");
		Add("__Mine__");
		Add("advancedinfo");
		Add("advancedenable");
		Add("advancednotnow");
		Add("armoreditordye");
		Add("other:leather");
		Add("helmet");
		Add("chestplate");
		Add("leggings");
		Add("boots");
		Add("downloadskinusername");
		Add("downloadskindownload");
		Add("tooltipdownloadskin");
		Add("downloadskindownloading");
		Add("downloadskindone");
		Add("popupmove");
		Add("popupclick");
		Add("exportimageimagesizecustomwidth");
		Add("exportimageimagesizecustomheight");
		Add("exportimageimagesizecustom");
		Add("exportimageimagesizecustomkeepaspectratio");
		Add("exportimageremovebackground");
		Add("exportimageblendmodewarning");
		Add("exportimageincludehidden");
		Add("exportimagehighquality");
		Add("exportimagewatermark");
		Add("exportimagesave");
		Add("exportmovievideosizecustomwidth");
		Add("exportmovievideosizecustomheight");
		Add("exportmovievideosizecustom");
		Add("exportmovievideosizecustomkeepaspectratio");
		Add("exportmoviebitrate");
		Add("exportmovieframespersecond");
		Add("exportmovieremovebackground");
		Add("exportmovieincludeaudio");
		Add("exportmovieincludehidden");
		Add("exportmoviehighquality");
		Add("exportmoviewatermark");
		Add("exportmoviesave");
		Add("importimagetype");
		Add("importimageskin");
		Add("importimageitemsheet");
		Add("importimageblocksheet");
		Add("importimageparticlesheet");
		Add("importimagetexture");
		Add("importimagedoall");
		Add("importimageok");
		Add("new popup");
		Add("importitemsheetissheet");
		Add("importitemsheetrows");
		Add("importitemsheetcolumns");
		Add("loadingresources");
		Add("loadingpercent");
		Add("modelbenchinfo");
		Add("modelbenchdownload");
		Add("modelbenchnotnow");
		Add("modelbenchdontshow");
		Add("newprojectnamedefault");
		Add("newprojectname");
		Add("newprojectauthor");
		Add("newprojectdescription");
		Add("../");
		Add("newprojectlocation");
		Add("newprojectchangefolder");
		Add("tooltipchangefolder");
		Add("newprojectcreate");
		Add("patterneditoraddlayer");
		Add("patterneditordone");
		Add("patterneditorcancel");
		Add("patterneditoreditlayer");
		Add("dye:black");
		Add("patterneditorbase");
		Add("swatchdye");
		Add("patterneditorlayer");
		Add("patterneditorpatterns");
		Add("patterneditordraglayer");
		Add("patterneditorremovelayer");
		Add("patterneditorcolors");
		Add("saveascopy");
		Add("saveassave");
		Add("Show popup");
		Add("upgradeleft");
		Add("upgraderight");
		Add("upgradepage");
		Add("upgradeinfo");
		Add("XXXXXXXX");
		Add("upgradekeypaste");
		Add("tooltippastekey");
		Add("upgradecontinue");
		Add("errorupgrade");
		Add("welcomedescription");
		Add("welcomecontinue");
		Add("previewrotate");
		Add("previewmove");
		Add("uColorsExt");
		Add("uRGBAdd");
		Add("uRGBSub");
		Add("uHSBAdd");
		Add("uHSBSub");
		Add("uHSBMul");
		Add("uMixColor");
		Add("AaBbCc");
		Add("previewspawn");
		Add("tooltipparticlesspawn");
		Add("previewplay");
		Add("tooltipstop");
		Add("tooltipplay");
		Add("entity/player/wide/steve");
		Add("Backup");
		Add(".backup");
		Add("Backup saved");
		Add("errornewprojectaccess");
		Add("Creating project");
		Add("alertprojectcreated");
		Add("alertprojectcreatedview");
		Add(".miproject;.mproj;.mani");
		Add("erroropenprojectzip");
		Add("Opening project");
		Add("Opening legacy project");
		Add("markers");
		Add("Project loaded");
		Add(".old");
		Add("image_show");
		Add("image_type");
		Add("image_stretch");
		Add("image_box_mapped");
		Add("image_rotation");
		Add("sky_sun_tex");
		Add("sky_sun_angle");
		Add("sky_sun_scale");
		Add("sky_moon_tex");
		Add("sky_moon_phase");
		Add("sky_moon_angle");
		Add("sky_moon_scale");
		Add("sky_time");
		Add("sky_rotation");
		Add("sunlight_strength");
		Add("sunlight_angle");
		Add("twilight");
		Add("sky_clouds_show");
		Add("sky_clouds_mode");
		Add("sky_clouds_story_mode");
		Add("sky_clouds_flat");
		Add("sky_clouds_z");
		Add("sky_clouds_height");
		Add("sky_clouds_thickness");
		Add("sky_clouds_tex");
		Add("sky_clouds_size");
		Add("sky_clouds_speed");
		Add("sky_clouds_offset");
		Add("ground_show");
		Add("ground_name");
		Add("ground_tex");
		Add("ground_tex_material");
		Add("ground_tex_normal");
		Add("sky_color");
		Add("sky_clouds_color");
		Add("sunlight_color");
		Add("ambient_color");
		Add("night_color");
		Add("water_color");
		Add("grass_color");
		Add("foliage_color");
		Add("leaves_oak_color");
		Add("leaves_spruce_color");
		Add("leaves_birch_color");
		Add("leaves_jungle_color");
		Add("leaves_acacia_color");
		Add("leaves_dark_oak_color");
		Add("leaves_mangrove_color");
		Add("fog_show");
		Add("fog_sky");
		Add("fog_color_custom");
		Add("fog_color");
		Add("fog_object_color_custom");
		Add("fog_object_color");
		Add("fog_distance");
		Add("fog_size");
		Add("fog_height");
		Add("wind_speed");
		Add("wind_strength");
		Add("wind_direction");
		Add("wind_directional_speed");
		Add("wind_directional_strength");
		Add("texture_animation_speed");
		Add("root");
		Add("Could not convert model name");
		Add("Could not convert model ID");
		Add("spider");
		Add("cave_spider");
		Add("ghast");
		Add("squid");
		Add("wither");
		Add("Could get number of parts for ");
		Add("templates");
		Add("timelines");
		Add("schematic");
		Add("Invalid format");
		Add("errorfilecorrupted");
		Add("Too old legacy project, format");
		Add("Could not convert model ");
		Add("Could not convert model part of ");
		Add("Could not find model part for");
		Add("spawn_constant");
		Add("spawn_amount");
		Add("spawn_region_use");
		Add("spawn_region_type");
		Add("spawn_region_path");
		Add("spawn_region_sphere_radius");
		Add("spawn_region_cube_size");
		Add("spawn_region_box_size");
		Add("spawn_region_path_radius");
		Add("bounding_box_type");
		Add("bounding_box_ground_z");
		Add("bounding_box_custom_start");
		Add("bounding_box_custom_end");
		Add("bounding_box_relative");
		Add("destroy_at_animation_finish");
		Add("destroy_at_amount");
		Add("destroy_at_amount_val");
		Add("destroy_at_time");
		Add("destroy_at_time_seconds");
		Add("destroy_at_time_israndom");
		Add("destroy_at_time_random_min");
		Add("destroy_at_time_random_max");
		Add("destroy_at_bounding_box");
		Add("types");
		Add("particletype");
		Add("temp");
		Add("temp_type");
		Add("sheet");
		Add("template");
		Add("spawn_rate");
		Add("sprite_tex");
		Add("sprite_tex_image");
		Add("sprite_template_tex");
		Add("sprite_template");
		Add("sprite_template_still_frame");
		Add("sprite_template_random_frame");
		Add("sprite_template_reverse");
		Add("sprite_frame_width");
		Add("sprite_frame_height");
		Add("sprite_frame_start");
		Add("sprite_frame_end");
		Add("sprite_animation_speed");
		Add("sprite_animation_speed_israndom");
		Add("sprite_animation_speed_random_min");
		Add("sprite_animation_speed_random_max");
		Add("sprite_animation_onend");
		Add("angle_extend");
		Add("angle_israndom");
		Add("angle_random_min");
		Add("angle_random_max");
		Add("angle_speed");
		Add("angle_speed_israndom");
		Add("angle_speed_random_min");
		Add("angle_speed_random_max");
		Add("angle_speed_add");
		Add("angle_speed_add_israndom");
		Add("angle_speed_add_random_min");
		Add("angle_speed_add_random_max");
		Add("angle_speed_mul");
		Add("angle_speed_mul_israndom");
		Add("angle_speed_mul_random_min");
		Add("angle_speed_mul_random_max");
		Add("spd_extend");
		Add("spd");
		Add("spd_israndom");
		Add("spd_random_min");
		Add("spd_random_max");
		Add("spd_add");
		Add("spd_add_israndom");
		Add("spd_add_random_min");
		Add("spd_add_random_max");
		Add("spd_mul");
		Add("spd_mul_israndom");
		Add("spd_mul_random_min");
		Add("spd_mul_random_max");
		Add("rot_extend");
		Add("rot");
		Add("rot_israndom");
		Add("rot_random_min");
		Add("rot_random_max");
		Add("rot_spd_extend");
		Add("rot_spd");
		Add("rot_spd_israndom");
		Add("rot_spd_random_min");
		Add("rot_spd_random_max");
		Add("rot_spd_add");
		Add("rot_spd_add_israndom");
		Add("rot_spd_add_random_min");
		Add("rot_spd_add_random_max");
		Add("rot_spd_mul");
		Add("rot_spd_mul_israndom");
		Add("rot_spd_mul_random_min");
		Add("rot_spd_mul_random_max");
		Add("sprite_angle");
		Add("sprite_angle_israndom");
		Add("sprite_angle_random_min");
		Add("sprite_angle_random_max");
		Add("sprite_angle_add");
		Add("sprite_angle_add_israndom");
		Add("sprite_angle_add_random_min");
		Add("sprite_angle_add_random_max");
		Add("scale_israndom");
		Add("scale_random_min");
		Add("scale_random_max");
		Add("scale_add");
		Add("scale_add_israndom");
		Add("scale_add_random_min");
		Add("scale_add_random_max");
		Add("alpha");
		Add("alpha_israndom");
		Add("alpha_random_min");
		Add("alpha_random_max");
		Add("alpha_add");
		Add("alpha_add_israndom");
		Add("alpha_add_random_min");
		Add("alpha_add_random_max");
		Add("color_israndom");
		Add("color_random_start");
		Add("color_random_end");
		Add("color_mix_enabled");
		Add("color_mix_israndom");
		Add("color_mix_random_start");
		Add("color_mix_random_end");
		Add("color_mix_time");
		Add("color_mix_time_israndom");
		Add("color_mix_time_random_min");
		Add("color_mix_time_random_max");
		Add("spawn_region");
		Add("bounding_box");
		Add("bounce");
		Add("bounce_factor");
		Add("orbit");
		Add("author");
		Add("video_width");
		Add("video_height");
		Add("video_keep_aspect_ratio");
		Add("render_settings");
		Add("grid_rows");
		Add("grid_columns");
		Add("view_main_camera");
		Add("view_second_camera");
		Add("repeat");
		Add("seamless_repeat");
		Add("show_seconds");
		Add("intervals_show");
		Add("interval_size");
		Add("interval_offset");
		Add("marker");
		Add("list_width");
		Add("hor_scroll");
		Add("zoom");
		Add("region_start");
		Add("region_end");
		Add("hide_color_tag");
		Add("work_camera");
		Add("focus");
		Add("angle_xy");
		Add("angle_z");
		Add("roll");
		Add("render_samples");
		Add("render_distance");
		Add("render_ssao");
		Add("render_ssao_radius");
		Add("render_ssao_power");
		Add("render_ssao_color");
		Add("render_shadows");
		Add("render_shadows_sun_buffer_size");
		Add("render_shadows_spot_buffer_size");
		Add("render_shadows_point_buffer_size");
		Add("render_shadows_transparent");
		Add("render_subsurface_samples");
		Add("render_subsurface_highlight");
		Add("render_subsurface_highlight_strength");
		Add("render_indirect");
		Add("render_indirect_blur_radius");
		Add("render_indirect_precision");
		Add("render_indirect_strength");
		Add("render_reflections");
		Add("render_reflections_precision");
		Add("render_reflections_thickness");
		Add("render_reflections_fade_amount");
		Add("render_glow");
		Add("render_glow_radius");
		Add("render_glow_intensity");
		Add("render_glow_falloff");
		Add("render_glow_falloff_radius");
		Add("render_glow_falloff_intensity");
		Add("render_aa");
		Add("render_aa_power");
		Add("bend_style");
		Add("opaque_leaves");
		Add("liquid_animation");
		Add("water_reflections");
		Add("block_emissive");
		Add("block_subsurface");
		Add("glint_speed");
		Add("glint_strength");
		Add("texture_filtering");
		Add("transparent_block_texture_filtering");
		Add("texture_filtering_level");
		Add("render_alpha_mode");
		Add("tonemapper");
		Add("exposure");
		Add("gamma");
		Add("material_maps");
		Add("item_sheet_size");
		Add("scenery_tl_add");
		Add("scenery_download_skins");
		Add("scenery_palette");
		Add("scenery_integrity");
		Add("scenery_integrity_invert");
		Add("randomize");
		Add("world_regions_dir");
		Add("world_box_start");
		Add("world_box_end");
		Add("world_filter_mode");
		Add("world_filter_array");
		Add("material_format");
		Add("Could not parse JSON file");
		Add("Missing parameter \"format\"");
		Add("Too new project, format");
		Add("erroropenprojectnewer");
		Add("model_tex");
		Add("model_tex_material");
		Add("model_tex_normal");
		Add("model_use_blend_color");
		Add("model_blend_color");
		Add("model_version");
		Add("banner_base_color");
		Add("pattern_base_color");
		Add("white");
		Add("banner_pattern_list");
		Add("banner_color_list");
		Add("pattern_pattern_list");
		Add("pattern_color_list");
		Add("helmet_dye");
		Add("helmet_trim_pattern");
		Add("helmet_trim_material");
		Add("chestplate_dye");
		Add("chestplate_trim_pattern");
		Add("chestplate_trim_material");
		Add("leggings_dye");
		Add("leggings_trim_pattern");
		Add("leggings_trim_material");
		Add("boots_dye");
		Add("boots_trim_pattern");
		Add("boots_trim_material");
		Add("tex");
		Add("tex_material");
		Add("tex_normal");
		Add("items/");
		Add("item/");
		Add("slot");
		Add("spin");
		Add("legacy_id");
		Add("legacy_data");
		Add("repeat_enable");
		Add("tex_mapped");
		Add("tex_hoffset");
		Add("tex_voffset");
		Add("tex_hrepeat");
		Add("tex_vrepeat");
		Add("tex_hmirror");
		Add("tex_vmirror");
		Add("closed");
		Add("detail");
		Add("color_tag");
		Add("lock");
		Add("ghost");
		Add("model_part_name");
		Add("part_of");
		Add("part_root");
		Add("is_banner");
		Add("default_values");
		Add("parent_tree_index");
		Add("tree_extend");
		Add("inherit");
		Add("rot_point");
		Add("visibility");
		Add("glow_color");
		Add("select");
		Add("pose");
		Add("scale_resize");
		Add("rot_point_custom");
		Add("texture_blur");
		Add("glow_texture");
		Add("only_render_glow");
		Add("glint_mode");
		Add("glint_scale");
		Add("glint_tex");
		Add("wind_terrain");
		Add("hq_hiding");
		Add("lq_hiding");
		Add("blend_mode");
		Add("alpha_mode");
		Add("smooth");
		Add("shape_generate");
		Add("shape_radius");
		Add("shape_tex_length");
		Add("shape_invert");
		Add("shape_tube");
		Add("shape_detail");
		Add("shape_smooth_segments");
		Add("shape_smooth_ring");
		Add("BG_SKY_CLOUDS_Z");
		Add("BRIGHTNESS");
		Add("CAM_SHAKE_HORIZONTAL_SPEED");
		Add("CAM_SHAKE_VERTICAL_SPEED");
		Add("CAM_SHAKE_HORIZONTAL_STRENGTH");
		Add("CAM_SHAKE_VERTICAL_STRENGTH");
		Add("Resetting project");
		Add("Destroying instances");
		Add("Project resetted");
		Add("Saving project");
		Add("project_save");
		Add("Project saved");
		Add("Saving project as new");
		Add("templateobj");
		Add("created_in");
		Add("particleeditortypetextsample");
		Add("generic");
		Add("/thumbnail.png");
		Add("last_opened");
		Add("pinned");
		Add("thumbnail.png");
		Add("Updating recent list");
		Add("thumbnail");
		Add("Saved recent list");
		Add("recentlastopenednever");
		Add("recentlastopenedfuture");
		Add("recentlastopenedlastweek");
		Add("recentlastopenedyesterday");
		Add("recentlastopenedrecently");
		Add("recentlastopenedminutes");
		Add("recentlastopenedhours");
		Add("recentlastopeneddays");
		Add("recentlastopeneddate");
		Add("Render init");
		Add("Saved default render settings");
		Add("uMaterialFormat");
		Add("Material");
		Add("Normal");
		Add("uMetallic");
		Add("uRoughness");
		Add("uEmissive");
		Add("uIsWater");
		Add("uReplaceColor");
		Add("uIsGround");
		Add("uGlowColor");
		Add("uGlowTexture");
		Add("uIsSky");
		Add("uLightSpecular");
		Add("uSSS");
		Add("uSSSRadius");
		Add("uSSSColor");
		Add("uGlow");
		Add("uGlintEnabled");
		Add("uGlintTexture");
		Add("uGlintOffset");
		Add("uGlintStrength");
		Add("uGlintSize");
		Add("Loading ");
		Add("_converted");
		Add(".meshcache");
		Add("errorloadmap");
		Add("errorloadmodel");
		Add("Error loading audio");
		Add("errorloadaudio");
		Add("Loading audio");
		Add("read");
		Add("Could not convert block texture");
		Add("res_load_pack");
		Add("Error unzipping pack");
		Add("errorunzippack");
		Add("loadpackmodeltextures");
		Add("blocktextures");
		Add("loadpackblocktextures");
		Add("itemtextures");
		Add("loadpackitemtextures");
		Add("items");
		Add("_s");
		Add("_n");
		Add("Pack loaded");
		Add("Block textures");
		Add("load static");
		Add("Block texture not found");
		Add("load animated");
		Add("Animated block texture not found");
		Add("The following block textures were unused:\n");
		Add("Block textures, blocksize");
		Add("static block surface");
		Add("static block preview");
		Add("animated block surfaces");
		Add("animated frames");
		Add(".png.mcmeta");
		Add("animation");
		Add("interpolate");
		Add("frametime");
		Add("animated block preview");
		Add("find static block depths");
		Add("find animated block depths");
		Add("Block textures: ");
		Add("Block textures all");
		Add("Item textures");
		Add("load");
		Add("Item texture not found");
		Add("The following item textures were unused:\n");
		Add("Item textures: ");
		Add("Model textures");
		Add("_s.png");
		Add("_n.png");
		Add("entity/steve");
		Add("Model texture not found");
		Add("entity/steve_s");
		Add("entity/steve_n");
		Add("Particle textures");
		Add("Particle texture not found");
		Add("explosion");
		Add("legacy sheets");
		Add("pack.mcmeta");
		Add("Error loading pack.mcmeta");
		Add("pack_format");
		Add("res_load_scenery");
		Add("errorloadworld");
		Add("res_load_scenery, Parse NBT");
		Add("Schematic");
		Add("Loading .blocks");
		Add("loadsceneryblocks");
		Add("loadscenerycaptionpieceof");
		Add("loadscenerycaption");
		Add("loadsceneryaddtimelines");
		Add("res_load_scenery, Set models");
		Add("loadscenerymodel");
		Add("res_load_scenery, Generate models");
		Add("loadscenerypieceof");
		Add("errorloadschematic");
		Add("loadscenerydownload");
		Add("Failed to download texture");
		Add("loadsceneryopen");
		Add("loadaudioread");
		Add("loadpackunzip");
		Add("block/stone");
		Add("block/grass_side");
		Add("block/tnt_side");
		Add("block/sapling_oak");
		Add("62A857");
		Add("downloadskinname");
		Add("scrollbar");
		Add("Loading settings");
		Add("new");
		Add("closed_toasts");
		Add("program");
		Add("advanced_mode");
		Add("fps");
		Add("project_folder");
		Add("backup_time");
		Add("backup_amount");
		Add("spawn_cameras");
		Add("unlimited_values");
		Add("watermark_custom");
		Add("watermark_fn");
		Add("watermark_halign");
		Add("watermark_valign");
		Add("watermark_padding");
		Add("watermark_scale");
		Add("watermark_opacity");
		Add("interface");
		Add("language_filename");
		Add("theme");
		Add("accent");
		Add("accent_custom");
		Add("timeline_autoscroll");
		Add("timeline_show_markers");
		Add("interface_compact");
		Add("timeline_compact");
		Add("reduced_motion");
		Add("timeline_select_jump");
		Add("timeline_hide_ghosts");
		Add("timeline_frame_snap");
		Add("z_is_up");
		Add("show_shortcuts_bar");
		Add("gizmos_face_camera");
		Add("fade_gizmos");
		Add("camera_lock_mouse");
		Add("place_new");
		Add("scale_auto");
		Add("separate_tool_modes");
		Add("panel_left_bottom_size");
		Add("panel_right_bottom_size");
		Add("panel_bottom_size");
		Add("panel_top_size");
		Add("panel_left_top_size");
		Add("panel_right_top_size");
		Add("properties_location");
		Add("ground_editor_location");
		Add("template_editor_location");
		Add("timeline_editor_location");
		Add("frame_editor_location");
		Add("settings_location");
		Add("timeline_window");
		Add("view_split");
		Add("view_main_overlays");
		Add("view_main_aspect_ratio");
		Add("view_main_grid");
		Add("view_main_gizmos");
		Add("view_main_fog");
		Add("view_main_effects");
		Add("view_main_particles");
		Add("view_main_location");
		Add("view_second_show");
		Add("view_second_overlays");
		Add("view_second_aspect_ratio");
		Add("view_second_grid");
		Add("view_second_gizmos");
		Add("view_second_fog");
		Add("view_second_effects");
		Add("view_second_particles");
		Add("view_second_location");
		Add("view_second_width");
		Add("view_second_height");
		Add("view_second_window");
		Add("snap_absolute");
		Add("snap_size_position");
		Add("snap_size_rotation");
		Add("snap_size_scale");
		Add("modelbench_popup_hidden");
		Add("controls");
		Add("move_speed");
		Add("look_sensitivity");
		Add("fast_modifier");
		Add("slow_modifier");
		Add("export");
		Add("exportmovie_format");
		Add("exportmovie_frame_rate");
		Add("exportmovie_framespersecond");
		Add("exportmovie_bit_rate");
		Add("exportmovie_include_audio");
		Add("exportmovie_remove_background");
		Add("exportmovie_high_quality");
		Add("exportmovie_watermark");
		Add("exportimage_remove_background");
		Add("exportimage_include_hidden");
		Add("exportimage_high_quality");
		Add("exportimage_watermark");
		Add("main_window");
		Add("rect");
		Add("maximized");
		Add("world_import");
		Add("filter_enabled");
		Add("filter_mode");
		Add("filter_list");
		Add("unload_regions");
		Add("recent.file");
		Add("Loading legacy settings");
		Add("Loading legacy recent files");
		Add("Saving settings");
		Add("recent_files");
		Add("scenery_remove_edges");
		Add("timeline_location");
		Add("exportmovie_include_hidden");
		Add("Saved settings");
		Add("03A9F4");
		Add("full");
		Add("right_bottom");
		Add("uAddTexture");
		Add("uAmount");
		Add("uPower");
		Add("uScreenSize");
		Add("uKernel");
		Add("uSamples");
		Add("uRadius");
		Add("uDirection");
		Add("uTexSize");
		Add("uColor");
		Add("uBlurAmount");
		Add("uColorOffset");
		Add("uDistortChannels");
		Add("uBox");
		Add("uContrast");
		Add("uBrightness");
		Add("uSaturation");
		Add("uVibrance");
		Add("uColorBurn");
		Add("uSunDirection");
		Add("uLightAmount");
		Add("uLightData");
		Add("uAmbientColor");
		Add("uFallbackColor");
		Add("uTonemapper");
		Add("uExposure");
		Add("uGamma");
		Add("uEye");
		Add("uNear");
		Add("uFar");
		Add("uDistortAmount");
		Add("uRepeatImage");
		Add("uZoomAmount");
		Add("uThreshold");
		Add("uNormalBufferScale");
		Add("uPixelCheck");
		Add("uDepthBuffer");
		Add("uDepth");
		Add("uRange");
		Add("uFadeSize");
		Add("uBlurBuffer");
		Add("uBlurSize");
		Add("uBias");
		Add("uGain");
		Add("uFringe");
		Add("uFringeAngle");
		Add("uFringeStrength");
		Add("uSampleAmount");
		Add("uWeightSamples");
		Add("uFogBuffer");
		Add("uNormalBuffer");
		Add("uNoiseBuffer");
		Add("uNoiseSize");
		Add("uShadowsEnabled");
		Add("uShadows");
		Add("uSpecularEnabled");
		Add("uSpecular");
		Add("uMask");
		Add("uMaterialBuffer");
		Add("uIndirectEnabled");
		Add("uIndirectStrength");
		Add("uReflectionsEnabled");
		Add("uLightPosition");
		Add("uLightColor");
		Add("uLightStrength");
		Add("uLightNear");
		Add("uLightFar");
		Add("uLightFadeSize");
		Add("uShadowPosition");
		Add("uLightSize");
		Add("uDepthBufferSize");
		Add("uLightMatrix");
		Add("uShadowMatrix");
		Add("uLightSpotSharpness");
		Add("uLightGobo");
		Add("uLightMatBiasMVP");
		Add("uSunNear");
		Add("uSunFar");
		Add("uLightDirection");
		Add("uDepthBuffer0");
		Add("uDepthBuffer1");
		Add("uDepthBuffer2");
		Add("uCascadeEndClipSpace");
		Add("uIndirect");
		Add("uDiffuseBuffer");
		Add("uRayType");
		Add("uPrecision");
		Add("uThickness");
		Add("uRayDistance");
		Add("uDataBuffer");
		Add("uProjMatrix");
		Add("uProjMatrixInv");
		Add("uViewMatrixInv");
		Add("uSkyColor");
		Add("uFadeAmount");
		Add("uIndirectStength");
		Add("uSamplesExp");
		Add("uSamplesDec");
		Add("uSamplesAlpha");
		Add("uSample");
		Add("uSamplesStrength");
		Add("uRenderBackground");
		Add("uEmissiveBuffer");
		Add("uMaskBuffer");
		Add("uSSSBuffer");
		Add("uSSSRangeBuffer");
		Add("uDirect");
		Add("uDefaultEmissive");
		Add("uDefaultSubsurface");
		Add("uTextureMaterial");
		Add("uTextureNormal");
		Add("uSSSHighlight");
		Add("uSSSHighlightStrength");
		Add("uUseNormalMap");
		Add("uStrength");
		Add("uSize");
		Add("uPalette");
		Add("uPaletteKey");
		Add("uPaletteSize");
		Add("Shader init");
		Add("shaders_are_supported");
		Add("shader_alpha_fix");
		Add("shader_alpha_test");
		Add("shader_blend");
		Add("shader_border");
		Add("shader_outline");
		Add("shader_palette");
		Add("shader_color_camera");
		Add("shader_color_fog");
		Add("shader_color_fog_lights");
		Add("shader_depth");
		Add("shader_depth_ortho");
		Add("shader_depth_point");
		Add("shader_draw_texture");
		Add("shader_replace");
		Add("shader_replace_alpha");
		Add("shader_high_dof");
		Add("shader_high_dof_coc");
		Add("shader_high_dof_coc_blur");
		Add("shader_high_fog");
		Add("shader_high_fog_apply");
		Add("shader_high_light_point");
		Add("shader_high_light_point_shadowless");
		Add("shader_high_light_spot");
		Add("shader_high_light_sun");
		Add("shader_high_ssao");
		Add("shader_color_glow");
		Add("shader_high_bloom_threshold");
		Add("shader_add");
		Add("shader_blur");
		Add("shader_color_correction");
		Add("shader_vignette");
		Add("shader_noise");
		Add("shader_ca");
		Add("shader_distort");
		Add("shader_high_lighting_apply");
		Add("shader_high_samples_add");
		Add("shader_high_samples_unpack");
		Add("shader_high_depth_normal");
		Add("shader_high_material");
		Add("shader_high_subsurface");
		Add("shader_high_subsurface_scatter");
		Add("shader_high_raytrace");
		Add("shader_high_raytrace_resolve");
		Add("shader_high_indirect_blur");
		Add("shader_tonemap");
		Add("shader_clip");
		Add("shader_high_glint");
		Add(" compiled");
		Add("Shader compilation failed");
		Add("Try updating your graphics drivers");
		Add("Some shaders failed to compile.\nCheck that your graphics drivers are up-to-date and restart Mine-imator.\n\nOpen support article about updating graphics drivers?");
		Add("uCameraPos");
		Add("uSoftness");
		Add("uRayDirection");
		Add("shortcut");
		Add("viewportcam");
		Add("viewtimeline");
		Add("pan");
		Add("walk");
		Add("cameramove");
		Add("tlcameramove");
		Add("ascend");
		Add("descend");
		Add("faster");
		Add("slower");
		Add("rollforward");
		Add("rollback");
		Add("rollreset");
		Add("reset");
		Add("timelinekeyframes");
		Add("tlkeyframeselect");
		Add("tlkeyframeselectadd");
		Add("tlkeyframeselectgroup");
		Add("tlkeyframeselectgroupadd");
		Add("tlkeyframedeselect");
		Add("tlkeyframedeselectgroup");
		Add("timelinenames");
		Add("tltimelineselect");
		Add("tltimelineselectadd");
		Add("tltimelineselectgroup");
		Add("tltimelineselectgroupadd");
		Add("tltimelinedeselect");
		Add("tltimelinedeselectgroup");
		Add("timelinebar");
		Add("tlsettime");
		Add("tlsetregion");
		Add("scrollvertical");
		Add("scrollhorizontal");
		Add("worldimport");
		Add("worldcreateselection");
		Add("worldignoreselection");
		Add("worldimportselection");
		Add("worldfinishselection");
		Add("worldclearselection");
		Add(" + ");
		Add("+ ");
		Add("blockfilter");
		Add("resfilename");
		Add("particle");
		Add("listfilter");
		Add("tooltipfilterlist");
		Add("listsearch");
		Add("sortlist_resize");
		Add("column");
		Add("-.");
		Add("-0.");
		Add("=");
		Add("...");
		Add("frameeditorbend");
		Add("frameeditorbendwheel");
		Add("buttons");
		Add("link");
		Add("sliders");
		Add("contextmenubendwheels");
		Add("contextmenubendsliders");
		Add("paste");
		Add("copy");
		Add("frameeditorcameravideosizecustomwidth");
		Add("frameeditorcameravideosizecustomheight");
		Add("frameeditorcameravideosizecustom");
		Add("frameeditorcameravideosizecustomkeepaspectratio");
		Add("frameeditorcamerafov");
		Add("frameeditorcameraaperture");
		Add("frameeditorcameraaperturetip");
		Add("frameeditorcamerabladeamount");
		Add("frameeditorcamerabladeangle");
		Add("frameeditorcameralightmanagement");
		Add("frameeditorcameratonemapperreinhard");
		Add("frameeditorcameratonemapperaces");
		Add("frameeditorcameratonemappernone");
		Add("frameeditorcameraexposure");
		Add("frameeditorcameragamma");
		Add("frameeditorcamerarotate");
		Add("frameeditorcamerarotateanglexywheel");
		Add("frameeditorcamerarotateanglezwheel");
		Add("frameeditorcamerarotateanglexy");
		Add("frameeditorcamerarotateanglez");
		Add("frameeditorcamerarotateangle");
		Add("frameeditorcamerarotatedistance");
		Add("frameeditorcamerarotatelookatpoint");
		Add("frameeditorcameracamerashake");
		Add("frameeditorcameracamerashakerotational");
		Add("frameeditorcameracamerashakepositional");
		Add("frameeditorcameracamerashakemode");
		Add("frameeditorcameracamerashakestrengthx");
		Add("frameeditorcameracamerashakestrengthy");
		Add("frameeditorcameracamerashakestrengthz");
		Add("frameeditorcameracamerashakestrength");
		Add("frameeditorcameracamerashakespeedx");
		Add("frameeditorcameracamerashakespeedy");
		Add("frameeditorcameracamerashakespeedz");
		Add("frameeditorcameracamerashakespeed");
		Add("frameeditorcameradof");
		Add("frameeditorcameradofdepth");
		Add("frameeditorcameradofrange");
		Add("frameeditorcameradoffadesize");
		Add("frameeditorcameradofblursize");
		Add("frameeditorcameradofblurratio");
		Add("frameeditorcameradofbias");
		Add("frameeditorcameradofgain");
		Add("frameeditorcameradofthreshold");
		Add("frameeditorcameradoffringe");
		Add("frameeditorcameradoffringeangleredwheel");
		Add("frameeditorcameradoffringeanglegreenwheel");
		Add("frameeditorcameradoffringeanglebluewheel");
		Add("frameeditorcameradoffringeanglered");
		Add("frameeditorcameradoffringeanglegreen");
		Add("frameeditorcameradoffringeangleblue");
		Add("frameeditorcameradoffringeangle");
		Add("frameeditorcameradoffringered");
		Add("frameeditorcameradoffringegreen");
		Add("frameeditorcameradoffringeblue");
		Add("frameeditorcameradoffringeoffset");
		Add("frameeditorcamerabloom");
		Add("frameeditorcamerabloomthreshold");
		Add("frameeditorcamerabloomradius");
		Add("frameeditorcamerabloomintensity");
		Add("frameeditorcamerabloomratio");
		Add("frameeditorcamerabloomblend");
		Add("frameeditorcameralensdirt");
		Add("frameeditorcameralensdirtbloom");
		Add("frameeditorcameralensdirtglow");
		Add("frameeditorcameralensdirtradius");
		Add("frameeditorcameralensdirtintensity");
		Add("frameeditorcameralensdirtpower");
		Add("frameeditorcameracolorcorrection");
		Add("frameeditorcameracolorcorrectioncontrast");
		Add("frameeditorcameracolorcorrectionbrightness");
		Add("frameeditorcameracolorcorrectionsaturation");
		Add("frameeditorcameracolorcorrectionvibrance");
		Add("frameeditorcameracolorcorrectioncolorburn");
		Add("frameeditorcameragrain");
		Add("frameeditorcameragrainstrength");
		Add("frameeditorcameragrainsaturation");
		Add("frameeditorcameragrainsize");
		Add("frameeditorcameravignette");
		Add("frameeditorcameravignetteradius");
		Add("frameeditorcameravignettesoftness");
		Add("frameeditorcameravignettestrength");
		Add("frameeditorcameravignettecolor");
		Add("frameeditorcameraca");
		Add("frameeditorcameracabluramount");
		Add("frameeditorcameracadistortchannels");
		Add("frameeditorcameracaredoffset");
		Add("frameeditorcameracagreenoffset");
		Add("frameeditorcameracablueoffset");
		Add("frameeditorcameracaoffset");
		Add("frameeditorcameradistort");
		Add("frameeditorcameradistortrepeat");
		Add("frameeditorcameradistortzoom");
		Add("frameeditorcameradistortamount");
		Add("frameeditorcolor");
		Add("frameeditorblendcolor");
		Add("frameeditorhsvmul");
		Add("frameeditorrgbadd");
		Add("frameeditorhsvadd");
		Add("frameeditorrgbsub");
		Add("frameeditorhsvsub");
		Add("frameeditorglowcolor");
		Add("frameeditormixcolor");
		Add("frameeditormixpercent");
		Add("frameeditorfollowpos");
		Add("frameeditorfollowpostip");
		Add("frameeditorfollowpostarget");
		Add("frameeditorfollowposfollowaxis");
		Add("frameeditorfollowposx");
		Add("frameeditorfollowposy");
		Add("frameeditorfollowposz");
		Add("frameeditorfollowrot");
		Add("frameeditorfollowrottip");
		Add("frameeditorfollowrottarget");
		Add("frameeditorfollowrotfollowaxis");
		Add("frameeditorfollowrotx");
		Add("frameeditorfollowroty");
		Add("frameeditorfollowrotz");
		Add("frameeditorfollowscale");
		Add("frameeditorfollowscaletip");
		Add("frameeditorfollowscaletarget");
		Add("frameeditorfollowscalefollowaxis");
		Add("frameeditorfollowscalex");
		Add("frameeditorfollowscaley");
		Add("frameeditorfollowscalez");
		Add("frameeditorik");
		Add("frameeditoriktip");
		Add("frameeditoriktarget");
		Add("frameeditorikangletarget");
		Add("frameeditorikangleoffset");
		Add("frameeditorikblend");
		Add("frameeditoritemcustomitemslot");
		Add("frameeditoritemitemslot");
		Add("transitioneaseinout");
		Add("transitionease");
		Add("transitioneasein");
		Add("transitioneaseout");
		Add("frameeditoreaseinx");
		Add("frameeditoreaseiny");
		Add("frameeditoreasein");
		Add("frameeditoreaseoutx");
		Add("frameeditoreaseouty");
		Add("frameeditoreaseout");
		Add("frameeditorlinkeaseinout");
		Add("tooltiplinkeaseinout");
		Add("frameeditoreasecopy");
		Add("frameeditoreasepaste");
		Add("frameeditoreasereset");
		Add("frameeditorvisible");
		Add("frameeditorlightspot");
		Add("frameeditorlightpoint");
		Add("frameeditorlightlighttype");
		Add("frameeditorlightcolor");
		Add("frameeditorlightsize");
		Add("frameeditorlightrange");
		Add("frameeditorlightfadesize");
		Add("frameeditorlightspotradius");
		Add("frameeditorlightspotsharpness");
		Add("frameeditorlightstrength");
		Add("frameeditorlightspecularstrength");
		Add("frameeditoropacity");
		Add("frameeditorsurface");
		Add("frameeditorsubsurface");
		Add("frameeditorsubsurfaceradius");
		Add("frameeditorsubsurfaceradiusred");
		Add("frameeditorsubsurfaceradiusgreen");
		Add("frameeditorsubsurfaceradiusblue");
		Add("frameeditorsubsurfaceradiusrgb");
		Add("frameeditorsubsurfacecolor");
		Add("frameeditorwindinfluence");
		Add("frameeditorparticlesspawn");
		Add("frameeditorparticlesfreeze");
		Add("frameeditorparticlesclear");
		Add("frameeditorparticlescustomseed");
		Add("frameeditorparticlesseed");
		Add("frameeditorparticlesattractor");
		Add("frameeditorparticlesforce");
		Add("frameeditorparticlesforcedirectional");
		Add("frameeditorparticlesforcevortex");
		Add("frameeditorfollowpath");
		Add("frameeditorpathoffset");
		Add("frameeditorpathpointangle");
		Add("frameeditorpathpointscale");
		Add("frameeditorposition");
		Add("frameeditorpositionx");
		Add("frameeditorpositiony");
		Add("frameeditorpositionz");
		Add("frameeditorrotation");
		Add("frameeditorrotationxwheel");
		Add("frameeditorrotationywheel");
		Add("frameeditorrotationzwheel");
		Add("frameeditorrotationx");
		Add("frameeditorrotationy");
		Add("frameeditorrotationz");
		Add("frameeditorscale");
		Add("frameeditorscalexyz");
		Add("frameeditorscalex");
		Add("frameeditorscaley");
		Add("frameeditorscalez");
		Add("frameeditorsoundvolume");
		Add("frameeditorsoundpitch");
		Add("frameeditorsoundstart");
		Add("frameeditorsoundend");
		Add("frameeditorsoundtime");
		Add("frameeditortextaa");
		Add("frameeditortextaatip");
		Add("frameeditortextoutline");
		Add("frameeditortextoutlinecolor");
		Add("frameeditortextalignment");
		Add("frameeditortextleft");
		Add("frameeditortextcenter");
		Add("frameeditortextright");
		Add("frameeditortexthalign");
		Add("frameeditortexttop");
		Add("frameeditortextbottom");
		Add("frameeditortextvalign");
		Add("timelineeditortext");
		Add("frameeditor");
		Add("texmaterial");
		Add("frameeditorroughness");
		Add("frameeditormetallic");
		Add("frameeditoremissive");
		Add("texnormal");
		Add("tabposition");
		Add("tabrotation");
		Add("tabscale");
		Add("tabbend");
		Add("tabprojectproperties");
		Add("tabtimeline");
		Add("tabcharmodel");
		Add("tabblock");
		Add("tabitem");
		Add("tabbodypart");
		Add("tabparticles");
		Add("tabground");
		Add("tabtimelineeditor");
		Add("tabframeeditor");
		Add("tabsettings");
		Add("backgroundskytime");
		Add("backgroundskyrotation");
		Add("backgroundsunlight");
		Add("backgroundsunlightangle");
		Add("backgroundsunlightangletip");
		Add("backgroundsunlightstrength");
		Add("backgroundskybackground");
		Add("backgroundskyminecraft");
		Add("backgroundskycustom");
		Add("backgroundsky");
		Add("backgroundimagestretch");
		Add("backgroundimagerotation");
		Add("backgroundimageboxmapped");
		Add("backgroundimagesavemap");
		Add("backgroundskysunangle");
		Add("backgroundskysunscale");
		Add("backgroundskymoonangle");
		Add("backgroundskymoonscale");
		Add("backgroundskycloudsshow");
		Add("backgroundskycloudsnormal");
		Add("backgroundskycloudsfaded");
		Add("backgroundskycloudsflat");
		Add("backgroundskycloudsmode");
		Add("backgroundskycloudsspeed");
		Add("backgroundskycloudsoffset");
		Add("backgroundskycloudsheight");
		Add("backgroundskycloudssize");
		Add("backgroundskycloudsthickness");
		Add("backgroundgroundshow");
		Add("backgroundground");
		Add("backgroundgroundchange");
		Add("tooltipchangeground");
		Add("backgroundbiome");
		Add("backgroundbiomecolors");
		Add("backgroundgrasscolor");
		Add("backgroundfoliagecolor");
		Add("backgroundwatercolor");
		Add("backgroundleafcolors");
		Add("backgroundleavesoakcolor");
		Add("backgroundleavessprucecolor");
		Add("backgroundleavesbirchcolor");
		Add("backgroundleavesjunglecolor");
		Add("backgroundleavesacaciacolor");
		Add("backgroundleavesdarkoakcolor");
		Add("backgroundleavesmangrovecolor");
		Add("backgroundscenecolors");
		Add("backgroundskycolor");
		Add("backgroundskycloudscolor");
		Add("backgroundsunlightcolor");
		Add("backgroundambientcolor");
		Add("backgroundnightcolor");
		Add("backgroundtwilight");
		Add("backgroundtwilighttip");
		Add("backgroundfog");
		Add("backgroundfogsky");
		Add("backgroundfogcolorcustom");
		Add("backgroundfogcolor");
		Add("backgroundfogcustomobjectcolor");
		Add("backgroundfogobjectcolor");
		Add("backgroundfogdistance");
		Add("backgroundfogsize");
		Add("backgroundfogheight");
		Add("backgroundwind");
		Add("backgroundwindspeed");
		Add("backgroundwindstrength");
		Add("backgroundwinddirection");
		Add("backgroundwinddirectionalspeed");
		Add("backgroundwinddirectionalstrength");
		Add("backgroundtextureanimationspeed");
		Add("librarynew");
		Add("tooltiptemplatenew");
		Add("libraryanimate");
		Add("tooltiptemplateanimate");
		Add("libraryduplicate");
		Add("tooltiptemplateduplicate");
		Add("libraryremove");
		Add("tooltiptemplateremove");
		Add("libraryname");
		Add("librarycharmodel");
		Add("libraryspblockmodel");
		Add("librarycharmodelchange");
		Add("tooltipchangemodel");
		Add("librarymodelcolor");
		Add("libraryitemchange");
		Add("tooltipchangeitem");
		Add("libraryitem3d");
		Add("libraryitemfacecamera");
		Add("libraryitembounce");
		Add("libraryitemspin");
		Add("libraryblockchange");
		Add("tooltipchangeblock");
		Add("librarybodypartof");
		Add("librarybodypartunknown");
		Add("librarybodypartchange");
		Add("librarypatterneditor");
		Add("libraryarmoreditor");
		Add("libraryparticleeditoropen");
		Add("librarytext3d");
		Add("librarytextfacecamera");
		Add("libraryshapetexmapped");
		Add("libraryshapetexmappedtip");
		Add("libraryshapetexsavemap");
		Add("libraryshapetexhoffset");
		Add("libraryshapetexvoffset");
		Add("libraryshapetexoffset");
		Add("libraryshapetexhrepeat");
		Add("libraryshapetexvrepeat");
		Add("libraryshapetexrepeat");
		Add("libraryshapetexhmirror");
		Add("libraryshapetexvmirror");
		Add("libraryshapeclosed");
		Add("libraryshapeinvert");
		Add("libraryshapedetail");
		Add("libraryshapefacecamera");
		Add("libraryrandomizeblocks");
		Add("libraryrandomizeblockshelp");
		Add("libraryrepeat");
		Add("libraryrepeatx");
		Add("libraryrepeaty");
		Add("libraryrepeatz");
		Add("projectname");
		Add("projectauthor");
		Add("projectdescription");
		Add("tooltipopenfolder");
		Add("projectvideosizecustomwidth");
		Add("projectvideosizecustomheight");
		Add("projectvideosizecustomkeepaspectratio");
		Add("projecttempo");
		Add("projecttempotip");
		Add("renderdistance");
		Add("renderdistancetip");
		Add("rendersamples");
		Add("renderssao");
		Add("renderssaotip");
		Add("renderssaoradius");
		Add("renderssaopower");
		Add("renderssaocolor");
		Add("rendershadows");
		Add("rendershadowsbuffersize");
		Add("rendershadowstransparent");
		Add("rendersubsurfacescattering");
		Add("rendersubsurfacescatteringtip");
		Add("rendersubsurfacescatterquality");
		Add("rendersubsurfacescatterhighlight");
		Add("rendersubsurfacescatterhighlighttip");
		Add("rendersubsurfacescatterhighlightstrength");
		Add("renderindirect");
		Add("renderindirecttip");
		Add("renderindirectprecision");
		Add("renderindirectprecisiontip");
		Add("renderindirectblurradius");
		Add("renderindirectstrength");
		Add("renderreflections");
		Add("renderreflectionsprecision");
		Add("renderreflectionsprecisiontip");
		Add("renderreflectionsfadeamount");
		Add("renderreflectionsfadeamounttip");
		Add("renderreflectionsthickness");
		Add("renderreflectionsthicknesstip");
		Add("renderglow");
		Add("renderglowradius");
		Add("renderglowintensity");
		Add("renderglowfalloff");
		Add("renderglowfalloffradius");
		Add("renderglowfalloffintensity");
		Add("renderaa");
		Add("renderaatip");
		Add("renderaapower");
		Add("rendertexturefiltering");
		Add("rendertexturefilteringtip");
		Add("rendertexturefilteringtransparentblocks");
		Add("rendertexturefilteringlevel");
		Add("renderlightmanagement");
		Add("renderexposure");
		Add("rendergamma");
		Add("rendermodelsscenery");
		Add("renderbendstylerealistic");
		Add("renderbendstyleblocky");
		Add("renderbendstyle");
		Add("renderopaqueleaves");
		Add("renderliquidanimation");
		Add("renderwaterreflections");
		Add("renderwaterreflectionshelp");
		Add("renderglint");
		Add("renderglintspeed");
		Add("renderglintstrength");
		Add("renderdefaultemissive");
		Add("renderdefaultemissivetip");
		Add("renderdefaultsubsurfaceradius");
		Add("renderdefaultsubsurfaceradiustip");
		Add("rendermaterialmaps");
		Add("rendermaterialmapstip");
		Add("renderimport");
		Add("tooltipsettingsimport");
		Add("renderexport");
		Add("tooltipsettingsexport");
		Add("rendersetdefault");
		Add("tooltipsettingssetdefault");
		Add("questionsetasdefault");
		Add("renderreset");
		Add("tooltipsettingsreset");
		Add("resourcesnew");
		Add("tooltipresourcenew");
		Add("previewexport");
		Add("tooltipresourcesave");
		Add("resourcesreload");
		Add("tooltipresourcereload");
		Add("resourcesreplace");
		Add("tooltipresourcereplace");
		Add("resourcesremove");
		Add("tooltipresourceremove");
		Add("resourcessceneryrandomize");
		Add("resourcessceneryrandomizehelp");
		Add("resourcespackimagecharacter");
		Add("resourcespackimagecolormap");
		Add("resourcespackimageparticles");
		Add("resourcespack");
		Add("resourcespackimageblocksheetstatic");
		Add("resourcespackimageblocksheetanimated");
		Add("resourcespackimageblocksheet");
		Add("resourcespackimagecolormapgrass");
		Add("resourcespackimagecolormapfoliage");
		Add("resourcespackimageparticlesimage1");
		Add("resourcespackimageparticlesimage2");
		Add("resourcesitemsheetsizerows");
		Add("resourcesitemsheetsizecolumns");
		Add("resourcesscenerystructureintegrity");
		Add("resourcesscenerystructureintegrityinputdrag");
		Add("resourcesscenerystructureintegrityinvert");
		Add("resourcesmaterialformatlabpbr");
		Add("resourcesmaterialformatseus");
		Add("resourcesmaterialformat");
		Add("resourcesfilenameopen");
		Add("resourcesfilename");
		Add("tooltipresourceopen");
		Add("settingscontrolskeybinds");
		Add("settingscontrolsfile");
		Add("settingscontrolsedit");
		Add("settingscontrolstools");
		Add("settingscontrolsviewport");
		Add("settingscontrolstimeline");
		Add("settingscontrolscamera");
		Add("settingsmovespeed");
		Add("settingslooksensitivity");
		Add("settingsfastmodifier");
		Add("settingsslowmodifier");
		Add("settingscontrolsrestoredefaults");
		Add("settingsappearance");
		Add("settingsthemelight");
		Add("settingsthemedark");
		Add("settingsthemedarker");
		Add("settingstheme");
		Add("settingsaccentcolor");
		Add("settingslanguagefolder");
		Add("tooltiplanguagefolder");
		Add("settingslanguageadd");
		Add("tooltiplanguageadd");
		Add("settingsinterfacescaleauto");
		Add("settingsinterfacescaleautotip");
		Add("settingscompact");
		Add("settingscompacttimeline");
		Add("settingsreducedmotion");
		Add("settingstimeline");
		Add("settingstimelineautoscroll");
		Add("settingstimelineselectjump");
		Add("settingstimelineframesnap");
		Add("settingstimelineframesnaptip");
		Add("settingstools");
		Add("settingszisup");
		Add("settingsseparatetoolmodes");
		Add("settingsseparatetoolmodestip");
		Add("settingsviewport");
		Add("settingsgizmosfacecamera");
		Add("settingsfadegizmos");
		Add("settingscameralockmouse");
		Add("settingsplacenew");
		Add("settingsmodesimple");
		Add("settingsmodeadvanced");
		Add("settingsmode");
		Add("settingsmodeadvancedtip");
		Add("settingsmodesimpletip");
		Add("settingsbackup");
		Add("settingsbackuptimeminutes");
		Add("settingsbackuptime");
		Add("settingsbackupamount");
		Add("settingswatermark");
		Add("settingswatermarknone");
		Add("settingswatermarkimagelocation");
		Add("settingswatermarkimport");
		Add("tooltipimportwatermarkimage");
		Add("settingswatermarkreset");
		Add("tooltipresetwatermarkimage");
		Add("settingswatermarkalignment");
		Add("settingswatermarkhalign");
		Add("settingswatermarkvalign");
		Add("settingswatermarkpadding");
		Add("settingswatermarkscale");
		Add("settingswatermarkopacity");
		Add("settingsspawncameras");
		Add("settingsunlimitedvalues");
		Add("settingssceneryremoveedges");
		Add("templateeditormodel");
		Add("templateeditorblock");
		Add("particleeditorexport");
		Add("tooltipparticlesexport");
		Add("particleeditorimport");
		Add("tooltipparticlesimport");
		Add("particleeditorclear");
		Add("tooltipparticlesclear");
		Add("particleeditorspawn");
		Add("particleeditorcount");
		Add("particleeditorspawncaption");
		Add("particleeditorspawnconstant");
		Add("particleeditorspawnburst");
		Add("particleeditorspawntype");
		Add("particleeditorspawnconstanttip");
		Add("particleeditorspawnbursttip");
		Add("particleeditorspawnamount");
		Add("particleeditorperminute");
		Add("particleeditorperburst");
		Add("particleeditorspawnregion");
		Add("particleeditorspawnregionsphereradius");
		Add("particleeditorspawnregioncubesize");
		Add("particleeditorspawnregionboxxsize");
		Add("particleeditorspawnregionboxysize");
		Add("particleeditorspawnregionboxzsize");
		Add("particleeditorspawnregionboxsize");
		Add("particleeditorspawnregionpathradius");
		Add("particleeditorboundingboxtype");
		Add("particleeditorboundingboxground");
		Add("particleeditorboundingboxfromx");
		Add("particleeditorboundingboxfromy");
		Add("particleeditorboundingboxfromz");
		Add("particleeditorboundingboxcustomfrom");
		Add("particleeditorboundingboxtox");
		Add("particleeditorboundingboxtoy");
		Add("particleeditorboundingboxtoz");
		Add("particleeditorboundingboxcustomto");
		Add("particleeditorboundingboxrelative");
		Add("particleeditordestruction");
		Add("particleeditordestroy");
		Add("particleeditordestroyanimationfinish");
		Add("particleeditordestroyboundingboxtoggle");
		Add("particleeditordestroyamount");
		Add("particleeditordestroyamountval");
		Add("particleeditordestroytime");
		Add("particleeditordestroylifespan");
		Add("particleeditoremitters");
		Add("particleeditortypeadd");
		Add("tooltipparticlesadd");
		Add("particleeditortypeduplicate");
		Add("tooltipparticlesduplicate");
		Add("particleeditortypedelete");
		Add("tooltipparticlesdelete");
		Add("particleeditortypespawnrate");
		Add("particleeditortypespriteteximage");
		Add("particleeditortypetext");
		Add("particleeditortypespriteteximage1");
		Add("particleeditortypespriteteximage2");
		Add("particleeditorpixels");
		Add("particleeditortypespriteframewidth");
		Add("particleeditortypespriteframeheight");
		Add("particleeditortypespriteframesize");
		Add("particleeditortypespriteframestart");
		Add("particleeditorfrom");
		Add("particleeditortypespriteframeend");
		Add("particleeditorto");
		Add("particleeditortypespriteframeframes");
		Add("particleeditortypespritetemplatestillframe");
		Add("particleeditortypespritetemplaterandomframe");
		Add("particleeditortypespritetemplatereverse");
		Add("particleeditortypespriteanimationspeed");
		Add("particleeditorfps");
		Add("particleeditortypespriteanimationonendstop");
		Add("particleeditortypespriteanimationonendloop");
		Add("particleeditortypespriteanimationonendreverse");
		Add("particleeditortypespriteanimationonend");
		Add("particleeditortypetrajectory");
		Add("particleeditortypeangle");
		Add("particleeditortypeanglex");
		Add("particleeditortypeangley");
		Add("particleeditortypeanglez");
		Add("particleeditortypeanglespeed");
		Add("particleeditortypeanglespeedadd");
		Add("particleeditortypeanglespeedmul");
		Add("particleeditortypeanglexyz");
		Add("particleeditortypeangleextend");
		Add("xyz");
		Add("particleeditortypespeed");
		Add("particleeditortypespeedx");
		Add("particleeditortypespeedy");
		Add("particleeditortypespeedz");
		Add("particleeditortypespeedxadd");
		Add("particleeditortypespeedyadd");
		Add("particleeditortypespeedzadd");
		Add("particleeditortypespeedxmul");
		Add("particleeditortypespeedymul");
		Add("particleeditortypespeedzmul");
		Add("particleeditortypespeedxyz");
		Add("particleeditortypespeedxyzadd");
		Add("particleeditortypespeedxyzmul");
		Add("particleeditortypespeedextend");
		Add("mul");
		Add("particleeditortyperotation");
		Add("particleeditortyperotationinitial");
		Add("particleeditortyperotationx");
		Add("particleeditortyperotationy");
		Add("particleeditortyperotationz");
		Add("particleeditortyperotationxyz");
		Add("particleeditortyperotationextend");
		Add("particleeditortyperotationspeed");
		Add("particleeditortyperotationspeedx");
		Add("particleeditortyperotationspeedy");
		Add("particleeditortyperotationspeedz");
		Add("particleeditortyperotationspeedxadd");
		Add("particleeditortyperotationspeedyadd");
		Add("particleeditortyperotationspeedzadd");
		Add("particleeditortyperotationspeedxmul");
		Add("particleeditortyperotationspeedymul");
		Add("particleeditortyperotationspeedzmul");
		Add("particleeditortyperotationspeedxyz");
		Add("particleeditortyperotationspeedxyzadd");
		Add("particleeditortyperotationspeedxyzmul");
		Add("particleeditortyperotationspeedextend");
		Add("particleeditortypespriteangle");
		Add("particleeditortypespriteangleadd");
		Add("particleeditortypescale");
		Add("particleeditortypeinitialscale");
		Add("particleeditortypescaleadd");
		Add("particleeditortypeappearance");
		Add("particleeditorrandomalpha");
		Add("tooltipparticlesrandom");
		Add("particleeditortypeopacity");
		Add("particleeditortypeopacityadd");
		Add("particleeditortypecolormixenabled");
		Add("particleeditortypecolorstart");
		Add("particleeditorrandomcolor");
		Add("particleeditortypecolorstartcolor1");
		Add("particleeditortypecolorcolor1");
		Add("particleeditortypecolorstartcolor2");
		Add("particleeditortypecolorcolor2");
		Add("particleeditortypecolorstartcolor");
		Add("particleeditortypecolorcolor");
		Add("particleeditortypecolorend");
		Add("particleeditorrandommixcolor");
		Add("particleeditortypecolorendcolor1");
		Add("particleeditortypecolorendcolor2");
		Add("particleeditortypecolorendcolor");
		Add("particleeditortypecolormixtime");
		Add("particleeditortypesimulation");
		Add("particleeditortypespawnregion");
		Add("particleeditortypeorbit");
		Add("particleeditortypeboundingbox");
		Add("particleeditortypebounce");
		Add("particleeditortypebouncefactor");
		Add("particleeditortypeanimationstartend");
		Add("particleeditortypespriteframeboxstart");
		Add("particleeditortypespriteframeboxend");
		Add("particlesresetpreview");
		Add("tooltipparticlesresetpreview");
		Add("particleeditorrandom");
		Add("particleeditormin");
		Add("particleeditormax");
		Add("timelineframe");
		Add(" / ");
		Add("timelinepreviouskeyframe");
		Add("tooltiptlpreviouskeyframe");
		Add("timelinepreviousframe");
		Add("tooltiptlpreviousframe");
		Add("timelinestop");
		Add("tooltiptlstop");
		Add("timelineplay");
		Add("tooltiptlpause");
		Add("tooltiptlplay");
		Add("timelineplayregion");
		Add("tooltiptlplayregion");
		Add("timelinenextframe");
		Add("tooltiptlnextframe");
		Add("timelinenextkeyframe");
		Add("tooltiptlnextkeyframe");
		Add("timelinewalkcycle");
		Add("tooltiptlwalk");
		Add("timelineruncycle");
		Add("tooltiptlrun");
		Add("timelineintervals");
		Add("timelineintervalshide");
		Add("timelineintervalsshow");
		Add("timelineintervalsettings");
		Add("tooltiptlenableloop");
		Add("tooltiptlenableseamlessloop");
		Add("tooltiptldisableloop");
		Add("timelineloop");
		Add("tabpopout");
		Add("tooltiptlpopout");
		Add("tabpopback");
		Add("tooltiptlpopin");
		Add("timelineempty");
		Add("timelineselectkeyframes");
		Add("timelinemovemarker");
		Add("timelinefilter");
		Add("tooltiptlfilter");
		Add("timelinesearch");
		Add("timelineclick");
		Add("tooltiptlshow");
		Add("tooltiptlhide");
		Add("tooltiptlunmute");
		Add("tooltiptlmute");
		Add("timelinelock");
		Add("tooltiptlunlock");
		Add("tooltiptllock");
		Add("timelineghosttl");
		Add("tooltiptlunghost");
		Add("tooltiptlghost");
		Add("timelineexpand");
		Add("timelinelistresize");
		Add("timelinesetsoundend");
		Add("timelineclickkeyframes");
		Add("timelinedrag");
		Add("timelinesetregionstart");
		Add("timelinesetregionend");
		Add("timelinecreateregion");
		Add("timelinezoom");
		Add("timelineeditorglint");
		Add("timelineeditorglintmodenone");
		Add("timelineeditorglintmodeitem");
		Add("timelineeditorglintmodeentity");
		Add("timelineeditorglintmode");
		Add("timelineeditorglintscale");
		Add("timelineeditorglintspeed");
		Add("timelineeditorglintstrength");
		Add("timelineeditordepth");
		Add("timelineeditortextureblur");
		Add("timelineeditortexturefiltering");
		Add("timelineeditorshadows");
		Add("timelineeditorssao");
		Add("timelineeditorwind");
		Add("timelineeditorwindterrain");
		Add("timelineeditorglow");
		Add("timelineeditorglowtexture");
		Add("timelineeditoronlyrenderglow");
		Add("timelineeditorfog");
		Add("timelineeditorbackfaces");
		Add("timelineeditorhqhiding");
		Add("timelineeditorlqhiding");
		Add("timelineeditorrendershadows");
		Add("timelineeditoraudioadd");
		Add("timelineeditorlockbend");
		Add("timelineeditorinherit");
		Add("timelineeditorinheritposition");
		Add("timelineeditorinheritrotation");
		Add("timelineeditorinheritrotpoint");
		Add("timelineeditorinheritscale");
		Add("timelineeditorinheritopacity");
		Add("timelineeditorinheritcolor");
		Add("timelineeditorinheritvisibility");
		Add("timelineeditorinheritbend");
		Add("timelineeditorinherittexture");
		Add("timelineeditorinheritsurface");
		Add("timelineeditorinheritsubsurface");
		Add("timelineeditorinheritglowcolor");
		Add("timelineeditorinheritselect");
		Add("timelineeditorinheritpose");
		Add("timelineeditorinheritposehelp");
		Add("timelineeditorscalemoderesize");
		Add("timelineeditorscalemodestretch");
		Add("timelineeditorscalemode");
		Add("timelineeditorname");
		Add("timelineeditortype");
		Add("timelineeditorrotpointcustom");
		Add("timelineeditorrotpointx");
		Add("timelineeditorrotpointy");
		Add("timelineeditorrotpointz");
		Add("timelineeditorrotpoint");
		Add("timelineeditorpathpointadd");
		Add("timelineeditorpathclosed");
		Add("timelineeditorpathsmooth");
		Add("timelineeditorpathdetail");
		Add("timelineeditorpathdetailtip");
		Add("timelineeditorpathshape");
		Add("timelineeditorpathshaperadius");
		Add("timelineeditorpathshapetexlength");
		Add("timelineeditorpathshapetexlengthtip");
		Add("timelineeditorpathshapeinvert");
		Add("timelineeditorpathshapesmoothsegments");
		Add("timelineeditorpathshapesmoothsegmentstip");
		Add("timelineeditorpathshapetube");
		Add("timelineeditorpathshapedetail");
		Add("timelineeditorpathshapesmoothring");
		Add("timelineeditorpathshapesmoothringtip");
		Add("timelineeditorpathshapesavemap");
		Add("dye:white");
		Add("particleeditortypedefault");
		Add("\r\n");
		Add("tbxrelease");
		Add(" - ");
		Add("keyleft");
		Add("keyright");
		Add("keyup");
		Add("keydown");
		Add("keyenter");
		Add("keyescape");
		Add("keyspace");
		Add("keyleftshift");
		Add("keyrightshift");
		Add("keyleftalt");
		Add("keyrightalt");
		Add("keyleftcontrol");
		Add("keyrightcontrol");
		Add("keybackspace");
		Add("keytab");
		Add("keyhome");
		Add("keyend");
		Add("keydelete");
		Add("keyinsert");
		Add("keypageup");
		Add("keypagedown");
		Add("keypause");
		Add("keyprintscreen");
		Add("F1");
		Add("F2");
		Add("F3");
		Add("F4");
		Add("F5");
		Add("F6");
		Add("F7");
		Add("F8");
		Add("F9");
		Add("F10");
		Add("F11");
		Add("F12");
		Add("keyalt");
		Add("keycontrol");
		Add("keyshift");
		Add("<No text found for \"");
		Add("\">");
		Add("timelineeditortextsample");
		Add("timelinehideghosts");
		Add("timelinefiltertags");
		Add("hidecolortag");
		Add("timelinehideghoststip");
		Add("timelineintervalssize");
		Add("timelineintervalsoffset");
		Add("free");
		Add("fixed");
		Add("timelineunusedbodypart");
		Add("timelinepartof");
		Add("timelineinstanceof");
		Add("info");
		Add("positive");
		Add("warning");
		Add("negative");
		Add("unknown");
		Add("New toast");
		Add("toolbarbackup");
		Add("toolbarsimplemode");
		Add("Found key_file");
		Add("alertupgraded");
		Add("Unzipping");
		Add(" files were extracted");
		Add("miproject;.mproj;.mani;");
		Add("miobject;miparticles;.object;.particles;.json;");
		Add("json");
		Add("assets/minecraft/models/item/");
		Add(".json;");
		Add("assets/minecraft/models/block/");
		Add("Windows 11");
		Add("Skins/");
		Add(";");
		Add("Import from ");
		Add("Create vertex format");
		Add("viewresizehor");
		Add("viewresizeboth");
		Add("viewresizever");
		Add("viewresizesplithor");
		Add("viewresizesplitver");
		Add("right_top");
		Add("left_bottom");
		Add("left_top");
		Add("viewmove");
		Add("viewclose");
		Add("viewpopout");
		Add("viewpopin");
		Add("viewsecond");
		Add("viewseconddisable");
		Add("viewsecondenable");
		Add("viewqualitysettings");
		Add("viewmoderender");
		Add("viewmodeshaded");
		Add("viewmodeflat");
		Add("viewparticles");
		Add("viewparticlesdisable");
		Add("viewparticlesenable");
		Add("vieweffects");
		Add("vieweffectsdisable");
		Add("vieweffectsenable");
		Add("viewgridsettings");
		Add("viewgrid");
		Add("viewgriddisable");
		Add("viewgridenable");
		Add("viewaspectratio");
		Add("viewaspectratiodisable");
		Add("viewaspectratioenable");
		Add("viewoverlays");
		Add("viewoverlaysdisable");
		Add("viewoverlaysenable");
		Add("viewsnapsettings");
		Add("viewsnap");
		Add("viewsnapdisable");
		Add("viewsnapenable");
		Add("viewworkcamera");
		Add("viewactivecamera");
		Add("cam");
		Add("viewworkbenchtip");
		Add("viewclickcaption");
		Add("hor");
		Add("ver");
		Add("viewresizesplit");
		Add("viewrenderfps");
		Add("viewrenderpass");
		Add("viewpathpointclick");
		Add("viewtoolselect");
		Add("viewtoolselecttip");
		Add("viewtoolmove");
		Add("viewtoolmovetip");
		Add("viewtoolrotate");
		Add("viewtoolrotatetip");
		Add("viewtoolscale");
		Add("viewtoolscaletip");
		Add("viewtoolbend");
		Add("viewtoolbendtip");
		Add("viewtooltransform");
		Add("viewtooltransformtip");
		Add("viewclick");
		Add("viewmovecamera");
		Add("viewrotatecamera");
		Add("viewpancamera");
		Add("exporttimelefthour");
		Add("exporttimelefthours");
		Add("exporttimeleftminute");
		Add("exporttimeleftminutes");
		Add("exporttimeleftand");
		Add("exporttimeleftsecond");
		Add("exporttimeleftseconds");
		Add("exporttimeleft");
		Add("exportloading");
		Add("exportsamples");
		Add("exportframe");
		Add("exportmovietitle");
		Add("exportimagetitle");
		Add("exportstop");
		Add("exit");
		Add("Mine-imator ");
		Add("startuploadingassets");
		Add("startupsplashauthor");
		Add("DEV MODE ENABLED");
		Add("newassetstitle");
		Add("newassetssubtitle");
		Add("newassetsdownloading");
		Add("newassetsdownload");
		Add("questionassetsnewer");
		Add("newassetslater");
		Add("newassetschangelog");
		Add("- ");
		Add("* ");
		Add("• ");
		Add("startupversion");
		Add("recentnone");
		Add("startupnewproject");
		Add("startupbrowse");
		Add("startuprecentdisplay");
		Add("tooltipviewlist");
		Add("tooltipviewgrid");
		Add("startuprecentprojects");
		Add("worldsettings");
		Add("worldimportnoworld");
		Add("overworld");
		Add("Apply settings");
		Add("Go to player");
		Add("Set selection to ");
		Add("confirm");
		Add("cancel");
		Add("Some World 1");
		Add("Some World 2");
		Add("Some World 3");
		Add("Some World 4");
		Add("worldimportoverworld");
		Add("nether");
		Add("worldimportnether");
		Add("end");
		Add("worldimportend");
		Add("worldimportconfirm");
		Add("worldimportcancel");
		Add("worldimportbrowse");
		Add("worldimportbrowsetip");
		Add("worldimportbrowseworlds");
		Add(" (level.dat)|level.dat;");
		Add("worldimportbrowsecaption");
		Add("worldimportsettings");
		Add("worldimportsettingstip");
		Add("worldimportreload");
		Add("worldimportreloadtip");
		Add("worldimportgotoplayer");
		Add("worldimportgotoplayertip");
		Add("worldimportselectionsmall");
		Add("small");
		Add("worldimportselectionmedium");
		Add("worldimportselectionlarge");
		Add("large");
		Add("worldimportblocks");
		Add("worldimportfilteractive");
		Add("worldsettingsunloadregions");
		Add("worldsettingsunloadregionstip");
		Add("worldsettingsfilterenabled");
		Add("worldsettingsfilterremove");
		Add("worldsettingsfilterkeep");
		Add("worldsettingsfiltermode");
		Add("worldsettingsfilterblocks");
		Add("worldsettingsfilterfiltered");
		Add("worldsettingsfilterright");
		Add("worldsettingsfilterleft");
		Add("worldsettingsfilterhelp");
		Add("yes");
		Add("no");
	}
}
