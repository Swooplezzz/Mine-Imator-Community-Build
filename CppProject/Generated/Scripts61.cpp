/*
	NOTE:
	This file was autogenerated by CppGen, changes may be overwritten and forever lost!
	Modify at your own risk!
	
	[ Generated on 2023.12.26 22:36:38 ]
*/

#include "Scripts.hpp"

namespace CppProject
{
	RealType tab_properties_library(ScopeAny self)
	{
		tab_control(self, IntType(160));
		preview_draw(self, ObjType(obj_category, idInt(sVar(tab), library))->preview, sVar(dx), sVar(dy), sVar(dw), IntType(160));
		tab_next(self);
		tab_control_sortlist(self, IntType(6));
		sortlist_draw(self, ObjType(obj_category, idInt(sVar(tab), library))->list, sVar(dx), sVar(dy), sVar(dw), sReal(tab_control_h), global::temp_edit);
		tab_next(self);
		tab_control(self, IntType(24));
		if (draw_button_icon(self, { /*"librarynew"*/ STR(3352), sVar(dx), sVar(dy), IntType(24), IntType(24), false, icons_ASSET_ADD, null_, false, /*"tooltiptemplatenew"*/ STR(3353) }))
			sBool(bench_open) = true;
		if (draw_button_icon(self, { /*"libraryanimate"*/ STR(3354), sVar(dx) + IntType(28), sVar(dy), IntType(24), IntType(24), false, icons_ASSET_INSTANCE, null_, global::temp_edit == null_, /*"tooltiptemplateanimate"*/ STR(3355) }))
			action_lib_animate(self);
		if (draw_button_icon(self, { /*"libraryduplicate"*/ STR(3356), sVar(dx) + (IntType(28) * IntType(2)), sVar(dy), IntType(24), IntType(24), false, icons_DUPLICATE, null_, global::temp_edit == null_, /*"tooltiptemplateduplicate"*/ STR(3357) }))
			action_lib_duplicate(self);
		if (draw_button_icon(self, { /*"libraryremove"*/ STR(3358), sVar(dx) + (IntType(28) * IntType(3)), sVar(dy), IntType(24), IntType(24), false, icons_DELETE, null_, global::temp_edit == null_, /*"tooltiptemplateremove"*/ STR(3359) }))
			action_lib_remove(self);
		tab_next(self);
		if (global::temp_edit == null_)
			return IntType(0);
		tab_control_textfield(self, false);
		ObjType(obj_textbox, ObjType(obj_category, idInt(sVar(tab), library))->tbx_name)->text = idVar(global::temp_edit, name);
		draw_textfield(self, /*"libraryname"*/ STR(3360), sVar(dx), sVar(dy), sVar(dw), IntType(24), ObjType(obj_category, idInt(sVar(tab), library))->tbx_name, ID_action_lib_name, idVar(global::temp_edit, display_name), /*"left"*/ STR(203));
		tab_next(self);
		switch ((IntType)idVar(global::temp_edit, type))
		{
			case e_temp_type_CHARACTER:
			case e_temp_type_SPECIAL_BLOCK:
			{
				StringType text;
				IntType wid;
				text = ((idVar(global::temp_edit, type) == e_temp_type_CHARACTER) ? /*"librarycharmodel"*/ STR(3361) : /*"libraryspblockmodel"*/ STR(3362));
				wid = text_max_width({ /*"librarycharmodelchange"*/ STR(3363) }) + IntType(20);
				tab_control(self, IntType(24));
				draw_label_value(self, sVar(dx), sVar(dy), sVar(dw) - IntType(32), IntType(24), text_get({ text }), idVar(global::temp_edit, model_file) != null_ ? string(minecraft_asset_get_name(/*"model"*/ STR(8), idVar(idVar(global::temp_edit, model_file), name))) : /*""*/ STR(0));
				if (draw_button_icon(self, { /*"librarycharmodelchange"*/ STR(3363), sVar(dx) + sVar(dw) - IntType(24), sVar(dy), IntType(24), IntType(24), ObjType(obj_tab, sInt(template_editor))->show, icons_PENCIL, null_, false, /*"tooltipchangemodel"*/ STR(3364) }))
					tab_toggle(self, sInt(template_editor));
				tab_next(self);
				if (idVar(global::temp_edit, pattern_type) != /*""*/ STR(0))
				{
					tab_control_button_label(self);
					if (draw_button_label(self, /*"benchpatterneditor"*/ STR(780), sVar(dx), sVar(dy), sVar(dw), null_, e_button_SECONDARY))
						popup_pattern_editor_show(self, global::temp_edit);
					tab_next(self);
					if (sInt(popup) == sInt(popup_pattern_editor))
						ObjType(value_animation, ObjType(micro_animation, global::current_microani)->active)->value = true;
				}
				if (idVar(global::temp_edit, model_name) == /*"armor"*/ STR(781))
				{
					tab_control_button_label(self);
					if (draw_button_label(self, /*"bencharmoreditor"*/ STR(782), sVar(dx), sVar(dy), sVar(dw), null_, e_button_SECONDARY))
						popup_armor_editor_show(self, global::temp_edit);
					tab_next(self);
					if (sInt(popup) == sInt(popup_armor_editor))
						ObjType(value_animation, ObjType(micro_animation, global::current_microani)->active)->value = true;
				}
				VarType tex = null_;
				withOne (Object, idVar(global::temp_edit, model_tex), self->id)
					tex = res_get_model_texture(self, model_part_get_texture_name(idVar(global::temp_edit, model_file), idInt(global::temp_edit, model_texture_name_map)));
				
				tab_control_menu(self, { sReal(ui_large_height) });
				draw_button_menu(self, { ((idVar(global::temp_edit, type) == e_temp_type_SPECIAL_BLOCK) ? /*"libraryspblocktex"*/ STR(1339) : /*"libraryskin"*/ STR(1336)), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex), idVar(idVar(global::temp_edit, model_tex), display_name), ID_action_lib_model_tex, false, tex, null_ });
				tab_next(self);
				if (sVar(project_render_material_maps) > 0)
				{
					tex = null_;
					withOne (Object, idVar(global::temp_edit, model_tex_material), self->id)
						tex = res_get_model_texture_material(self, model_part_get_texture_material_name(idVar(global::temp_edit, model_file), idInt(global::temp_edit, model_texture_name_map)));
					
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { ((idVar(global::temp_edit, type) == e_temp_type_SPECIAL_BLOCK) ? /*"libraryspblocktexmaterial"*/ STR(1340) : /*"libraryskinmaterial"*/ STR(1337)), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex_material), idVar(idVar(global::temp_edit, model_tex_material), display_name), ID_action_lib_model_tex_material, false, tex, null_ });
					tab_next(self);
					tex = null_;
					withOne (Object, idVar(global::temp_edit, model_tex_normal), self->id)
						tex = res_get_model_tex_normal(self, model_part_get_tex_normal_name(idVar(global::temp_edit, model_file), idInt(global::temp_edit, model_texture_name_map)));
					
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { ((idVar(global::temp_edit, type) == e_temp_type_SPECIAL_BLOCK) ? /*"libraryspblocktexnormal"*/ STR(1341) : /*"libraryskinnormal"*/ STR(1338)), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex_normal), idVar(idVar(global::temp_edit, model_tex_normal), display_name), ID_action_lib_model_tex_normal, false, tex, null_ });
					tab_next(self);
				}
				if (idVar(global::temp_edit, model_use_blend_color) > 0)
				{
					tab_control_color(self);
					draw_button_color(self, /*"librarymodelcolor"*/ STR(3365), sVar(dx), sVar(dy), sVar(dw), idVar(global::temp_edit, model_blend_color), idVar(global::temp_edit, model_blend_color_default), false, ID_action_lib_model_blend_color);
					tab_next(self);
				}
				break;
			}
			
			case e_temp_type_SCENERY:
			{
				VarType text;
				if (idVar(global::temp_edit, scenery) != null_)
					text = idVar(idVar(global::temp_edit, scenery), display_name);
				else
					text = text_get({ /*"listnone"*/ STR(787) });
				
				tab_control_menu(self, { sReal(ui_large_height) });
				draw_button_menu(self, { /*"libraryscenery"*/ STR(1350), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, scenery), text, ID_action_lib_scenery, false, null_ });
				tab_next(self);
				tab_control_menu(self, { sReal(ui_large_height) });
				draw_button_menu(self, { /*"libraryblocktex"*/ STR(1352), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, block_tex), idVar(idVar(global::temp_edit, block_tex), display_name), ID_action_lib_block_tex, false, idInt(idVar(global::temp_edit, block_tex), block_preview_texture), null_ });
				tab_next(self);
				if (sVar(project_render_material_maps) > 0)
				{
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"libraryblocktexmaterial"*/ STR(1353), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, block_tex_material), idVar(idVar(global::temp_edit, block_tex_material), display_name), ID_action_lib_block_tex_material, false, idInt(idVar(global::temp_edit, block_tex_material), block_preview_texture), null_ });
					tab_next(self);
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"libraryblocktexnormal"*/ STR(1354), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, block_tex_normal), idVar(idVar(global::temp_edit, block_tex_normal), display_name), ID_action_lib_block_tex_normal, false, idInt(idVar(global::temp_edit, block_tex_normal), block_preview_texture), null_ });
					tab_next(self);
				}
				break;
			}
			
			case e_temp_type_ITEM:
			{
				IntType wid;
				VarType res;
				res = idVar(global::temp_edit, item_tex);
				if (!res_is_ready(res))
					res = global::mc_res;
				tab_control(self, IntType(24));
				draw_set_font(sInt(font_label));
				wid = string_width(text_get({ /*"typeitem"*/ STR(182) }) + /*":"*/ STR(788));
				draw_label(self, { text_get({ /*"typeitem"*/ STR(182) }) + /*":"*/ STR(788), sVar(dx), sVar(dy) + IntType(14), fa_left, fa_middle, global::c_text_secondary, global::a_text_secondary });
				draw_box(sVar(dx) + wid + IntType(16), sVar(dy) + IntType(4), IntType(20), IntType(20), false, global::c_level_bottom, IntType(1));
				if (idInt(res, item_sheet_texture) != null_)
				{
					draw_texture_slot(idInt(res, item_sheet_texture), idVar(global::temp_edit, item_slot), sVar(dx) + wid + IntType(18), sVar(dy) + IntType(6), IntType(16), IntType(16), idVar(res, item_sheet_size).Value(X_), idVar(res, item_sheet_size).Value(Y_));
					if (draw_button_icon(self, { /*"libraryitemchange"*/ STR(3366), sVar(dx) + sVar(dw) - IntType(24), sVar(dy), IntType(24), IntType(24), ObjType(obj_tab, sInt(template_editor))->show, icons_PENCIL, null_, false, /*"tooltipchangeitem"*/ STR(3367) }))
						tab_toggle(self, sInt(template_editor));
				}
				else
				{
					RealType scale = min({ 16.0 / texture_width(idVar(res, texture)), 16.0 / texture_height(idVar(res, texture)) });
					draw_texture({ idVar(res, texture), sVar(dx) + wid + IntType(18), sVar(dy) + IntType(6), scale, scale });
				}
				
				tab_next(self);
				VarType tex = idInt(res, block_preview_texture);
				if (tex == null_)
					tex = idVar(res, texture);
				tab_control_menu(self, { sReal(ui_large_height) });
				draw_button_menu(self, { /*"libraryitemtex"*/ STR(1355), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, item_tex), idVar(idVar(global::temp_edit, item_tex), display_name), ID_action_lib_item_tex, false, tex });
				tab_next(self);
				if (sVar(project_render_material_maps) > 0)
				{
					res = idVar(global::temp_edit, item_tex_material);
					if (!res_is_ready(res))
						res = global::mc_res;
					tex = idInt(res, block_preview_texture);
					if (tex == null_)
						tex = idVar(res, texture);
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"libraryitemtexmaterial"*/ STR(1356), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, item_tex_material), idVar(idVar(global::temp_edit, item_tex_material), display_name), ID_action_lib_item_tex_material, false, tex });
					tab_next(self);
					res = idVar(global::temp_edit, item_tex_normal);
					if (!res_is_ready(res))
						res = global::mc_res;
					tex = idInt(res, block_preview_texture);
					if (tex == null_)
						tex = idVar(res, texture);
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"libraryitemtexnormal"*/ STR(1357), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, item_tex_normal), idVar(idVar(global::temp_edit, item_tex_normal), display_name), ID_action_lib_item_tex_normal, false, tex });
					tab_next(self);
				}
				VarType sx;
				sx = sVar(dx_start);
				sVar(dx_start) = sVar(dx);
				tab_set_collumns(self, { true, IntType(2) });
				tab_control_checkbox(self);
				draw_checkbox(self, /*"libraryitem3d"*/ STR(3368), sVar(dx), sVar(dy), idVar(global::temp_edit, item_3d), ID_action_lib_item_3d);
				tab_next(self);
				tab_control_checkbox(self);
				draw_checkbox(self, /*"libraryitemfacecamera"*/ STR(3369), sVar(dx), sVar(dy), idVar(global::temp_edit, item_face_camera), ID_action_lib_item_face_camera);
				tab_next(self);
				tab_control_checkbox(self);
				draw_checkbox(self, /*"libraryitembounce"*/ STR(3370), sVar(dx), sVar(dy), idVar(global::temp_edit, item_bounce), ID_action_lib_item_bounce);
				tab_next(self);
				tab_control_checkbox(self);
				draw_checkbox(self, /*"libraryitemspin"*/ STR(3371), sVar(dx), sVar(dy), idVar(global::temp_edit, item_spin), ID_action_lib_item_spin);
				tab_next(self);
				tab_set_collumns(self, { false });
				sVar(dx_start) = sx;
				break;
			}
			
			case e_temp_type_BLOCK:
			{
				tab_control(self, IntType(24));
				draw_label_value(self, sVar(dx), sVar(dy), sVar(dw) - IntType(32), IntType(24), text_get({ /*"typeblock"*/ STR(184) }), minecraft_asset_get_name(/*"block"*/ STR(4), ObjType(obj_block, DsMap(ObjType(obj_minecraft_assets, global::mc_assets)->block_name_map).Value(idVar(global::temp_edit, block_name)))->name));
				if (draw_button_icon(self, { /*"libraryblockchange"*/ STR(3372), sVar(dx) + sVar(dw) - IntType(24), sVar(dy), IntType(24), IntType(24), ObjType(obj_tab, sInt(template_editor))->show, icons_PENCIL, null_, false, /*"tooltipchangeblock"*/ STR(3373) }))
					tab_toggle(self, sInt(template_editor));
				tab_next(self);
				tab_control_menu(self, { sReal(ui_large_height) });
				draw_button_menu(self, { /*"libraryblocktex"*/ STR(1352), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, block_tex), idVar(idVar(global::temp_edit, block_tex), display_name), ID_action_lib_block_tex, false, idInt(idVar(global::temp_edit, block_tex), block_preview_texture) });
				tab_next(self);
				if (sVar(project_render_material_maps) > 0)
				{
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"libraryblocktexmaterial"*/ STR(1353), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, block_tex_material), idVar(idVar(global::temp_edit, block_tex_material), display_name), ID_action_lib_block_tex_material, false, idInt(idVar(global::temp_edit, block_tex_material), block_preview_texture), null_ });
					tab_next(self);
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"libraryblocktexnormal"*/ STR(1354), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, block_tex_normal), idVar(idVar(global::temp_edit, block_tex_normal), display_name), ID_action_lib_block_tex_normal, false, idInt(idVar(global::temp_edit, block_tex_normal), block_preview_texture), null_ });
					tab_next(self);
				}
				break;
			}
			
			case e_temp_type_BODYPART:
			{
				VarType text;
				if (idVar(global::temp_edit, model_file) != null_)
					text = text_get({ /*"librarybodypartof"*/ STR(3374), minecraft_asset_get_name(/*"modelpart"*/ STR(778), idVar(global::temp_edit, model_part_name)), minecraft_asset_get_name(/*"model"*/ STR(8), idVar(global::temp_edit, model_name)) });
				else
					text = text_get({ /*"librarybodypartunknown"*/ STR(3375) });
				
				tab_control(self, IntType(24));
				draw_label_value(self, sVar(dx), sVar(dy), sVar(dw), IntType(24), text_get({ /*"typebodypart"*/ STR(180) }), text);
				if (draw_button_icon(self, { /*"librarybodypartchange"*/ STR(3376), sVar(dx) + sVar(dw) - IntType(24), sVar(dy), IntType(24), IntType(24), ObjType(obj_tab, sInt(template_editor))->show, icons_PENCIL }))
					tab_toggle(self, sInt(template_editor));
				tab_next(self);
				if (idVar(global::temp_edit, pattern_type) != /*""*/ STR(0))
				{
					tab_control_button_label(self);
					if (draw_button_label(self, /*"librarypatterneditor"*/ STR(3377), sVar(dx), sVar(dy), sVar(dw), null_, e_button_SECONDARY))
						popup_pattern_editor_show(self, global::temp_edit);
					tab_next(self);
					if (sInt(popup) == sInt(popup_armor_editor))
						ObjType(value_animation, ObjType(micro_animation, global::current_microani)->active)->value = true;
				}
				if (idVar(global::temp_edit, model_name) == /*"armor"*/ STR(781))
				{
					tab_control_button_label(self);
					if (draw_button_label(self, /*"libraryarmoreditor"*/ STR(3378), sVar(dx), sVar(dy), sVar(dw), null_, e_button_SECONDARY))
						popup_armor_editor_show(self, global::temp_edit);
					tab_next(self);
					if (sInt(popup) == sInt(popup_armor_editor))
						ObjType(value_animation, ObjType(micro_animation, global::current_microani)->active)->value = true;
				}
				VarType tex = null_;
				withOne (Object, idVar(global::temp_edit, model_tex), self->id)
					tex = res_get_model_texture(self, model_part_get_texture_name(idVar(global::temp_edit, model_file), idInt(global::temp_edit, model_texture_name_map)));
				
				tab_control_menu(self, { sReal(ui_large_height) });
				draw_button_menu(self, { /*"librarybodypartskin"*/ STR(1342), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex), idVar(idVar(global::temp_edit, model_tex), display_name), ID_action_lib_model_tex, false, tex });
				tab_next(self);
				if (sVar(project_render_material_maps) > 0)
				{
					tex = null_;
					withOne (Object, idVar(global::temp_edit, model_tex_material), self->id)
						tex = res_get_model_texture_material(self, model_part_get_texture_material_name(idVar(global::temp_edit, model_file), idInt(global::temp_edit, model_texture_name_map)));
					
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"librarybodypartskinmaterial"*/ STR(1343), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex_material), idVar(idVar(global::temp_edit, model_tex_material), display_name), ID_action_lib_model_tex_material, false, tex, null_ });
					tab_next(self);
					tex = null_;
					withOne (Object, idVar(global::temp_edit, model_tex_normal), self->id)
						tex = res_get_model_tex_normal(self, model_part_get_tex_normal_name(idVar(global::temp_edit, model_file), idInt(global::temp_edit, model_texture_name_map)));
					
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"librarybodypartskinnormal"*/ STR(1344), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex_normal), idVar(idVar(global::temp_edit, model_tex_normal), display_name), ID_action_lib_model_tex_normal, false, tex, null_ });
					tab_next(self);
				}
				if (idVar(global::temp_edit, model_use_blend_color) > 0)
				{
					tab_control_color(self);
					draw_button_color(self, /*"librarymodelcolor"*/ STR(3365), sVar(dx), sVar(dy), sVar(dw), idVar(global::temp_edit, model_blend_color), idVar(global::temp_edit, model_blend_color_default), false, ID_action_lib_model_blend_color);
					tab_next(self);
				}
				break;
			}
			
			case e_temp_type_PARTICLE_SPAWNER:
			{
				if (sReal(setting_advanced_mode) > 0)
				{
					tab_control_button_label(self);
					if (draw_button_label(self, /*"libraryparticleeditoropen"*/ STR(3379), sVar(dx), sVar(dy), sVar(dw), null_, e_button_SECONDARY))
					{
						tab_template_editor_update_ptype_list(self);
						tab_toggle(self, sInt(template_editor));
					}
					if (ObjType(obj_tab, sInt(template_editor))->show > 0)
						ObjType(value_animation, ObjType(micro_animation, global::current_microani)->active)->value = true;
					tab_next(self);
				}
				break;
			}
			
			case e_temp_type_TEXT:
			{
				if (sReal(setting_advanced_mode) > 0)
				{
					tab_control_menu(self);
					draw_button_menu(self, { /*"librarytextfont"*/ STR(1359), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), idVar(global::temp_edit, text_font), idVar(idVar(global::temp_edit, text_font), display_name), ID_action_lib_text_font });
					tab_next(self);
				}
				tab_control_checkbox(self);
				draw_checkbox(self, /*"librarytext3d"*/ STR(3380), sVar(dx), sVar(dy), idVar(global::temp_edit, text_3d), ID_action_lib_text_3d);
				tab_next(self);
				tab_control_checkbox(self);
				draw_checkbox(self, /*"librarytextfacecamera"*/ STR(3381), sVar(dx), sVar(dy), idVar(global::temp_edit, text_face_camera), ID_action_lib_text_face_camera);
				tab_next(self);
				break;
			}
			
			case e_temp_type_CUBE:
			case e_temp_type_CONE:
			case e_temp_type_CYLINDER:
			case e_temp_type_SPHERE:
			case e_temp_type_SURFACE:
			{
				VarType text, sprite;
				sprite = null_;
				if (idVar(global::temp_edit, shape_tex) != null_)
				{
					text = idVar(idVar(global::temp_edit, shape_tex), display_name);
					if (idVar(idVar(global::temp_edit, shape_tex), type) != e_tl_type_CAMERA)
						sprite = idVar(idVar(global::temp_edit, shape_tex), texture);
				}
				else
					text = text_get({ /*"listnone"*/ STR(787) });
				
				tab_control_menu(self, { sReal(ui_large_height) });
				draw_button_menu(self, { /*"libraryshapetex"*/ STR(1360), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, shape_tex), text, ID_action_lib_shape_tex, false, sprite });
				tab_next(self);
				if (sVar(project_render_material_maps) > 0)
				{
					if (idVar(global::temp_edit, shape_tex_material) != null_)
					{
						text = idVar(idVar(global::temp_edit, shape_tex_material), display_name);
						sprite = idVar(idVar(global::temp_edit, shape_tex_material), texture);
					}
					else
					{
						text = text_get({ /*"listnone"*/ STR(787) });
						sprite = null_;
					}
					
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"libraryshapetexmaterial"*/ STR(1361), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, shape_tex_material), text, ID_action_lib_shape_tex_material, false, sprite });
					tab_next(self);
					if (idVar(global::temp_edit, shape_tex_normal) != null_)
					{
						text = idVar(idVar(global::temp_edit, shape_tex_normal), display_name);
						sprite = idVar(idVar(global::temp_edit, shape_tex_normal), texture);
					}
					else
					{
						text = text_get({ /*"listnone"*/ STR(787) });
						sprite = null_;
					}
					
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"libraryshapetexnormal"*/ STR(1362), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, shape_tex_normal), text, ID_action_lib_shape_tex_normal, false, sprite });
					tab_next(self);
				}
				if (idVar(global::temp_edit, type) == e_temp_type_CUBE || idVar(global::temp_edit, type) == e_temp_type_CONE || idVar(global::temp_edit, type) == e_temp_type_CYLINDER)
				{
					if (sReal(setting_advanced_mode) > 0)
					{
						tab_control_checkbox(self);
						draw_checkbox(self, /*"libraryshapetexmapped"*/ STR(3382), sVar(dx), sVar(dy), idVar(global::temp_edit, shape_tex_mapped), ID_action_lib_shape_tex_mapped, /*"libraryshapetexmappedtip"*/ STR(3383));
						tab_next(self);
						if (idVar(global::temp_edit, shape_tex_mapped) > 0)
						{
							tab_control_button_label(self);
							if (draw_button_label(self, /*"libraryshapetexsavemap"*/ STR(3384), sVar(dx), sVar(dy), sVar(dw), icons_TEXTURE_EXPORT, e_button_SECONDARY))
								action_lib_shape_save_map();
							tab_next(self);
						}
					}
				}
				if (idVar(global::temp_edit, shape_tex) > 0 || idVar(global::temp_edit, shape_tex_material) > 0 || idVar(global::temp_edit, shape_tex_normal) > 0)
				{
					if (!(idVar(global::temp_edit, shape_tex_mapped) > 0))
					{
						textfield_group_add(self, { /*"libraryshapetexhoffset"*/ STR(3385), idVar(global::temp_edit, shape_tex_hoffset), IntType(0), ID_action_lib_shape_tex_hoffset, global::axis_edit, ObjType(obj_category, idInt(sVar(tab), library))->tbx_shape_tex_hoffset });
						textfield_group_add(self, { /*"libraryshapetexvoffset"*/ STR(3386), idVar(global::temp_edit, shape_tex_voffset), IntType(0), ID_action_lib_shape_tex_voffset, global::axis_edit, ObjType(obj_category, idInt(sVar(tab), library))->tbx_shape_tex_voffset });
						tab_control_textfield_group(self);
						draw_textfield_group(self, /*"libraryshapetexoffset"*/ STR(3387), sVar(dx), sVar(dy), sVar(dw), 1.0 / 100.0, -no_limit, no_limit, IntType(0), true, false, IntType(3));
						tab_next(self);
						textfield_group_add(self, { /*"libraryshapetexhrepeat"*/ STR(3388), idVar(global::temp_edit, shape_tex_hrepeat), IntType(1), ID_action_lib_shape_tex_hrepeat, global::axis_edit, ObjType(obj_category, idInt(sVar(tab), library))->tbx_shape_tex_hrepeat });
						textfield_group_add(self, { /*"libraryshapetexvrepeat"*/ STR(3389), idVar(global::temp_edit, shape_tex_vrepeat), IntType(1), ID_action_lib_shape_tex_vrepeat, global::axis_edit, ObjType(obj_category, idInt(sVar(tab), library))->tbx_shape_tex_vrepeat });
						tab_control_textfield_group(self);
						draw_textfield_group(self, /*"libraryshapetexrepeat"*/ STR(3390), sVar(dx), sVar(dy), sVar(dw), 1.0 / 100.0, IntType(0), no_limit, IntType(0), true, false, IntType(3));
						tab_next(self);
					}
					tab_control_checkbox(self);
					draw_checkbox(self, /*"libraryshapetexhmirror"*/ STR(3391), sVar(dx), sVar(dy), idVar(global::temp_edit, shape_tex_hmirror), ID_action_lib_shape_tex_hmirror);
					tab_next(self);
					tab_control_checkbox(self);
					draw_checkbox(self, /*"libraryshapetexvmirror"*/ STR(3392), sVar(dx), sVar(dy), idVar(global::temp_edit, shape_tex_vmirror), ID_action_lib_shape_tex_vmirror);
					tab_next(self);
				}
				if (idVar(global::temp_edit, type) == e_temp_type_CONE || idVar(global::temp_edit, type) == e_temp_type_CYLINDER)
				{
					tab_control_checkbox(self);
					draw_checkbox(self, /*"libraryshapeclosed"*/ STR(3393), sVar(dx), sVar(dy), idVar(global::temp_edit, shape_closed), ID_action_lib_shape_closed);
					tab_next(self);
				}
				tab_control_checkbox(self);
				draw_checkbox(self, /*"libraryshapeinvert"*/ STR(3394), sVar(dx), sVar(dy), idVar(global::temp_edit, shape_invert), ID_action_lib_shape_invert);
				tab_next(self);
				if (idVar(global::temp_edit, type) == e_temp_type_SPHERE || idVar(global::temp_edit, type) == e_temp_type_CONE || idVar(global::temp_edit, type) == e_temp_type_CYLINDER)
				{
					tab_control_dragger(self);
					draw_dragger(self, /*"libraryshapedetail"*/ STR(3395), sVar(dx), sVar(dy), dragger_width, idVar(global::temp_edit, shape_detail), 1.0 / 4.0, IntType(3), no_limit, IntType(32), IntType(1), ObjType(obj_category, idInt(sVar(tab), library))->tbx_shape_detail, ID_action_lib_shape_detail);
					tab_next(self);
				}
				else
					if (idVar(global::temp_edit, type) == e_temp_type_SURFACE)
					{
						tab_control_checkbox(self);
						draw_checkbox(self, /*"libraryshapefacecamera"*/ STR(3396), sVar(dx), sVar(dy), idVar(global::temp_edit, shape_face_camera), ID_action_lib_shape_face_camera);
						tab_next(self);
					}
				
				break;
			}
			
			case e_temp_type_MODEL:
			{
				VarType text;
				if (idVar(global::temp_edit, model) != null_)
					text = idVar(idVar(global::temp_edit, model), display_name);
				else
					text = text_get({ /*"listnone"*/ STR(787) });
				
				tab_control_menu(self);
				draw_button_menu(self, { /*"librarymodel"*/ STR(1363), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), idVar(global::temp_edit, model), text, ID_action_lib_model, false, null_ });
				tab_next(self);
				VarType texobj, tex;
				withOne (Object, global::temp_edit, self->id)
				{
					texobj = temp_get_model_texobj(self, null_);
					tex = temp_get_model_tex_preview(self, texobj, sVar(model_file));
				}
				
				if (texobj != null_)
					text = idVar(texobj, display_name);
				else
					text = text_get({ /*"listnone"*/ STR(787) });
				
				if (idVar(global::temp_edit, model_tex) == null_)
					text = text_get({ /*"listdefault"*/ STR(812), text });
				tab_control_menu(self, { sReal(ui_large_height) });
				draw_button_menu(self, { /*"librarymodeltex"*/ STR(1347), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex), text, ID_action_lib_model_tex, false, tex });
				tab_next(self);
				if (sVar(project_render_material_maps) > 0)
				{
					withOne (Object, global::temp_edit, self->id)
					{
						texobj = temp_get_model_tex_material_obj(self, null_);
						tex = temp_get_model_tex_material_preview(self, texobj, sVar(model_file));
					}
					
					if (texobj != null_)
						text = idVar(texobj, display_name);
					else
						text = text_get({ /*"listnone"*/ STR(787) });
					
					if (idVar(global::temp_edit, model_tex_material) == null_)
						text = text_get({ /*"listdefault"*/ STR(812), text });
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"librarymodeltexmaterial"*/ STR(1348), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex_material), text, ID_action_lib_model_tex_material, false, tex });
					tab_next(self);
					withOne (Object, global::temp_edit, self->id)
					{
						texobj = temp_get_model_tex_normal_obj(self, null_);
						tex = temp_get_model_tex_normal_preview(self, texobj, sVar(model_file));
					}
					
					if (texobj != null_)
						text = idVar(texobj, display_name);
					else
						text = text_get({ /*"listnone"*/ STR(787) });
					
					if (idVar(global::temp_edit, model_tex_normal) == null_)
						text = text_get({ /*"listdefault"*/ STR(812), text });
					tab_control_menu(self, { sReal(ui_large_height) });
					draw_button_menu(self, { /*"librarymodeltexnormal"*/ STR(1349), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), sReal(ui_large_height), idVar(global::temp_edit, model_tex_normal), text, ID_action_lib_model_tex_normal, false, tex });
					tab_next(self);
				}
				break;
			}
			
		}
		
		if (idVar(global::temp_edit, type) == e_temp_type_BLOCK)
		{
			tab_control_checkbox(self);
			draw_checkbox(self, /*"libraryrandomizeblocks"*/ STR(3397), sVar(dx), sVar(dy), idVar(global::temp_edit, block_randomize), ID_action_lib_block_randomize, /*"libraryrandomizeblockshelp"*/ STR(3398));
			tab_next(self);
		}
		if (idVar(global::temp_edit, type) == e_temp_type_SCENERY || idVar(global::temp_edit, type) == e_temp_type_BLOCK)
		{
			tab_control_checkbox(self);
			draw_checkbox(self, /*"libraryrepeat"*/ STR(3399), sVar(dx), sVar(dy), idVar(global::temp_edit, block_repeat_enable), ID_action_lib_block_repeat_enable);
			tab_next(self);
			if (idVar(global::temp_edit, block_repeat_enable) > 0)
			{
				global::axis_edit = X_;
				textfield_group_add(self, { /*"libraryrepeatx"*/ STR(3400), idVar(global::temp_edit, block_repeat).Value(global::axis_edit), IntType(1), ID_action_lib_block_repeat, X_, ObjType(obj_category, idInt(sVar(tab), library))->tbx_repeat_x });
				global::axis_edit = ((sReal(setting_z_is_up) > 0) ? Y_ : Z_);
				textfield_group_add(self, { /*"libraryrepeaty"*/ STR(3401), idVar(global::temp_edit, block_repeat).Value(global::axis_edit), IntType(1), ID_action_lib_block_repeat, global::axis_edit, ObjType(obj_category, idInt(sVar(tab), library))->tbx_repeat_y });
				global::axis_edit = ((sReal(setting_z_is_up) > 0) ? Z_ : Y_);
				textfield_group_add(self, { /*"libraryrepeatz"*/ STR(3402), idVar(global::temp_edit, block_repeat).Value(global::axis_edit), IntType(1), ID_action_lib_block_repeat, global::axis_edit, ObjType(obj_category, idInt(sVar(tab), library))->tbx_repeat_z });
				tab_control_textfield_group(self, false);
				draw_textfield_group(self, /*"libraryrepeat"*/ STR(3399), sVar(dx), sVar(dy), sVar(dw), 1.0 / 10.0, IntType(1), IntType(1000), IntType(1), false, true, IntType(1));
				tab_next(self);
			}
		}
		return 0.0;
	}
	
	void tab_properties_project(ScopeAny self)
	{
		ObjType(obj_textbox, ObjType(obj_category, idInt(sVar(tab), project))->tbx_name)->text = sVar(project_name);
		tab_control_textfield(self);
		if (draw_textfield(self, /*"projectname"*/ STR(3403), sVar(dx), sVar(dy), sVar(dw), IntType(24), ObjType(obj_category, idInt(sVar(tab), project))->tbx_name, null_, /*""*/ STR(0), /*"top"*/ STR(202)))
		{
			sInt(project_changed) = true;
			sVar(project_name) = ObjType(obj_textbox, ObjType(obj_category, idInt(sVar(tab), project))->tbx_name)->text;
		}
		tab_next(self);
		ObjType(obj_textbox, ObjType(obj_category, idInt(sVar(tab), project))->tbx_author)->text = sVar(project_author);
		tab_control_textfield(self);
		if (draw_textfield(self, /*"projectauthor"*/ STR(3404), sVar(dx), sVar(dy), sVar(dw), IntType(24), ObjType(obj_category, idInt(sVar(tab), project))->tbx_author, null_, /*""*/ STR(0), /*"top"*/ STR(202)))
		{
			sInt(project_changed) = true;
			sVar(project_author) = ObjType(obj_textbox, ObjType(obj_category, idInt(sVar(tab), project))->tbx_author)->text;
		}
		tab_next(self);
		ObjType(obj_textbox, ObjType(obj_category, idInt(sVar(tab), project))->tbx_description)->text = sVar(project_description);
		tab_control_textfield(self, true, IntType(76));
		if (draw_textfield(self, /*"projectdescription"*/ STR(3405), sVar(dx), sVar(dy), sVar(dw), IntType(76), ObjType(obj_category, idInt(sVar(tab), project))->tbx_description, null_, /*""*/ STR(0), /*"top"*/ STR(202)))
		{
			sInt(project_changed) = true;
			sVar(project_description) = ObjType(obj_textbox, ObjType(obj_category, idInt(sVar(tab), project))->tbx_description)->text;
		}
		tab_next(self);
		StringType directory = /*"../"*/ STR(2097) + directory_name(sStr(project_folder)) + filename_name(filename_dir(sVar(project_file)));
		tab_control(self, IntType(40));
		draw_label_value(self, sVar(dx), sVar(dy), sVar(dw) - IntType(28), IntType(40), text_get({ /*"newprojectlocation"*/ STR(2098) }), directory, true);
		if (draw_button_icon(self, { /*"newprojectchangefolder"*/ STR(2099), sVar(dx) + sVar(dw) - IntType(24), sVar(dy) + IntType(8), IntType(24), IntType(24), false, icons_FOLDER, null_, false, /*"tooltipopenfolder"*/ STR(3406) }))
			action_toolbar_open_folder(self);
		tab_next(self);
		if (sVar(project_video_template) == IntType(0))
			sVar(text) = text_get({ /*"projectvideosizecustom"*/ STR(1475) });
		else
			sVar(text) = text_get({ /*"projectvideosizetemplate"*/ STR(1474) + ObjType(obj_videotemplate, sVar(project_video_template))->name }) + /*" ("*/ STR(1153) + string(ObjType(obj_videotemplate, sVar(project_video_template))->width) + /*"x"*/ STR(850) + string(ObjType(obj_videotemplate, sVar(project_video_template))->height) + /*")"*/ STR(1129);
		
		tab_control_menu(self);
		draw_button_menu(self, { /*"projectvideosize"*/ STR(1469), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), sVar(project_video_template), sVar(text), ID_action_project_video_template });
		tab_next(self);
		if (sVar(project_video_template) == IntType(0))
		{
			textfield_group_add(self, { /*"projectvideosizecustomwidth"*/ STR(3407), sVar(project_video_width), IntType(1280), ID_action_project_video_width, X_, ObjType(obj_category, idInt(sVar(tab), project))->tbx_video_size_custom_width, null_, IntType(1), IntType(1), surface_get_max_size() });
			textfield_group_add(self, { /*"projectvideosizecustomheight"*/ STR(3408), sVar(project_video_height), IntType(720), ID_action_project_video_height, X_, ObjType(obj_category, idInt(sVar(tab), project))->tbx_video_size_custom_height, null_, IntType(1), IntType(1), surface_get_max_size() });
			tab_control_textfield_group(self, false);
			draw_textfield_group(self, /*"projectvideosizecustom"*/ STR(1475), sVar(dx), sVar(dy), sVar(dw), IntType(1), IntType(1), no_limit, IntType(1), false);
			tab_next(self);
			tab_control_switch(self);
			draw_switch(self, /*"projectvideosizecustomkeepaspectratio"*/ STR(3409), sVar(dx), sVar(dy), sVar(project_video_keep_aspect_ratio), ID_action_project_video_keep_aspect_ratio);
			tab_next(self);
			sVar(dy) += IntType(8);
		}
		tab_control_meter(self);
		draw_meter(self, /*"projecttempo"*/ STR(3410), sVar(dx), sVar(dy), sVar(dw), sVar(project_tempo), IntType(1), IntType(100), IntType(24), IntType(1), ObjType(obj_category, idInt(sVar(tab), project))->tbx_tempo, ID_action_project_tempo, /*"projecttempotip"*/ STR(3411));
		tab_next(self);
	}
	
	RealType tab_properties_render(ScopeAny self)
	{
		if (sVar(project_render_settings) == /*""*/ STR(0))
			sVar(text) = text_get({ /*"projectrendersettingscustom"*/ STR(1489) });
		else
			if (text_exists(/*"projectrendersettings"*/ STR(1488) + sVar(project_render_settings)))
				sVar(text) = text_get({ /*"projectrendersettings"*/ STR(1488) + sVar(project_render_settings) });
			else
				sVar(text) = filename_name(sVar(project_render_settings));
		
		
		tab_control_menu(self);
		draw_button_menu(self, { /*"projectrendersettings"*/ STR(1488), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), sVar(project_render_settings), sVar(text), ID_action_project_render_settings });
		tab_next(self);
		if (sVar(project_render_settings) != /*""*/ STR(0))
			return IntType(0);
		sVar(dy) += IntType(8);
		tab_control_dragger(self);
		draw_dragger(self, /*"renderdistance"*/ STR(3412), sVar(dx), sVar(dy), dragger_width, sVar(project_render_distance), IntType(1), IntType(1000), IntType(100000), IntType(30000), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_render_distance, ID_action_project_render_distance, null_, true, false, /*"renderdistancetip"*/ STR(3413));
		tab_next(self);
		tab_control_dragger(self);
		draw_dragger(self, /*"rendersamples"*/ STR(3414), sVar(dx), sVar(dy), dragger_width, sVar(project_render_samples), .5, IntType(1), IntType(256), IntType(24), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_samples, ID_action_project_render_samples);
		tab_next(self);
		tab_control_switch(self);
		draw_button_collapse(self, /*"ssao"*/ STR(128), DsMap(global::collapse_map).Value(/*"ssao"*/ STR(128)), ID_action_project_render_ssao, sVar(project_render_ssao), /*"renderssao"*/ STR(3415), /*"renderssaotip"*/ STR(3416));
		tab_next(self);
		if (sVar(project_render_ssao) > 0 && DsMap(global::collapse_map).Value(/*"ssao"*/ STR(128)) > 0)
		{
			tab_collapse_start(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderssaoradius"*/ STR(3417), sVar(dx), sVar(dy), dragger_width, sVar(project_render_ssao_radius), (RealType)sVar(project_render_ssao_radius) / 200.0, IntType(0), IntType(256), IntType(12), IntType(0), ObjType(obj_category, idVar(sVar(tab), render))->tbx_ssao_radius, ID_action_project_render_ssao_radius);
			tab_next(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderssaopower"*/ STR(3418), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_ssao_power) * IntType(100)), .5, IntType(0), no_limit * IntType(100), IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_ssao_power, ID_action_project_render_ssao_power);
			tab_next(self);
			tab_control_color(self);
			draw_button_color(self, /*"renderssaocolor"*/ STR(3419), sVar(dx), sVar(dy), sVar(dw), sVar(project_render_ssao_color), c_black, false, ID_action_project_render_ssao_color);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"shadows"*/ STR(129), DsMap(global::collapse_map).Value(/*"shadows"*/ STR(129)), ID_action_project_render_shadows, sVar(project_render_shadows), /*"rendershadows"*/ STR(3420));
		tab_next(self);
		if (sVar(project_render_shadows) > 0 && DsMap(global::collapse_map).Value(/*"shadows"*/ STR(129)) > 0)
		{
			tab_collapse_start(self);
			tab_control_menu(self);
			draw_button_menu(self, { /*"rendershadowssunbuffersize"*/ STR(1446), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), sVar(project_render_shadows_sun_buffer_size), text_get({ /*"rendershadowsbuffersize"*/ STR(3421) + string(sVar(project_render_shadows_sun_buffer_size)) }) + /*" ("*/ STR(1153) + string(sVar(project_render_shadows_sun_buffer_size)) + /*"x"*/ STR(850) + string(sVar(project_render_shadows_sun_buffer_size)) + /*")"*/ STR(1129), ID_action_project_render_shadows_sun_buffer_size });
			tab_next(self);
			tab_control_menu(self);
			draw_button_menu(self, { /*"rendershadowsspotbuffersize"*/ STR(1447), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), sVar(project_render_shadows_spot_buffer_size), text_get({ /*"rendershadowsbuffersize"*/ STR(3421) + string(sVar(project_render_shadows_spot_buffer_size)) }) + /*" ("*/ STR(1153) + string(sVar(project_render_shadows_spot_buffer_size)) + /*"x"*/ STR(850) + string(sVar(project_render_shadows_spot_buffer_size)) + /*")"*/ STR(1129), ID_action_project_render_shadows_spot_buffer_size });
			tab_next(self);
			tab_control_menu(self);
			draw_button_menu(self, { /*"rendershadowspointbuffersize"*/ STR(1448), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), sVar(project_render_shadows_point_buffer_size), text_get({ /*"rendershadowsbuffersize"*/ STR(3421) + string(sVar(project_render_shadows_point_buffer_size)) }) + /*" ("*/ STR(1153) + string(sVar(project_render_shadows_point_buffer_size)) + /*"x"*/ STR(850) + string(sVar(project_render_shadows_point_buffer_size)) + /*")"*/ STR(1129), ID_action_project_render_shadows_point_buffer_size });
			tab_next(self);
			tab_control_switch(self);
			draw_switch(self, /*"rendershadowstransparent"*/ STR(3422), sVar(dx), sVar(dy), sVar(project_render_shadows_transparent), ID_action_project_render_shadows_transparent);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"subsurface"*/ STR(130), DsMap(global::collapse_map).Value(/*"subsurface"*/ STR(130)), null_, true, /*"rendersubsurfacescattering"*/ STR(3423), /*"rendersubsurfacescatteringtip"*/ STR(3424));
		tab_next(self);
		if (DsMap(global::collapse_map).Value(/*"subsurface"*/ STR(130)) > 0)
		{
			tab_collapse_start(self);
			tab_control_meter(self);
			draw_meter(self, /*"rendersubsurfacescatterquality"*/ STR(3425), sVar(dx), sVar(dy), sVar(dw), sVar(project_render_subsurface_samples), IntType(0), IntType(32), IntType(7), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_subsurface_samples, ID_action_project_render_subsurface_samples);
			tab_next(self);
			tab_control_meter(self);
			draw_meter(self, /*"rendersubsurfacescatterhighlight"*/ STR(3426), sVar(dx), sVar(dy), sVar(dw), round(sVar(project_render_subsurface_highlight) * IntType(100)), IntType(0), IntType(100), IntType(50), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_subsurface_highlight, ID_action_project_render_subsurface_highlight, /*"rendersubsurfacescatterhighlighttip"*/ STR(3427));
			tab_next(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"rendersubsurfacescatterhighlightstrength"*/ STR(3428), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_subsurface_highlight_strength) * IntType(100)), 0.1, IntType(0), no_limit, IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_subsurface_highlight_strength, ID_action_project_render_subsurface_highlight_strength);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"indirect"*/ STR(131), DsMap(global::collapse_map).Value(/*"indirect"*/ STR(131)), ID_action_project_render_indirect, sVar(project_render_indirect), /*"renderindirect"*/ STR(3429), /*"renderindirecttip"*/ STR(3430));
		tab_next(self);
		if (sVar(project_render_indirect) > 0 && DsMap(global::collapse_map).Value(/*"indirect"*/ STR(131)) > 0)
		{
			tab_collapse_start(self);
			tab_control_meter(self);
			draw_meter(self, /*"renderindirectprecision"*/ STR(3431), sVar(dx), sVar(dy), sVar(dw), round(sVar(project_render_indirect_precision) * IntType(100)), IntType(0), IntType(100), IntType(30), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_indirect_precision, ID_action_project_render_indirect_precision, /*"renderindirectprecisiontip"*/ STR(3432));
			tab_next(self);
			tab_control_meter(self);
			draw_meter(self, /*"renderindirectblurradius"*/ STR(3433), sVar(dx), sVar(dy), sVar(dw), round(sVar(project_render_indirect_blur_radius) * IntType(100)), IntType(0), IntType(500), IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_indirect_blur_radius, ID_action_project_render_indirect_blur_radius);
			tab_next(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderindirectstrength"*/ STR(3434), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_indirect_strength) * IntType(100)), .5, IntType(0), no_limit * IntType(100), IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_indirect_strength, ID_action_project_render_indirect_strength);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"reflections"*/ STR(132), DsMap(global::collapse_map).Value(/*"reflections"*/ STR(132)), ID_action_project_render_reflections, sVar(project_render_reflections), /*"renderreflections"*/ STR(3435));
		tab_next(self);
		if (sVar(project_render_reflections) > 0 && DsMap(global::collapse_map).Value(/*"reflections"*/ STR(132)) > 0)
		{
			tab_collapse_start(self);
			tab_control_meter(self);
			draw_meter(self, /*"renderreflectionsprecision"*/ STR(3436), sVar(dx), sVar(dy), sVar(dw), round(sVar(project_render_reflections_precision) * IntType(100)), IntType(0), IntType(100), IntType(30), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_reflections_precision, ID_action_project_render_reflections_precision, /*"renderreflectionsprecisiontip"*/ STR(3437));
			tab_next(self);
			tab_control_meter(self);
			draw_meter(self, /*"renderreflectionsfadeamount"*/ STR(3438), sVar(dx), sVar(dy), sVar(dw), round(sVar(project_render_reflections_fade_amount) * IntType(100)), IntType(0), IntType(100), IntType(50), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_reflections_fade_amount, ID_action_project_render_reflections_fade_amount, /*"renderreflectionsfadeamounttip"*/ STR(3439));
			tab_next(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderreflectionsthickness"*/ STR(3440), sVar(dx), sVar(dy), dragger_width, sVar(project_render_reflections_thickness), IntType(1), .1, no_limit, IntType(1), .1, ObjType(obj_category, idVar(sVar(tab), render))->tbx_reflections_thickness, ID_action_project_render_reflections_thickness, null_, true, false, /*"renderreflectionsthicknesstip"*/ STR(3441));
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"glow"*/ STR(133), DsMap(global::collapse_map).Value(/*"glow"*/ STR(133)), ID_action_project_render_glow, sVar(project_render_glow), /*"renderglow"*/ STR(3442));
		tab_next(self);
		if (sVar(project_render_glow) > 0 && DsMap(global::collapse_map).Value(/*"glow"*/ STR(133)) > 0)
		{
			tab_collapse_start(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderglowradius"*/ STR(3443), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_glow_radius) * IntType(100)), .5, IntType(0), no_limit * IntType(100), IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_glow_radius, ID_action_project_render_glow_radius);
			tab_next(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderglowintensity"*/ STR(3444), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_glow_intensity) * IntType(100)), .5, IntType(0), no_limit * IntType(100), IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_glow_intensity, ID_action_project_render_glow_intensity);
			tab_next(self);
			tab_control_switch(self);
			draw_button_collapse(self, /*"glow_falloff"*/ STR(134), DsMap(global::collapse_map).Value(/*"glow_falloff"*/ STR(134)), ID_action_project_render_glow_falloff, sVar(project_render_glow_falloff), /*"renderglowfalloff"*/ STR(3445));
			tab_next(self);
			if (sVar(project_render_glow_falloff) > 0 && DsMap(global::collapse_map).Value(/*"glow_falloff"*/ STR(134)) > 0)
			{
				tab_collapse_start(self);
				tab_control_dragger(self);
				draw_dragger(self, /*"renderglowfalloffradius"*/ STR(3446), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_glow_falloff_radius) * IntType(100)), .5, IntType(0), no_limit * IntType(100), IntType(200), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_glow_falloff_radius, ID_action_project_render_glow_falloff_radius);
				tab_next(self);
				tab_control_dragger(self);
				draw_dragger(self, /*"renderglowfalloffintensity"*/ STR(3447), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_glow_falloff_intensity) * IntType(100)), .5, IntType(0), no_limit * IntType(100), IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_glow_falloff_intensity, ID_action_project_render_glow_falloff_intensity);
				tab_next(self);
				tab_collapse_end(self, false);
			}
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"aa"*/ STR(135), DsMap(global::collapse_map).Value(/*"aa"*/ STR(135)), ID_action_project_render_aa, sVar(project_render_aa), /*"renderaa"*/ STR(3448), /*"renderaatip"*/ STR(3449));
		tab_next(self);
		if (sVar(project_render_aa) > 0 && DsMap(global::collapse_map).Value(/*"aa"*/ STR(135)) > 0)
		{
			tab_collapse_start(self);
			tab_control_meter(self);
			draw_meter(self, /*"renderaapower"*/ STR(3450), sVar(dx), sVar(dy), sVar(dw), round(sVar(project_render_aa_power) * IntType(100)), IntType(0), IntType(300), IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_aa_power, ID_action_project_render_aa_power);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"texfilter"*/ STR(127), DsMap(global::collapse_map).Value(/*"texfilter"*/ STR(127)), ID_action_project_render_texture_filtering, sVar(project_render_texture_filtering), /*"rendertexturefiltering"*/ STR(3451), /*"rendertexturefilteringtip"*/ STR(3452));
		tab_next(self);
		if (sVar(project_render_texture_filtering) > 0 && DsMap(global::collapse_map).Value(/*"texfilter"*/ STR(127)) > 0)
		{
			tab_collapse_start(self);
			tab_control_switch(self);
			draw_switch(self, /*"rendertexturefilteringtransparentblocks"*/ STR(3453), sVar(dx), sVar(dy), sVar(project_render_transparent_block_texture_filtering), ID_action_project_render_transparent_block_texture_filtering);
			tab_next(self);
			tab_control_meter(self);
			draw_meter(self, /*"rendertexturefilteringlevel"*/ STR(3454), sVar(dx), sVar(dy), sVar(dw), sVar(project_render_texture_filtering_level), IntType(0), IntType(5), IntType(1), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_texture_filtering_level, ID_action_project_render_texture_filtering_level);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"light_management"*/ STR(136), DsMap(global::collapse_map).Value(/*"light_management"*/ STR(136)), null_, true, /*"renderlightmanagement"*/ STR(3455));
		tab_next(self);
		if (DsMap(global::collapse_map).Value(/*"light_management"*/ STR(136)) > 0)
		{
			tab_collapse_start(self);
			if (sVar(project_render_tonemapper) == e_tonemapper_REINHARD)
				sVar(text) = text_get({ /*"rendertonemapperreinhard"*/ STR(1527) });
			else
				if (sVar(project_render_tonemapper) == e_tonemapper_ACES)
					sVar(text) = text_get({ /*"rendertonemapperaces"*/ STR(1528) });
				else
					sVar(text) = text_get({ /*"rendertonemappernone"*/ STR(1526) });
			
			
			tab_control_menu(self);
			draw_button_menu(self, { /*"rendertonemapper"*/ STR(1524), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), sVar(project_render_tonemapper), sVar(text), ID_action_project_render_tonemapper });
			tab_next(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderexposure"*/ STR(3456), sVar(dx), sVar(dy), dragger_width, sVar(project_render_exposure), 0.01, IntType(0), no_limit, IntType(1), 0.01, ObjType(obj_category, idVar(sVar(tab), render))->tbx_exposure, ID_action_project_render_exposure);
			tab_next(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"rendergamma"*/ STR(3457), sVar(dx), sVar(dy), dragger_width, sVar(project_render_gamma), 0.01, IntType(0), no_limit, 2.2, 0.01, ObjType(obj_category, idVar(sVar(tab), render))->tbx_gamma, ID_action_project_render_gamma);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"models_scenery"*/ STR(137), DsMap(global::collapse_map).Value(/*"models_scenery"*/ STR(137)), null_, true, /*"rendermodelsscenery"*/ STR(3458));
		tab_next(self);
		if (DsMap(global::collapse_map).Value(/*"models_scenery"*/ STR(137)) > 0)
		{
			tab_collapse_start(self);
			tab_control_togglebutton(self);
			togglebutton_add(self, { /*"renderbendstylerealistic"*/ STR(3459), null_, /*"realistic"*/ STR(1914), sVar(project_bend_style) == /*"realistic"*/ STR(1914), ID_action_project_bend_style });
			togglebutton_add(self, { /*"renderbendstyleblocky"*/ STR(3460), null_, /*"blocky"*/ STR(1913), sVar(project_bend_style) == /*"blocky"*/ STR(1913), ID_action_project_bend_style });
			draw_togglebutton(self, /*"renderbendstyle"*/ STR(3461), sVar(dx), sVar(dy));
			tab_next(self);
			tab_control_switch(self);
			draw_switch(self, /*"renderopaqueleaves"*/ STR(3462), sVar(dx), sVar(dy), sVar(project_render_opaque_leaves), ID_action_project_render_opaque_leaves);
			tab_next(self);
			tab_control_switch(self);
			draw_switch(self, /*"renderliquidanimation"*/ STR(3463), sVar(dx), sVar(dy), sVar(project_render_liquid_animation), ID_action_project_render_liquid_animation);
			tab_next(self);
			tab_control_switch(self);
			draw_switch(self, /*"renderwaterreflections"*/ STR(3464), sVar(dx), sVar(dy), sVar(project_render_water_reflections), ID_action_project_render_water_reflections, /*"renderwaterreflectionshelp"*/ STR(3465));
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"glint"*/ STR(138), DsMap(global::collapse_map).Value(/*"glint"*/ STR(138)), null_, true, /*"renderglint"*/ STR(3466));
		tab_next(self);
		if (DsMap(global::collapse_map).Value(/*"glint"*/ STR(138)) > 0)
		{
			tab_collapse_start(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderglintspeed"*/ STR(3467), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_glint_speed) * IntType(100)), IntType(1), IntType(0), no_limit, IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_glint_speed, ID_action_project_render_glint_speed);
			tab_next(self);
			tab_control_dragger(self);
			draw_dragger(self, /*"renderglintstrength"*/ STR(3468), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_glint_strength) * IntType(100)), IntType(1), IntType(0), no_limit, IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_glint_strength, ID_action_project_render_glint_strength);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_switch(self);
		draw_button_collapse(self, /*"openimagedenoise"*/ STR(139), DsMap(global::collapse_map).Value(/*"openimagedenoise"*/ STR(139)), ID_action_project_render_open_image_denoise, sVar(project_render_open_image_denoise), /*"renderopenimagedenoise"*/ STR(3469));
		tab_next(self);
		if (sVar(project_render_open_image_denoise) > 0 && DsMap(global::collapse_map).Value(/*"openimagedenoise"*/ STR(139)) > 0)
		{
			tab_collapse_start(self);
			tab_control_switch(self);
			draw_switch(self, /*"renderopenimagedenoiseusediffuse"*/ STR(3470), sVar(dx), sVar(dy), sReal(project_render_open_image_denoise_usediffuse), ID_action_project_render_open_image_denoise_usediffuse);
			tab_next(self);
			tab_control_switch(self);
			draw_switch(self, /*"renderopenimagedenoiseusenormals"*/ STR(3471), sVar(dx), sVar(dy), sReal(project_render_open_image_denoise_usenormals), ID_action_project_render_open_image_denoise_usenormals);
			tab_next(self);
			tab_collapse_end(self);
		}
		tab_control_dragger(self);
		draw_dragger(self, /*"renderdefaultemissive"*/ STR(3472), sVar(dx), sVar(dy), dragger_width, round(sVar(project_render_block_emissive) * IntType(100)), IntType(1), IntType(0), no_limit, IntType(100), IntType(1), ObjType(obj_category, idVar(sVar(tab), render))->tbx_block_emissive, ID_action_project_render_block_emissive, null_, true, false, /*"renderdefaultemissivetip"*/ STR(3473));
		tab_next(self);
		tab_control_dragger(self);
		draw_dragger(self, /*"renderdefaultsubsurfaceradius"*/ STR(3474), sVar(dx), sVar(dy), dragger_width, sVar(project_render_block_subsurface), .1, IntType(0), no_limit, IntType(8), 0.01, ObjType(obj_category, idVar(sVar(tab), render))->tbx_block_subsurface_radius, ID_action_project_render_block_subsurface, null_, true, false, /*"renderdefaultsubsurfaceradiustip"*/ STR(3475));
		tab_next(self);
		sVar(text) = (sVar(project_render_alpha_mode) == e_alpha_mode_BLEND ? text_get({ /*"renderalphamodeblend"*/ STR(1523) }) : text_get({ /*"renderalphamodehashed"*/ STR(1522) }));
		tab_control_menu(self);
		draw_button_menu(self, { /*"renderalphamode"*/ STR(1519), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), sVar(project_render_alpha_mode), sVar(text), ID_action_project_render_alpha_mode });
		tab_next(self);
		tab_control_switch(self);
		draw_switch(self, /*"rendermaterialmaps"*/ STR(3476), sVar(dx), sVar(dy), sVar(project_render_material_maps), ID_action_project_render_material_maps, /*"rendermaterialmapstip"*/ STR(3477));
		tab_next(self);
		tab_control(self, IntType(24));
		if (draw_button_icon(self, { /*"renderimport"*/ STR(3478), sVar(dx), sVar(dy), IntType(24), IntType(24), false, icons_SETTINGS_IMPORT, null_, false, /*"tooltipsettingsimport"*/ STR(3479) }))
			action_project_render_import(self);
		if (draw_button_icon(self, { /*"renderexport"*/ STR(3480), sVar(dx) + IntType(28), sVar(dy), IntType(24), IntType(24), false, icons_SETTINGS_EXPORT, null_, false, /*"tooltipsettingsexport"*/ STR(3481) }))
			action_project_render_export(self);
		if (draw_button_icon(self, { /*"rendersetdefault"*/ STR(3482), sVar(dx) + (IntType(28) * IntType(2)), sVar(dy), IntType(24), IntType(24), false, icons_SETTINGS_SETDEFAULT, null_, false, /*"tooltipsettingssetdefault"*/ STR(3483) }))
		{
			if (question(text_get({ /*"questionsetasdefault"*/ STR(3484) })))
				action_project_render_export(self, render_default_file);
		}
		draw_button_icon(self, { /*"renderreset"*/ STR(3485), sVar(dx) + (IntType(28) * IntType(3)), sVar(dy), IntType(24), IntType(24), false, icons_RESET, ID_action_project_render_reset, false, /*"tooltipsettingsreset"*/ STR(3486) });
		tab_next(self);
		return 0.0;
	}
	
	RealType tab_properties_resources(ScopeAny self)
	{
		IntType capwid;
		tab_control(self, IntType(160));
		preview_draw(self, sInt(res_preview), sVar(dx), sVar(dy), sVar(dw), IntType(160));
		tab_next(self);
		tab_control_sortlist(self, IntType(6));
		sortlist_draw(self, ObjType(obj_category, idInt(sVar(tab), resources))->list, sVar(dx), sVar(dy), sVar(dw), sReal(tab_control_h), global::res_edit);
		tab_next(self);
		tab_control(self, IntType(24));
		if (draw_button_icon(self, { /*"resourcesnew"*/ STR(3487), sVar(dx), sVar(dy), IntType(24), IntType(24), false, icons_ASSET_IMPORT, null_, false, /*"tooltipresourcenew"*/ STR(3488) }))
			action_toolbar_import_asset(self);
		if (draw_button_icon(self, { /*"previewexport"*/ STR(3489), sVar(dx) + IntType(28), sVar(dy), IntType(24), IntType(24), false, icons_ASSET_EXPORT, null_, (!(global::res_edit > 0) || idVar(global::res_edit, type) == e_res_type_FROM_WORLD), /*"tooltipresourcesave"*/ STR(3490) }))
			action_res_export(self);
		if (draw_button_icon(self, { /*"resourcesreload"*/ STR(3491), sVar(dx) + (IntType(28) * IntType(2)), sVar(dy), IntType(24), IntType(24), false, icons_RELOAD, null_, (!(global::res_edit > 0) || global::res_edit == global::mc_res), /*"tooltipresourcereload"*/ STR(3492) }))
			action_res_reload(self);
		if (draw_button_icon(self, { /*"resourcesreplace"*/ STR(3493), sVar(dx) + (IntType(28) * IntType(3)), sVar(dy), IntType(24), IntType(24), false, icons_FOLDER, null_, (!(global::res_edit > 0) || global::res_edit == global::mc_res || idVar(global::res_edit, type) == e_res_type_FROM_WORLD), /*"tooltipresourcereplace"*/ STR(3494) }))
			action_res_replace(self);
		if (draw_button_icon(self, { /*"resourcesremove"*/ STR(3495), sVar(dx) + (IntType(28) * IntType(4)), sVar(dy), IntType(24), IntType(24), false, icons_DELETE, null_, (!(global::res_edit > 0) || global::res_edit == global::mc_res), /*"tooltipresourceremove"*/ STR(3496) }))
			action_res_remove(self);
		tab_next(self);
		if (global::res_edit == null_)
			return IntType(0);
		if (idVar(global::res_edit, type) == e_res_type_SCENERY)
		{
			tab_control_checkbox(self);
			draw_checkbox(self, /*"resourcessceneryrandomize"*/ STR(3497), sVar(dx), sVar(dy), idVar(global::res_edit, scenery_randomize), ID_action_res_scenery_randomize, /*"resourcessceneryrandomizehelp"*/ STR(3498));
			tab_next(self);
		}
		if (idVar(global::res_edit, type) == e_res_type_PACK)
		{
			capwid = text_caption_width(self, { /*"resourcespackimage"*/ STR(1396), /*"resourcespackimagecharacter"*/ STR(3499), /*"resourcespackimagecolormap"*/ STR(3500), /*"resourcespackimageparticles"*/ STR(3501) });
			tab_control_menu(self);
			draw_button_menu(self, { /*"resourcespackimage"*/ STR(1396), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), ObjType(obj_preview, sInt(res_preview))->pack_image, text_get({ /*"resourcespack"*/ STR(3502) + ObjType(obj_preview, sInt(res_preview))->pack_image }), ID_action_res_preview_pack_image, false });
			tab_next(self);
			switch (StringType(ObjType(obj_preview, sInt(res_preview))->pack_image).id)
			{
				case 1399: // modeltextures
				{
					tab_control_menu(self);
					draw_button_menu(self, { /*"resourcespackmaterial"*/ STR(1412), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), ObjType(obj_preview, sInt(res_preview))->pack_image_material, text_get({ /*"resourcespackmaterial"*/ STR(1412) + ObjType(obj_preview, sInt(res_preview))->pack_image_material }), ID_action_res_preview_pack_image_material, false });
					tab_next(self);
					tab_control_menu(self);
					draw_button_menu(self, { /*"resourcespackimagemodeltexture"*/ STR(1416), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), ObjType(obj_preview, sInt(res_preview))->pack_model_texture, ObjType(obj_preview, sInt(res_preview))->pack_model_texture, ID_action_res_preview_pack_model_texture, false });
					tab_next(self);
					break;
				}
				
				case 567: // itemsheet
				{
					tab_control_menu(self);
					draw_button_menu(self, { /*"resourcespackmaterial"*/ STR(1412), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), ObjType(obj_preview, sInt(res_preview))->pack_image_material, text_get({ /*"resourcespackmaterial"*/ STR(1412) + ObjType(obj_preview, sInt(res_preview))->pack_image_material }), ID_action_res_preview_pack_image_material, false });
					tab_next(self);
					break;
				}
				
				case 569: // blocksheet
				{
					tab_control_menu(self);
					draw_button_menu(self, { /*"resourcespackmaterial"*/ STR(1412), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), ObjType(obj_preview, sInt(res_preview))->pack_image_material, text_get({ /*"resourcespackmaterial"*/ STR(1412) + ObjType(obj_preview, sInt(res_preview))->pack_image_material }), ID_action_res_preview_pack_image_material, false });
					tab_next(self);
					tab_control_togglebutton(self);
					togglebutton_add(self, { /*"resourcespackimageblocksheetstatic"*/ STR(3503), null_, IntType(0), !(ObjType(obj_preview, sInt(res_preview))->pack_block_sheet_ani > 0), ID_action_res_preview_pack_block_sheet_ani });
					togglebutton_add(self, { /*"resourcespackimageblocksheetanimated"*/ STR(3504), null_, IntType(1), ObjType(obj_preview, sInt(res_preview))->pack_block_sheet_ani, ID_action_res_preview_pack_block_sheet_ani });
					draw_togglebutton(self, /*"resourcespackimageblocksheet"*/ STR(3505), sVar(dx), sVar(dy));
					tab_next(self);
					break;
				}
				
				case 1402: // colormap
				{
					tab_control_togglebutton(self);
					togglebutton_add(self, { /*"resourcespackimagecolormapgrass"*/ STR(3506), null_, IntType(0), ObjType(obj_preview, sInt(res_preview))->pack_colormap == IntType(0), ID_action_res_preview_pack_colormap });
					togglebutton_add(self, { /*"resourcespackimagecolormapfoliage"*/ STR(3507), null_, IntType(1), ObjType(obj_preview, sInt(res_preview))->pack_colormap == IntType(1), ID_action_res_preview_pack_colormap });
					draw_togglebutton(self, /*"resourcespackimagecolormap"*/ STR(3500), sVar(dx), sVar(dy));
					tab_next(self);
					break;
				}
				
				case 571: // particlesheet
				{
					tab_control_togglebutton(self);
					togglebutton_add(self, { /*"resourcespackimageparticlesimage1"*/ STR(3508), null_, IntType(0), ObjType(obj_preview, sInt(res_preview))->pack_particles == IntType(0), ID_action_res_preview_pack_particles });
					togglebutton_add(self, { /*"resourcespackimageparticlesimage2"*/ STR(3509), null_, IntType(1), ObjType(obj_preview, sInt(res_preview))->pack_particles == IntType(1), ID_action_res_preview_pack_particles });
					draw_togglebutton(self, /*"resourcespackimageparticles"*/ STR(3501), sVar(dx), sVar(dy));
					tab_next(self);
					break;
				}
				
			}
			
		}
		else
			if (idVar(global::res_edit, type) == e_res_type_ITEM_SHEET)
			{
				global::axis_edit = X_;
				tab_control_dragger(self);
				draw_dragger(self, /*"resourcesitemsheetsizerows"*/ STR(3510), sVar(dx), sVar(dy), dragger_width, idVar(global::res_edit, item_sheet_size).Value(X_), 1.0 / 10.0, IntType(1), no_limit, item_sheet_width, IntType(1), ObjType(obj_category, idInt(sVar(tab), resources))->tbx_item_sheet_width, ID_action_res_item_sheet_size);
				tab_next(self);
				global::axis_edit = Y_;
				tab_control_dragger(self);
				draw_dragger(self, /*"resourcesitemsheetsizecolumns"*/ STR(3511), sVar(dx), sVar(dy), dragger_width, idVar(global::res_edit, item_sheet_size).Value(Y_), 1.0 / 10.0, IntType(1), no_limit, item_sheet_height, IntType(1), ObjType(obj_category, idInt(sVar(tab), resources))->tbx_item_sheet_height, ID_action_res_item_sheet_size);
				tab_next(self);
			}
			else
				if (idBool(global::res_edit, scenery_structure))
				{
					if (idInt(global::res_edit, scenery_palette_size) > IntType(0))
					{
						tab_control_menu(self);
						draw_button_menu(self, { /*"resourcesscenerystructurepalette"*/ STR(1417), e_menu_LIST, sVar(dx), sVar(dy), sVar(dw), IntType(24), idVar(global::res_edit, scenery_palette), text_get({ /*"resourcesscenerystructurepalettenumber"*/ STR(1418), idVar(global::res_edit, scenery_palette) + IntType(1) }), ID_action_res_scenery_palette });
						tab_next(self);
					}
					VarType busy = sVar(window_busy);
					VarType focus = sVar(window_focus);
					tab_control_meter(self);
					draw_meter(self, /*"resourcesscenerystructureintegrity"*/ STR(3512), sVar(dx), sVar(dy), sVar(dw), round(idVar(global::res_edit, scenery_integrity) * IntType(100)), IntType(0), IntType(100), IntType(100), IntType(1), ObjType(obj_category, idInt(sVar(tab), resources))->tbx_scenery_integrity, ID_action_res_scenery_integrity);
					tab_next(self);
					if ((focus == string(ObjType(obj_category, idInt(sVar(tab), resources))->tbx_scenery_integrity) && sVar(window_focus) == /*""*/ STR(0)) || (sVar(window_busy) == /*""*/ STR(0) && (busy == /*"resourcesscenerystructureintegrity"*/ STR(3512) || busy == /*"resourcesscenerystructureintegrityinputdrag"*/ STR(3513))))
					{
						withOne (Object, global::res_edit, self->id)
							res_load(self);
						
					}
					tab_control_checkbox(self);
					draw_checkbox(self, /*"resourcesscenerystructureintegrityinvert"*/ STR(3514), sVar(dx), sVar(dy), idVar(global::res_edit, scenery_integrity_invert), ID_action_res_scenery_integrity_invert);
					tab_next(self);
				}
		
		
		if ((idVar(global::res_edit, type) == e_res_type_BLOCK_SHEET || idVar(global::res_edit, type) == e_res_type_DOWNLOADED_SKIN || idVar(global::res_edit, type) == e_res_type_ITEM_SHEET || idVar(global::res_edit, type) == e_res_type_PACK || idVar(global::res_edit, type) == e_res_type_PARTICLE_SHEET || idVar(global::res_edit, type) == e_res_type_SKIN || idVar(global::res_edit, type) == e_res_type_TEXTURE || idVar(global::res_edit, type) == e_res_type_MODEL) && global::res_edit != global::mc_res && sReal(setting_advanced_mode) > 0 && sVar(project_render_material_maps) > 0)
		{
			tab_control_togglebutton(self);
			togglebutton_add(self, { /*"resourcesmaterialformatlabpbr"*/ STR(3515), null_, e_material_FORMAT_LABPBR, idVar(global::res_edit, material_format) == e_material_FORMAT_LABPBR, ID_action_res_material_format });
			togglebutton_add(self, { /*"resourcesmaterialformatseus"*/ STR(3516), null_, e_material_FORMAT_SEUS, idVar(global::res_edit, material_format) == e_material_FORMAT_SEUS, ID_action_res_material_format });
			draw_togglebutton(self, /*"resourcesmaterialformat"*/ STR(3517), sVar(dx), sVar(dy));
			tab_next(self);
		}
		if (idVar(global::res_edit, filename) != /*""*/ STR(0))
		{
			IntType wid = text_max_width({ /*"resourcesfilenameopen"*/ STR(3518) }) + IntType(20);
			capwid = text_caption_width(self, { /*"resourcesfilename"*/ STR(3519) });
			tab_control(self, IntType(24));
			draw_set_font(sInt(font_label));
			wid = string_width(text_get({ /*"resourcesfilename"*/ STR(3519) }) + /*":"*/ STR(788));
			sBool(tip_wrap) = false;
			tip_set(self, string_remove_newline(sStr(project_folder) + /*"/"*/ STR(20) + idVar(global::res_edit, filename)), sVar(dx), sVar(dy), sVar(dw) - wid, IntType(24));
			sBool(tip_wrap) = true;
			draw_label(self, { text_get({ /*"resourcesfilename"*/ STR(3519) }) + /*":"*/ STR(788), sVar(dx), sVar(dy) + IntType(14), fa_left, fa_middle, global::c_text_secondary, global::a_text_secondary });
			draw_label(self, { string_limit(string_remove_newline(idVar(global::res_edit, filename)), sVar(dw) - wid - IntType(32)), sVar(dx) + wid + IntType(8), sVar(dy) + IntType(14), fa_left, fa_middle, global::c_text_main, global::a_text_main, sInt(font_value) });
			if (draw_button_icon(self, { /*"resourcesfilenameopen"*/ STR(3518), sVar(dx) + sVar(dw) - IntType(24), sVar(dy), IntType(24), IntType(24), false, icons_FOLDER, null_, idVar(global::res_edit, type) == e_res_type_SCENERY, /*"tooltipresourceopen"*/ STR(3520) }))
				open_url(sStr(project_folder) + /*"/"*/ STR(20) + idVar(global::res_edit, filename));
			tab_next(self);
		}
		return 0.0;
	}
	
}
